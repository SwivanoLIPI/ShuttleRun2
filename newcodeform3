Imports System.Drawing
Imports System.Windows.Forms
Imports System.IO.Ports
Imports System.Linq
Imports System.Math
Imports System.IO
Imports System.Text
Imports System.Management
Imports System.Net
Imports System.Net.Sockets
Imports System.Threading ' Untuk menggunakan Timer
Imports System.Diagnostics
Imports System.Drawing.Printing
Imports System.Threading.Tasks
Imports System.Drawing.Imaging
Imports System.Drawing.Drawing2D
'Imports System.IO.Ports
Imports System
Imports System.Text.RegularExpressions
Imports System.Data
Imports System.Collections.Generic
Imports System.Runtime.InteropServices

Public Class Form3
    Private pointX As Double
    Private direction As Integer = 1
    Private bufferGraphics As BufferedGraphics
    Private bufferContext As BufferedGraphicsContext
    Private elapsedTime As Integer = 0
    Private WithEvents zerialPort1 As New IO.Ports.SerialPort()
    Private WithEvents zerialPort2 As New IO.Ports.SerialPort()
    Private closing As Boolean = False
    Private lastFilteredValue As String = "0" ' Variabel untuk menyimpan nilai terakhir yang ditemukan
    Private lastFilteredValue2 As String = "0" ' Variabel untuk menyimpan nilai terakhir yang ditemukan
    ' Koordinat pusat untuk gerakan infinity
    Private centerX As Integer
    Private centerY As Integer
    Private WithEvents serialPort As New SerialPort()
    ' Sudut yang digunakan untuk menggerakkan titik
    Private angle As Double = 0
    ' Kecepatan pergerakan titik
    Private speed As Double = 0.1
    ' Delegate untuk memperbarui DataGridView2
    Delegate Sub UpdateDataGridView2Delegate(ByVal serialData As String)
    Delegate Sub UpdateDataGridView3Delegate(ByVal serialData2 As String)
    ' Bitmap untuk double buffering
    Private bitmap As Bitmap
    Private bitmapGraphics As Graphics
    ' Hitung jam, menit, dan detik
    Dim hoursz As Integer = elapsedTime \ 3600
    Dim minutesz As Integer = (elapsedTime Mod 3600) \ 60
    Dim secondsz As Integer = elapsedTime Mod 60
    ' Format waktu menjadi hh:mm:ss
    Dim timeString As String = String.Format("{0:00}:{1:00}:{2:00}", hoursz, minutesz, secondsz)
    ' Deklarasi SerialPort dan Timer
    'Dim WithEvents SerialPort2 As New SerialPort()
    '   Dim WithEvents Timer9 As New Timer()
    ' Import fungsi dari kernel32.dll
    <DllImport("kernel32.dll", SetLastError:=True)>
    Private Shared Function EscapeCommFunction(ByVal hFile As IntPtr, ByVal dwFunc As Integer) As Boolean
    End Function

    ' Konstanta fungsi EscapeCommFunction
    Private Const CLRBREAK As Integer = &H9
    Private Const CLRDTR As Integer = &H6
    Private Const CLRRTS As Integer = &H4

    Private Sub ResetCOMPort()
        Try
            Dim portName As String = "COM1" ' Ganti dengan nama port COM yang ingin di-reset
            Dim portHandle As IntPtr = CreateFile("\\.\COM1", FileAccess.ReadWrite, FileShare.None, IntPtr.Zero, FileMode.Open, 0, IntPtr.Zero)

            If portHandle <> IntPtr.Zero Then
                ' Reset DTR dan RTS
                EscapeCommFunction(portHandle, CLRRTS)
                EscapeCommFunction(portHandle, CLRDTR)

                ' Tunggu sebentar sebelum menutup handle
                System.Threading.Thread.Sleep(100)

                ' Tutup handle port
                CloseHandle(portHandle)
            Else
                MessageBox.Show("Gagal membuka handle port COM.")
            End If
        Catch ex As Exception
            MessageBox.Show("Error: " & ex.Message)
        End Try
    End Sub

    'Private Sub Button2_Click(ByVal sender As Object, ByVal e As EventArgs) Handles Button2.Click

    ' End Sub

    ' Import fungsi untuk CreateFile dan CloseHandle
    <DllImport("kernel32.dll", SetLastError:=True, CharSet:=CharSet.Auto)>
    Private Shared Function CreateFile(ByVal lpFileName As String, ByVal dwDesiredAccess As FileAccess, ByVal dwShareMode As FileShare, ByVal lpSecurityAttributes As IntPtr, ByVal dwCreationDisposition As FileMode, ByVal dwFlagsAndAttributes As Integer, ByVal hTemplateFile As IntPtr) As IntPtr
    End Function

    <DllImport("kernel32.dll", SetLastError:=True)>
    Private Shared Function CloseHandle(ByVal hObject As IntPtr) As Boolean
    End Function
    Private Sub InitializeChart()
        ' Bersihkan data sebelum menambahkan data baru
        Chart1.Series.Clear()

        ' Tambahkan Series baru ke Chart
        Dim series As New System.Windows.Forms.DataVisualization.Charting.Series()
        Chart1.Series.Add(series)

        ' Atur tipe chart (misalnya, Line)
        series.ChartType = System.Windows.Forms.DataVisualization.Charting.SeriesChartType.Spline

        ' Atur label sumbu x dan sumbu y
        Chart1.ChartAreas(0).AxisX.Title = "Data ke-"
        Chart1.ChartAreas(0).AxisY.Title = "Std. Deviasi"
    End Sub
    ' Metode untuk menggambar garis putus-putus
    Private Sub DrawDashedLine(ByVal x1 As Double, ByVal y1 As Double, ByVal x2 As Double, ByVal y2 As Double)
        Using g As Graphics = Graphics.FromImage(bitmap)
            ' Gambar garis putus-putus
            Dim pen As New Pen(Color.Orange, 2)
            pen.DashStyle = DashStyle.Dash
            g.DrawLine(pen, CSng(x1) + 5, CSng(y1) + 3, CSng(x2) + 10, CSng(y2) + 10)

            ' Hitung posisi tengah garis
            Dim midX As Double = (x1 + x2) / 2
            Dim midY As Double = (y1 + y2) / 2

            ' Gambar label di tengah garis
            Dim label As String = "R13"
            Dim font As New Font("Arial", 10, FontStyle.Regular)
            Dim brush As New SolidBrush(Color.Black)

            ' Hitung ukuran label untuk memastikan posisinya di tengah
            Dim labelSize As SizeF = g.MeasureString(label, font)
            Dim labelX As Double = midX - (labelSize.Width / 2)
            Dim labelY As Double = midY - (labelSize.Height / 2)

            g.DrawString(label, font, brush, CInt(labelX), CInt(labelY))
        End Using
    End Sub

    ' Metode untuk menggambar garis putus-putus
    Private Sub DrawDashedLine2(ByVal x1 As Double, ByVal y1 As Double, ByVal x2 As Double, ByVal y2 As Double)
        Using g As Graphics = Graphics.FromImage(bitmap)
            ' Gambar garis putus-putus
            Dim pen As New Pen(Color.LightBlue, 2)
            pen.DashStyle = DashStyle.Dash
            g.DrawLine(pen, CSng(x1) + 5, CSng(y1) + 3, CSng(x2) + 10, CSng(y2) + 10)

            ' Hitung posisi tengah garis
            Dim midX As Double = (x1 + x2) / 2
            Dim midY As Double = (y1 + y2) / 2

            ' Gambar label di tengah garis
            Dim label As String = "R23"
            Dim font As New Font("Arial", 10, FontStyle.Regular)
            Dim brush As New SolidBrush(Color.Black)

            ' Hitung ukuran label untuk memastikan posisinya di tengah
            Dim labelSize As SizeF = g.MeasureString(label, font)
            Dim labelX As Double = midX - (labelSize.Width / 2)
            Dim labelY As Double = midY - (labelSize.Height / 2)

            g.DrawString(label, font, brush, CInt(labelX), CInt(labelY))
        End Using
    End Sub

    Private Sub Form3_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        SerialPort1.Close()
        SerialPort2.Close()
        Timer1.Stop()
        Timer10.Stop()
        TabControl1.SelectedIndex = 1
        LoadComPorts()
        Warning.Hide()
        warnchart.Hide()

        TabControl1.SelectedIndex = 0
        ' Inisialisasi BufferedGraphicsContext
        bufferContext = BufferedGraphicsManager.Current
        bufferContext.MaximumBuffer = New Size(PictureBox1.Width + 1, PictureBox1.Height + 1)
        HitungJumlahSampelMinimum()
        Timer2.Interval = 1000
        Timer2.Enabled = True
        Timer2.Start()
        ' A12C.CheckState = CheckState.Checked
        '    A21C.CheckState = CheckState.Checked
        '   R12C.CheckState = CheckState.Checked
        '   R11C.CheckState = CheckState.Checked
        '   R21C.CheckState = CheckState.Checked
        '   R22C.CheckState = CheckState.Checked

        InitializeChart()
        ' Inisialisasi DataGridView dengan 4 kolom
        DataGridView1.ColumnCount = 9
        DataGridView1.Columns(0).Name = "No"
        DataGridView1.Columns(1).Name = "Distance"
        DataGridView1.Columns(2).Name = "Rata-Rata"
        DataGridView1.Columns(3).Name = "Std. Dev"
        DataGridView1.Columns(4).Name = "Std. Error"
        DataGridView1.Columns(5).Name = "Gradient"
        DataGridView1.Columns(6).Name = "Coef. Var"

        DataGridView1.Columns(7).Name = "Z-Status"
        DataGridView1.Columns(8).Name = "Quartile"
        ' Atur lebar kolom
        DataGridView1.Columns(0).Width = 30  ' Lebar kolom "No"
        DataGridView1.Columns(1).Width = 60 ' Lebar kolom "Nilai Random"
        DataGridView1.Columns(2).Width = 70 ' Lebar kolom "Rata-Rata"
        DataGridView1.Columns(3).Width = 80 ' Lebar kolom "Standard Deviasi"
        DataGridView1.Columns(4).Width = 80 ' Lebar kolom "Standard Deviasi"
        DataGridView1.Columns(5).Width = 80 ' Lebar kolom "Standard Deviasi"
        DataGridView1.Columns(6).Width = 80 ' Lebar kolom "Standard Deviasi"

        DataGridView1.Columns(7).Width = 80
        DataGridView1.Columns(8).Width = 80
        DataGridView1.RowHeadersVisible = False
        ' Atur Timer
        ' Koordinat PictureBox
        Dim topLeft As Point = PictureBox1.Location
        Dim topRight As New Point(PictureBox1.Location.X + PictureBox1.Width, PictureBox1.Location.Y)
        Dim bottomLeft As New Point(PictureBox1.Location.X, PictureBox1.Location.Y + PictureBox1.Height)
        Dim bottomRight As New Point(PictureBox1.Location.X + PictureBox1.Width, PictureBox1.Location.Y + PictureBox1.Height)

        TextBox17.Text = "1062"
        TextBox18.Text = "1062"
        TextBox20.Text = "0"
        TextBox22.Text = "0"
        TextBox19.Text = "0"
        TextBox21.Text = "375"
        TextBox24.Text = "0"
        TextBox23.Text = "375"
        TextBox25.Text = Math.Abs(CSng(TextBox19.Text) - CSng(TextBox21.Text))
        AddHandler PictureBox1.Paint, AddressOf PictureBox1_Paint

        TextBox7.Text = Math.Abs(Val(TextBox19.Text) - Val(TextBox21.Text)) / 2
        UFPX.Text = UFPY.Text - 70 + (CSng(TextBox25.Text) / 1.8)
        TextBox3.Text = TextBox17.Text + 70 - (CSng(TextBox25.Text) / 1.8)
        UFPY.Text = CSng(TextBox24.Text) + 30
        TextBox6.Text = CSng(TextBox19.Text) + 30
        ' Gambar titik pada antena (gray)
        A1X.Text = "834"
        A1Y.Text = "356"
        A2X.Text = "694"
        A2Y.Text = "280"
        'MsgBox(DataGridView1.Rows(0).Cells(0).Value)
        'DataGridView1.Rows.RemoveAt(0)


    End Sub

    Private Sub LoadComPorts()
        ' Dapatkan daftar COM port yang tersedia
        Dim comPorts As String() = serialPort.GetPortNames()

        ' Hapus item lama di ComboBox
        ComboBoxComPorts.Items.Clear()
        ComboBoxComPorts2.Items.Clear()

        ' Menambahkan COM port ke ComboBox pertama
        For Each port As String In comPorts
            ComboBoxComPorts.Items.Add(port)

        Next

        ' Set ComboBoxComPorts ke nilai default jika ada
        If ComboBoxComPorts.Items.Count > 0 Then ComboBoxComPorts.SelectedIndex = 0

        ' Menambahkan COM port ke ComboBox kedua, pastikan tidak sama dengan yang ada di ComboBox pertama
        UpdateComboBoxComPorts2(False)
    End Sub

    Private Sub ComboBoxComPorts_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles ComboBoxComPorts.SelectedIndexChanged
        UpdateComboBoxComPorts2(True)
        DataGridView1.Rows.Clear()
    End Sub

    Private Sub ComboBoxComPorts2_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles ComboBoxComPorts2.SelectedIndexChanged
        UpdateComboBoxComPorts(True)
        DataGridView1.Rows.Clear()
    End Sub

    Private Sub UpdateComboBoxComPorts(ByVal updateComboBox2 As Boolean)
        Dim selectedPort As String = CStr(ComboBoxComPorts2.SelectedItem)

        If selectedPort Is Nothing Then Return

        ' Matikan event handler sementara
        RemoveHandler ComboBoxComPorts.SelectedIndexChanged, AddressOf ComboBoxComPorts_SelectedIndexChanged

        ComboBoxComPorts.Items.Clear()

        For Each port As String In serialPort.GetPortNames()
            If port <> selectedPort Then
                ComboBoxComPorts.Items.Add(port)
            End If
        Next

        If ComboBoxComPorts.Items.Count > 0 Then ComboBoxComPorts.SelectedIndex = 0

        ' Hidupkan kembali event handler
        AddHandler ComboBoxComPorts.SelectedIndexChanged, AddressOf ComboBoxComPorts_SelectedIndexChanged

        ' Perbarui ComboBoxComPorts2 jika diperlukan
        If updateComboBox2 Then
            UpdateComboBoxComPorts2(False)
        End If
        CmbPort.Text = ComboBoxComPorts.Text
    End Sub

    Private Sub UpdateComboBoxComPorts2(ByVal updateComboBox1 As Boolean)
        Dim selectedPort As String = CStr(ComboBoxComPorts.SelectedItem)

        If selectedPort Is Nothing Then Return

        ' Matikan event handler sementara
        RemoveHandler ComboBoxComPorts2.SelectedIndexChanged, AddressOf ComboBoxComPorts2_SelectedIndexChanged

        ComboBoxComPorts2.Items.Clear()

        For Each port As String In serialPort.GetPortNames()
            If port <> selectedPort Then
                ComboBoxComPorts2.Items.Add(port)
            End If
        Next

        If ComboBoxComPorts2.Items.Count > 0 Then ComboBoxComPorts2.SelectedIndex = 0

        ' Hidupkan kembali event handler
        AddHandler ComboBoxComPorts2.SelectedIndexChanged, AddressOf ComboBoxComPorts2_SelectedIndexChanged

        ' Perbarui ComboBoxComPorts jika diperlukan
        If updateComboBox1 Then
            UpdateComboBoxComPorts(False)
        End If
        CmbPort2.Text = ComboBoxComPorts2.Text
    End Sub
    ' Event handler untuk menangani perubahan tab yang dipilih di TabControl
    Private Sub TabControl1_SelectedIndexChanged(ByVal sender As Object, ByVal e As EventArgs) Handles TabControl1.SelectedIndexChanged
        ' Periksa apakah TabPage3 adalah tab yang saat ini dipilih
        If TabControl1.SelectedTab Is TabPage3 Then
            If DataGridView1.Rows.Count - 1 = 0 Then
                ' Klik tombol Button47
                Button43.PerformClick()
                btnCalculate.PerformClick()
            End If
        End If
    End Sub
    Private Sub PictureBox1_Paint(ByVal sender As Object, ByVal e As PaintEventArgs) Handles PictureBox1.Paint
        ' Lebar titik
        Dim diameter As Single = 20

        ' Koordinat PictureBox
        Dim topLeft As New Point(topLeft.X.ToString(), topLeft.Y.ToString())
        Dim topRight As New Point(topRight.X.ToString(), topRight.Y.ToString())
        Dim bottomLeft As New Point(bottomLeft.X.ToString(), bottomLeft.Y.ToString())
        Dim bottomRight As New Point(bottomRight.X.ToString(), bottomRight.Y.ToString())

        ' Buat brush untuk setiap titik
        Dim greenBrush As New SolidBrush(Color.Green)
        Dim blueBrush As New SolidBrush(Color.Blue)
        Dim redBrush As New SolidBrush(Color.Red)
        Dim blackBrush As New SolidBrush(Color.Black)
        Dim orangeBrush As New SolidBrush(Color.Orange)
        Dim purpleBrush As New SolidBrush(Color.Purple)
        Dim yellowBrush As New SolidBrush(Color.Yellow)
        Dim grayBrush As New SolidBrush(Color.Gray)
        Dim brownBrush As New SolidBrush(Color.Brown)


        ' Pen for drawing the line
        Dim blackPen As New Pen(Color.Black, 2)
        Dim purpPen As New Pen(Color.Purple, 2)

        ' finish line Get the coordinates from the TextBoxes
        Dim x3 As Single = CSng(UFPX.Text)
        Dim y3 As Single = CSng(UFPY.Text)
        Dim x4 As Single = CSng(UFPX.Text)
        Dim y4 As Single = CSng(LFPY.Text)

        ' Pen for drawing the line
        Dim bluePen As New Pen(Color.Blue, 2)



        ' Dispose the pen after use

        ' Draw the line on the PictureBox
        e.Graphics.DrawLine(bluePen, x3, y3, x4, y4)

        ' Dispose the pen after use
        bluePen.Dispose()


        ' start line Get the coordinates from the TextBoxes
        Dim x5 As Single = CSng(TextBox3.Text)
        Dim y5 As Single = CSng(TextBox6.Text)
        Dim x6 As Single = CSng(TextBox3.Text)
        Dim y6 As Single = CSng(TextBox26.Text)

        ' Pen for drawing the line
        Dim RedPen As New Pen(Color.Red, 2)

        e.Graphics.DrawLine(RedPen, x5, y5, x6, y6)

        ' Dispose the pen after use
        RedPen.Dispose()

        ' Gambar titik pada kanan atas(hijau)
        e.Graphics.FillEllipse(greenBrush, CSng(TextBox17.Text), CSng(TextBox19.Text), diameter, diameter)

        ' Gambar titik pada kanan bawah (Biru)
        e.Graphics.FillEllipse(blueBrush, CSng(TextBox18.Text), CSng(TextBox21.Text), diameter, diameter)

        ' Gambar titik pada kiri atas (Merah)
        e.Graphics.FillEllipse(redBrush, CSng(TextBox20.Text), CSng(TextBox24.Text), diameter, diameter)

        ' Gambar titik pada kiri bawah (hitam)
        e.Graphics.FillEllipse(blackBrush, CSng(TextBox22.Text), CSng(TextBox23.Text), diameter, diameter)

        P2X.Text = CSng(UFPX.Text) - (diameter / 2)
        P2Y.Text = CSng(UFPY.Text) + (CSng(TextBox25.Text) / CSng(2)) - diameter / 2

        ' Gambar titik pada tengah kanan (purple)
        e.Graphics.FillEllipse(purpleBrush, CSng(P2X.Text), CSng(P2Y.Text), diameter, diameter)



        TextBox31.Text = CSng(UFPX.Text) + (CSng(TextBox1.Text) / 2)
        TextBox32.Text = CSng(UFPY.Text) + (CSng(TextBox25.Text) / 2)


        ' Get the coordinates from the TextBoxes
        Dim x1 As Single = CSng(TextBox3.Text)
        Dim y1 As Single = CSng(TextBox32.Text)
        Dim x2 As Single = CSng(UFPX.Text)
        Dim y2 As Single = CSng(TextBox32.Text)

        ' Draw the line on the PictureBox
        e.Graphics.DrawLine(blackPen, x1, y1, x2, y2)

        'garis batas atas
        Dim x9 As Single = CSng(TextBox3.Text)
        Dim y9 As Single = CSng(UFPY.Text)
        Dim x10 As Single = CSng(UFPX.Text)
        Dim y10 As Single = CSng(UFPY.Text)

        ' Draw the line on the PictureBox
        e.Graphics.DrawLine(blackPen, x9, y9, x10, y10)

        'garis batas bawah

        Dim x11 As Single = CSng(TextBox3.Text)
        Dim y11 As Single = CSng(LFPY.Text)
        Dim x12 As Single = CSng(UFPX.Text)
        Dim y12 As Single = CSng(LFPY.Text)

        ' Draw the line on the PictureBox
        e.Graphics.DrawLine(blackPen, x11, y11, x12, y12)
        blackPen.Dispose()
        'garis batas bawah

        Dim x13 As Single = CSng(TextBox3.Text) + (CSng(TextBox25.Text) / 2)
        Dim y13 As Single = CSng(TextBox32.Text)
        Dim x14 As Single = CSng(UFPX.Text) - (CSng(TextBox25.Text) / 2)
        Dim y14 As Single = CSng(TextBox32.Text)

        ' Draw the line on the PictureBox
        'MsgBox("sudah di garisin")
        e.Graphics.DrawLine(purpPen, x13, y13, x14, y14)


        purpPen.Dispose()

        ' Ambil nilai dari TextBox4 dan TextBox8
        Dim y7 As Integer = CSng(UFPY.Text)
        Dim y8 As Integer = CSng(LFPY.Text)

        ' Hitung titik tengah Y dan jari-jari lingkaran
        Dim midY As Single = (y7 + y8) / 2
        Dim R As Single = CSng(TextBox25.Text) / 2
        Dim font As New Font("Arial", 9)
        Dim brush As New SolidBrush(Color.Black)
        ' Buat objek Graphics dari PictureBox1
        Dim g As Graphics = PictureBox1.CreateGraphics()
        ' g.Clear(PictureBox1.BackColor)
        ' Gambar titik pada tengah kanan (purple)

        P1X.Text = CSng(TextBox3.Text) - (diameter / 2)
        P1Y.Text = CSng(UFPY.Text) + (CSng(TextBox25.Text) / CSng(2)) - diameter / 2
        e.Graphics.FillEllipse(yellowBrush, CSng(P1X.Text), CSng(P1Y.Text), diameter, diameter)
        e.Graphics.DrawString("Point 1 (P1)", font, brush, CSng(TextBox3.Text) - (diameter / 2) + 20, CSng(UFPY.Text) + (CSng(TextBox25.Text) / CSng(2)) - 25)
        e.Graphics.DrawString("Start", font, brush, CSng(TextBox3.Text) - (diameter / 2) - 10, CSng(TextBox6.Text) - 20)
        ' Gambar titik pada tengah (orange)


        e.Graphics.FillEllipse(orangeBrush, CSng(UFPX.Text) + (CSng(TextBox1.Text) / 2), CSng(UFPY.Text) + (CSng(TextBox25.Text) / CSng(2)) - diameter / 2, diameter, diameter)
        ' Buat rectangle yang akan digunakan untuk menggambar arc

        e.Graphics.DrawString("Point 2 (P2)", font, brush, CSng(UFPX.Text) - (diameter / 2) - 60, CSng(UFPY.Text) + (CSng(TextBox25.Text) / CSng(2)) - diameter / 2 - 18)
        e.Graphics.DrawString("Finish", font, brush, CSng(UFPX.Text) - (diameter / 2) - 5, CSng(UFPY.Text) - 20)
        ' Gambar titik pada antena (brown)


        e.Graphics.FillEllipse(brownBrush, CSng(A2X.Text), CSng(A2Y.Text), diameter, diameter)


        e.Graphics.FillEllipse(grayBrush, CSng(A1X.Text), CSng(A1Y.Text), diameter, diameter)
        ' Gambar label

        e.Graphics.DrawString("Antena 1 (A1)", font, brush, CSng(A1X.Text) - 20 - diameter / 2, CSng(A1Y.Text) + 35 - diameter / 2)

        e.Graphics.DrawString("Antena 2 (A2)", font, brush, CSng(A2X.Text) - 30 - diameter / 2, CSng(A2Y.Text) - 15 - diameter / 2)

        Dim rect1 As New Rectangle((CSng(UFPX.Text)) - R, midY - R, R * 2, R * 2)
        Dim rect2 As New Rectangle((CSng(TextBox3.Text)) - R, midY - R, R * 2, R * 2)
        e.Graphics.DrawArc(Pens.Black, rect1, 90, 180)
        e.Graphics.DrawArc(Pens.Black, rect2, 270, 180)
        ' Bersihkan resource graphics
        ' Ambil koordinat dari TextBox
        x1 = CSng(A1X.Text) + 10
        y1 = CSng(A1Y.Text) + 0
        x2 = CSng(P1X.Text) + 10
        y2 = CSng(P1Y.Text) + 15
        x3 = CSng(A2X.Text) + 5
        y3 = CSng(A2Y.Text) + 8
        x4 = CSng(P2X.Text) + 7
        y4 = CSng(P2Y.Text) + 8
        ' Buat pen untuk menggambar garis
        If A12C.CheckState = CheckState.Checked Then
            Dim grayPen As New Pen(Color.Gray, 2)
            grayPen.DashStyle = Drawing2D.DashStyle.Dash
            Dim brownPen As New Pen(Color.Brown, 2)
            brownPen.DashStyle = Drawing2D.DashStyle.Dash
            Dim redzPen As New Pen(Color.Red, 2)
            redzPen.DashStyle = Drawing2D.DashStyle.Dash
            ' Gambar garis putus-putus
            e.Graphics.DrawLine(grayPen, x1, y1, x2, y2)
            e.Graphics.DrawString("R-11", font, brush, x1 + (Math.Abs(x2 - x1) / 2) + 5, y2 + (Math.Abs(y2 - y1) / 2) + 20)

            e.Graphics.DrawLine(grayPen, x1, y1 + 10, x4, y4)
            e.Graphics.DrawString("R-12", font, brush, x4 + (Math.Abs(x4 - x1) / 2) - 15, y4 + (Math.Abs(y4 - y1) / 2) + 20)
            e.Graphics.DrawLine(brownPen, x3, y3, x4, y4)
            e.Graphics.DrawString("R-22", font, brush, x4 + (Math.Abs(x3 - x4) / 2) - 40, y4 + (Math.Abs(y3 - y4) / 2) - 25)
            e.Graphics.DrawLine(brownPen, x3, y3, x2, y2)
            e.Graphics.DrawString("R-21", font, brush, x3 + (Math.Abs(x3 - x2) / 2) - 20, y2 + (Math.Abs(y3 - y2) / 2) - 25)
            e.Graphics.DrawLine(redzPen, x3 + 10, y3, x1, y1 + 10)
            e.Graphics.DrawString("A-21", font, brush, x3 + (Math.Abs(x3 - x1) / 2) - 0, y3 + (Math.Abs(y3 - y1) / 2) + 10)
            e.Graphics.DrawString("A-12", font, brush, x3 + (Math.Abs(x3 - x1) / 2) - 30, y3 + (Math.Abs(y3 - y1) / 2) - 20)
            ' Bersihkan resource pen
            brownPen.Dispose()
            grayPen.Dispose()
            redzPen.Dispose()
        End If



        g.Dispose()



    End Sub



    Private Sub Form3_FormClosing(ByVal sender As Object, ByVal e As FormClosingEventArgs) Handles MyBase.FormClosing
        ' Mengatur WindowState dari Form1 menjadi Maximized
        Form1.WindowState = FormWindowState.Maximized
        Form2.Close()
    End Sub

    ' Event handler untuk Resize event
    Private Sub Form3_Resize(ByVal sender As Object, ByVal e As EventArgs) Handles MyBase.Resize
        ' Jika Form2 diminimalkan, maksimalkan Form1
        If Me.WindowState = FormWindowState.Minimized Then
            Form1.WindowState = FormWindowState.Maximized
        End If
    End Sub

    Private Sub TextBox1_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub PictureBox1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PictureBox1.Click

    End Sub

    Private Sub Panel3_Paint(ByVal sender As System.Object, ByVal e As System.Windows.Forms.PaintEventArgs) Handles Panel3.Paint

    End Sub


    Private Sub Button2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button2.Click
        TextBox17.Text = CSng(TextBox17.Text) + CSng(TextBox16.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button9_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button9.Click
        TextBox17.Text = CSng(TextBox17.Text) - CSng(TextBox16.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button3.Click
        TextBox18.Text = CSng(TextBox18.Text) + CSng(TextBox15.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button8_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button8.Click
        TextBox18.Text = CSng(TextBox18.Text) - CSng(TextBox15.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button4.Click
        TextBox20.Text = CSng(TextBox20.Text) + CSng(TextBox9.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button7_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button7.Click
        TextBox20.Text = CSng(TextBox20.Text) - CSng(TextBox9.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button5_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button5.Click
        TextBox22.Text = CSng(TextBox22.Text) + CSng(TextBox10.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button6_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button6.Click
        TextBox22.Text = CSng(TextBox22.Text) - CSng(TextBox10.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button13_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button13.Click
        TextBox19.Text = CSng(TextBox19.Text) + CSng(TextBox14.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button19_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button19.Click
        TextBox19.Text = CSng(TextBox19.Text) - CSng(TextBox14.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button12_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button12.Click
        TextBox21.Text = CSng(TextBox21.Text) + CSng(TextBox13.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button18_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button18.Click
        TextBox21.Text = CSng(TextBox21.Text) - CSng(TextBox13.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button11_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button11.Click
        TextBox24.Text = CSng(TextBox24.Text) + CSng(TextBox11.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button17_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button17.Click
        TextBox24.Text = CSng(TextBox24.Text) - CSng(TextBox11.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button10_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button10.Click
        TextBox23.Text = CSng(TextBox23.Text) + CSng(TextBox12.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button16_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button16.Click
        TextBox23.Text = CSng(TextBox23.Text) - CSng(TextBox12.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button21_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button21.Click
        TextBox17.Text = "991"
        TextBox18.Text = "991"
        TextBox20.Text = "0"
        TextBox22.Text = "0"
        TextBox19.Text = "0"
        TextBox21.Text = "385"
        TextBox24.Text = "0"
        TextBox23.Text = "385"
        AddHandler PictureBox1.Paint, AddressOf PictureBox1_Paint
    End Sub

    Private Sub TextBox19_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox19.TextChanged
        If Not TextBox19.Text = "" Then
            TextBox7.Text = Math.Abs(Val(TextBox19.Text) - Val(TextBox21.Text)) / 2

            PictureBox1.Invalidate()
        End If

    End Sub

    Private Sub TextBox21_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox21.TextChanged
        If Not TextBox19.Text = "" Then
            TextBox7.Text = Math.Abs(Val(TextBox19.Text) - Val(TextBox21.Text)) / 2
            TextBox25.Text = Math.Abs(CSng(TextBox19.Text) - CSng(TextBox21.Text))
            LFPY.Text = (TextBox21.Text) - 99
            PictureBox1.Invalidate()
        End If
    End Sub


    Private Sub Button36_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button36.Click
        UFPX.Text = CSng(UFPX.Text) + CSng(TextBox9.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button22_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button22.Click
        UFPX.Text = CSng(UFPX.Text) - CSng(TextBox9.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button34_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button34.Click
        TextBox3.Text = CSng(TextBox3.Text) + CSng(TextBox16.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button23_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button23.Click
        TextBox3.Text = CSng(TextBox3.Text) - CSng(TextBox16.Text)
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button31_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button31.Click
        UFPY.Text = CSng(UFPY.Text) + CSng(TextBox11.Text)
        TextBox6.Text = UFPY.Text
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button26_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button26.Click
        UFPY.Text = CSng(UFPY.Text) - CSng(TextBox11.Text)
        TextBox6.Text = UFPY.Text
        PictureBox1.Invalidate()
    End Sub





    Private Sub TextBox4_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UFPX.TextChanged
        TextBox1.Text = Math.Abs(Val(TextBox3.Text) - Val(UFPX.Text))
        LFPX.Text = UFPX.Text

        PictureBox1.Invalidate()

    End Sub

    Private Sub TextBox3_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox3.TextChanged
        TextBox1.Text = Math.Abs(Val(TextBox3.Text) - Val(UFPX.Text))
        TextBox28.Text = TextBox3.Text
        PictureBox1.Invalidate()
    End Sub


    Private Sub TextBox23_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox23.TextChanged
        TextBox26.Text = TextBox23.Text - 99
        PictureBox1.Invalidate()
    End Sub

    Private Sub Button40_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button40.Click
        LFPY.Text = CSng(LFPY.Text) + CSng(TextBox12.Text)
        TextBox26.Text = LFPY.Text
        PictureBox1.Invalidate()
    End Sub

    Private Sub TextBox26_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox26.TextChanged

    End Sub



    Private Sub Button38_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button38.Click
        LFPY.Text = CSng(LFPY.Text) - CSng(TextBox12.Text)
        TextBox26.Text = LFPY.Text
        PictureBox1.Invalidate()
    End Sub



    Private Sub TextBox8_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles LFPY.TextChanged
        TextBox25.Text = Math.Abs(Val(UFPY.Text) - Val(LFPY.Text))
    End Sub


    Private Sub Button33_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub

    Private Sub TextBox5_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UFPY.TextChanged
        TextBox25.Text = Math.Abs(Val(UFPY.Text) - Val(LFPY.Text))
    End Sub

    Private Sub TextBox1_TextChanged_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox1.TextChanged
        TextBox33.Text = Val(TextBox1.Text) + Val(TextBox25.Text)
    End Sub

    Private Sub TextBox40_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles A1X.TextChanged
        PictureBox1.Invalidate()
    End Sub

    Private Sub TextBox35_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles A1Y.TextChanged
        PictureBox1.Invalidate()
    End Sub

    Private Sub TextBox39_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles A2X.TextChanged
        PictureBox1.Invalidate()
    End Sub

    Private Sub TextBox41_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles A2Y.TextChanged
        PictureBox1.Invalidate()
    End Sub

    Private Sub TextBox37_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles P1X.TextChanged
        PictureBox1.Invalidate()
    End Sub

    Private Sub TextBox36_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles P1Y.TextChanged
        PictureBox1.Invalidate()
    End Sub

    Private Sub TextBox38_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles P2X.TextChanged
        PictureBox1.Invalidate()
    End Sub


    Private Sub TextBox33_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox33.TextChanged
        '   TextBox42.Text = Val(TextBox33.Text) / Val(TrLg.Text)
        '  TextBox43.Text = Val(TextBox42.Text) / Val(TextBox44.Text)
    End Sub

    Private Sub TextBox25_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox25.TextChanged
        ' TextBox44.Text = Val(TextBox25.Text) / Val(TrW.Text)
        ' TextBox43.Text = Val(TextBox42.Text) / Val(TextBox44.Text)
    End Sub
    Private Sub CloseSerialPort1()
        ' Memastikan bahwa operasi dijalankan di thread UI utama
        If Me.InvokeRequired Then
            Me.Invoke(New MethodInvoker(AddressOf CloseSerialPort))
        Else
            ' Melakukan operasi close pada SerialPort
            SerialPort1.Close()
        End If
    End Sub
    Private Sub ConfigureAndOpenPort()
        If Me.SerialPort1.IsOpen Then
            SerialPort1.Close()
            CloseSerialPort1()
            closing = True
        End If
        '  RemoveHandler SerialPort1.DataReceived, AddressOf SerialPort1_DataReceived
        SerialPort1.PortName = ComboBoxComPorts.Text
        SerialPort1.BaudRate = 9600
        SerialPort1.Parity = Parity.None
        SerialPort1.StopBits = StopBits.One
        SerialPort1.DataBits = 8
        SerialPort1.Handshake = Handshake.None
        SerialPort1.Encoding = System.Text.Encoding.ASCII
        SerialPort1.Open()
        Try
            ' closing = False

            ' Tambahkan event handler DataReceived setelah port berhasil dibuka
            AddHandler SerialPort1.DataReceived, AddressOf SerialPort1_DataReceived
        Catch ex As UnauthorizedAccessException
            MessageBox.Show("Access to the port is denied.")
        Catch ex As IOException
            MessageBox.Show("The specified port could not be found or is already in use.")
        Catch ex As InvalidOperationException
            MessageBox.Show("The specified port is already open.")
        Catch ex As Exception
            MessageBox.Show("An error occurred: " & ex.Message)
        End Try
    End Sub
    Private Sub Addrowdata()
        Label115.Text = "Ant1"
        If CmbChnl.Text = "Simulation" Or ComboBoxComPorts.Text = "" Then
            Timer1.Enabled = True
            Timer1.Interval = 1
            Timer1.Start()
        ElseIf CalAnt1.BackColor = Color.Red Then

            'SerialPort1.ReadExisting.Trim()
            ' closing = True

            System.Threading.Thread.Sleep(5000)
            'AddHandler SerialPort1.DataReceived, AddressOf SerialPort1_DataReceived
            CloseSerialPort1()
            SerialPort1.Dispose()

            '  

        End If
    End Sub
    Private Sub CalAnt1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CalAnt1.Click
        Try
            DataGridView2.Hide()
            DataGridView3.Hide()
            If Label115.Text = "Ant2" Then
                btnRes.PerformClick()


            End If
            CalAnt1.BackColor = Color.Yellow
            Label115.Text = "Ant1"
            If DataGridView1.Rows.Count < 2 Then

                DataGridView1.Rows.Clear()
                Stdev.Text = 0
                Avg.Text = 0
                CVBox.Text = 0
                SDConv.Text = 0
                AVGSD.Text = 0
                PSD.Text = 0
                DataGridView1.RowHeadersVisible = False
                Chart1.Series(0).Points.Clear()
            End If


            If CmbChnl.Text = "Simulation" Or ComboBoxComPorts.Text = "" Then
                Timer1.Enabled = True
                Timer1.Interval = 1
                Timer1.Start()

            ElseIf CalAnt1.BackColor = Color.Yellow Then

                ' Konfigurasi SerialPort
                If Not Me.SerialPort1.IsOpen Then
                    SerialPort1.PortName = ComboBoxComPorts.Text ' Ganti dengan port yang sesuai
                    SerialPort1.BaudRate = 9600
                    SerialPort1.Parity = Parity.None
                    SerialPort1.StopBits = StopBits.One
                    SerialPort1.DataBits = 8
                    SerialPort1.Handshake = Handshake.None
                    SerialPort1.Encoding = System.Text.Encoding.ASCII
                    SerialPort1.Open()
                End If

                AddHandler SerialPort1.DataReceived, AddressOf SerialPort1_DataReceived


                ' DataGridView2.Hide()

                closing = False

            End If
        Catch ex As Exception
            CalAnt1.PerformClick()
            System.Threading.Thread.Sleep(1000)
        End Try
    End Sub

    Private Sub AddDataToChart()
        ' Ambil nomor baris terakhir
        Dim lastRowIndex As Integer = DataGridView1.Rows.Count - 1

        ' Pastikan ada data baru untuk ditambahkan
        If lastRowIndex >= 0 Then
            ' Ambil nilai dari kolom 1 (sumbu x) dan kolom 3 (sumbu y) dari baris terakhir
            Dim xValue As Double = CDbl(DataGridView1.Rows(lastRowIndex).Cells(0).Value)
            Dim yValue As Double = CDbl(DataGridView1.Rows(lastRowIndex).Cells(2).Value)

            ' Tambahkan data ke Series
            Chart1.Series(0).Points.AddXY(xValue, yValue)
        End If
    End Sub





    Private Sub Button29_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button29.Click, Button29.Click
        CmbChnl.DroppedDown = True

    End Sub

    Private Sub LineBox2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles LineBox2.Click, LineBox2.Click
        CmbChnl2.DroppedDown = True

    End Sub



    Private Sub Button25_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button25.Click, Button25.Click
        ' Bersihkan item-item di ComboBoxComPorts terlebih dahulu
        ComboBoxComPorts.Items.Clear()

        ' Dapatkan daftar COM ports yang tersedia
        Dim comPorts As String() = IO.Ports.SerialPort.GetPortNames()


        ' Tambahkan setiap COM port ke ComboBoxComPorts
        For Each comPort As String In comPorts
            ComboBoxComPorts.Items.Add(comPort)
        Next
        ComboBoxComPorts.Items.Add("Simulation")
        ' Pilih item pertama secara default (opsional)
        '  If ComboBoxComPorts.Items.Count > 0 Then
        'ComboBoxComPorts.SelectedIndex = 0
        'End If
        ComboBoxComPorts.DroppedDown = True

    End Sub



    Private Sub TextBox49_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Stdev.TextChanged, Stdev.TextChanged
        Try
            If DataGridView1.Rows.Count > 1 Then
                ' Dim stndnew As Double
                AVGSD.Text = Math.Round(((CDbl(DataGridView1.Rows.Count - 1) * CDbl(AVGSD.Text)) + CDbl(Stdev.Text)) / (DataGridView1.Rows.Count), 4)
                SDConv.Text = Math.Abs(Math.Round(CDbl(Stdev.Text) - CDbl(AVGSD.Text), 4))
                PSD.Text = Math.Round(CDbl(SDConv.Text) * 100 / CDbl(Avg.Text), 4)
            Else
                AVGSD.Text = Stdev.Text
                SDConv.Text = 0
                PSD.Text = 0
            End If
        Catch ex As Exception
        End Try
    End Sub



    Private Sub UseDataResult_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles UseDataResult.Click
        TabControl1.SelectedIndex = 2
        If Label115.Text = "Ant1" Then
            If CmbChnl.Text = "R-11" Then
                R11.Text = Avg.Text
                SR11.Text = Stdev.Text
                SampR11.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl.Text = "R-12" Then
                R12.Text = Avg.Text
                SR12.Text = Stdev.Text
                SampR12.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl.Text = "R-21" Then
                R21.Text = Avg.Text
                SR21.Text = Stdev.Text
                SampR21.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl.Text = "R-22" Then
                R22.Text = Avg.Text
                SR22.Text = Stdev.Text
                SampR22.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl.Text = "A-21" Then
                A21.Text = Avg.Text
                SA21.Text = Stdev.Text
                SampA21.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl.Text = "A-12" Then
                A12.Text = Avg.Text
                SA12.Text = Stdev.Text
                SampA12.Text = DataGridView1.Rows.Count - 1
            End If
        ElseIf Label115.Text = "Ant2" Then
            If CmbChnl2.Text = "R-11" Then
                R11.Text = Avg.Text
                SR11.Text = Stdev.Text
                SampR11.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl2.Text = "R-12" Then
                R12.Text = Avg.Text
                SR12.Text = Stdev.Text
                SampR12.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl2.Text = "R-21" Then
                R21.Text = Avg.Text
                SR21.Text = Stdev.Text
                SampR21.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl2.Text = "R-22" Then
                R22.Text = Avg.Text
                SR22.Text = Stdev.Text
                SampR22.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl2.Text = "A-21" Then
                A21.Text = Avg.Text
                SA21.Text = Stdev.Text
                SampA21.Text = DataGridView1.Rows.Count - 1
            ElseIf CmbChnl2.Text = "A-12" Then
                A12.Text = Avg.Text
                SA12.Text = Stdev.Text
                SampA12.Text = DataGridView1.Rows.Count - 1
            End If
        End If

        '  If CalAnt1.BackColor = Color.Red Then
        '  ConfigureAndOpenPort()
        'End If
        btnCalculate.PerformClick()
        TabControl1.SelectedIndex = 1

    End Sub

    Private Sub CmbChnl_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CmbChnl.SelectedIndexChanged, CmbChnl2.SelectedIndexChanged
        DataGridView1.Rows.Clear()
        Timer1.Stop()
        minSamp.Text = 100
        For Each series In Chart1.Series
            series.Points.Clear()

        Next

        If CmbChnl.Text = "A-12" Then
            ' CmbAnt.Text = "Antena_1"
            'ComboBoxBaudRate.Text = "9600"
        ElseIf CmbChnl.Text = "A-21" Then
            '  CmbAnt.Text = "Antena_2"
            'ComboBoxBaudRate.Text = "9600"
        ElseIf CmbChnl.Text = "R-11" Then
            ' CmbAnt.Text = "Antena_1"
            'ComboBoxBaudRate.Text = "9600"
        ElseIf CmbChnl.Text = "R-12" Then
            '  CmbAnt.Text = "Antena_1"
            'ComboBoxBaudRate.Text = "9600"
        ElseIf CmbChnl.Text = "R-21" Then
            ' CmbAnt.Text = "Antena_2"
            'ComboBoxBaudRate.Text = "9600"
        ElseIf CmbChnl.Text = "R-22" Then
            ' CmbAnt.Text = "Antena_2"
            'ComboBoxBaudRate.Text = "9600"
        End If

        TextBox34.Text = 0
        TextBox46.Text = 0
        TextBox45.Text = 0
        TextBox27.Text = 0
        HitungJumlahSampelMinimum()
    End Sub


    Private Sub Timer1_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer1.Tick
        ' Dapatkan nomor baris baru
        Dim rowNumber As Integer = DataGridView1.Rows.Count + 1
        Dim Rand As New Random
        ' Dapatkan nilai random antara 100 dan 103 (berkoma)
        Dim nilaiRandom As Single = CSng(Rand.Next(100, 103)) + CSng(Rand.NextDouble())

        ' Tambahkan nilai random ke kolom pertama baris baru
        If DataGridView1.Rows.Count <= CInt(minSamp.Text) Then
            If DataGridView1.Rows.Count > 1 Then
                DataGridView1.Rows.Add(rowNumber - 1, nilaiRandom, 0, 0, 0, 0, 0)
            Else
                DataGridView1.Rows.Add(rowNumber - 1, nilaiRandom, 0, "Nan", "Nan", "Nan", "Nan")
            End If

            ' Ambil nilai dari kolom kedua (index 1) dari semua baris
            Dim nilaiList As List(Of Double) = (From row As DataGridViewRow In DataGridView1.Rows.Cast(Of DataGridViewRow)()
                                                Where Not row.IsNewRow
                                                Select Convert.ToDouble(row.Cells(1).Value)).ToList()

            ' Hitung rata-rata
            ' Hitung gradien pada titik akhir
            ' Dim gradienTerakhir As Double = HitungGradienTerakhir(nilaiList)
            Dim rataRata As Double = nilaiList.Average()
            Avg.Text = Math.Round(rataRata, 4)
            ' Hitung jumlah kuadrat selisih
            Dim sumOfSquares As Double = nilaiList.Sum(Function(num) Math.Pow(num - rataRata, 2))

            ' Hitung variansi sampel
            Dim variance As Double = sumOfSquares / (nilaiList.Count - 1)

            ' Hitung standar deviasi
            Dim stdDeviasi As Double = Math.Sqrt(variance)
            Stdev.Text = Math.Round(stdDeviasi, 4)
            ' Hitung standar deviasi
            Dim stdError As Double = stdDeviasi / Math.Sqrt(rowNumber)


            ' Hitung koefisien variasi
            Dim cv As Double = (stdDeviasi / rataRata) * 100

            ' Tampilkan hasil di DataGridView
            DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value = Math.Round(rataRata, 3) ' Kolom 3 untuk rata-rata
            DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(3).Value = Math.Round(stdDeviasi, 3) ' Kolom 4 untuk standar deviasi
            DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(4).Value = Math.Round(stdError, 3)

            '  DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(5).Value = Math.Round(correlation, 4) ' Kolom 5 untuk koefisien korelasi
            If DataGridView1.Rows.Count > 2 Then
                Dim grad As Double
                grad = DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(1).Value - DataGridView1.Rows(DataGridView1.Rows.Count - 3).Cells(1).Value
                DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(5).Value = Math.Round(grad, 4)
            End If

            ' Tampilkan hasil di DataGridView
            '  If DataGridView1.Rows.Count > 1 Then
            ' DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(5).Value = Math.Round(gradienTerakhir, 4) ' Kolom 5 untuk gradien terakhir
            'e
            '  DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(5).Value = 0
            'End If

            DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(6).Value = Math.Round(cv, 4) ' Kolom 6 untuk koefisien variasi
            CVBox.Text = Math.Round(cv, 4)

            ' Tambahkan titik ke Chart
            Chart1.Series(0).Points.AddXY(rowNumber - 1, Math.Round(stdDeviasi, 3))
            ' Menghilangkan label "Series1" dari legenda pada Chart1
            Chart1.Legends(0).Enabled = False

            ' Set auto scroll ke baris terakhir
            DataGridView1.FirstDisplayedScrollingRowIndex = DataGridView1.Rows.Count - 1
        Else
            Try
                Timer1.Stop()
                Timer1.Enabled = False
                Dim val As Single
                val = 100 * (CSng(Stdev.Text) / CSng(Avg.Text))
                ' If AutoFilter.Text = "Yes" And DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(9).Value = "" Then
                btnReject.PerformClick()
                'If ComboBox2.Text = "Yes" Then
                UseDataResult.PerformClick()
                TabControl1.SelectedIndex = 1

                'End If
                ' End If
                If Math.Round(val, 5) > CSng(MSTD.Text) Then
                    If AutoSmooth.Text = "Yes" Then

                        If CDbl(SDConv.Text) > 1 And CDbl(PSD.Text) > 1 Then
                            minSamp.Text = CInt(minSamp.Text) + 100
                            If CInt(DataGridView1.RowCount) > 500 Then
                                DataGridView1.Hide()
                                'DataGridView1.Visible = False
                                Warning.Show()
                                'Warning.Visible = True
                                '  Avg.Hide()
                                ' AVGSD.Hide()
                                'SDConv.Hide()
                                ' PSD.Hide()
                                DataGridView2.Hide()
                                DataGridView3.Hide()
                                Chart1.Hide()
                                warnchart.Show()
                            End If
                        ElseIf CDbl(SDConv.Text) < 1 And CDbl(PSD.Text) < 1 Then
                            MsgBox("Although the standard deviation is greater then desired value of standard deviation, your data have convergenity of standard deviation below 1 and has passed below 1% of average standard deviation. We contune to next measurements")
                            Warning.Hide()
                            warnchart.Hide()
                            RefreshChart()
                            Chart1.Show()
                            DataGridView1.Show()
                            StopCal.PerformClick()
                            UseDataResult.PerformClick()
                            SignalCal2.Text = "ON"
                            ' Button1.BackColor = Color.Gainsboro
                        Else
                            minSamp.Text = CInt(minSamp.Text) + 100
                            If CInt(DataGridView1.RowCount) > 500 Then
                                DataGridView1.Hide()
                                'DataGridView1.Visible = False
                                Warning.Show()
                                'Warning.Visible = True
                                '  Avg.Hide()
                                ' AVGSD.Hide()
                                'SDConv.Hide()
                                ' PSD.Hide()
                                DataGridView2.Hide()
                                DataGridView3.Hide()
                                Chart1.Hide()
                                warnchart.Show()
                            End If
                        End If
                    Else
                        RefreshChart()
                        Form5.Show()
                    End If



                End If
            Catch s As Exception
            End Try
        End If


    End Sub

    ' Fungsi untuk menghitung koefisien korelasi antara dua kolom data
    ' Fungsi untuk menghitung koefisien korelasi antara dua kolom data
    Private Function HitungKoefisienKorelasi(ByVal data As List(Of Double)) As Double
        Dim sumXY As Double = 0
        Dim sumX As Double = 0
        Dim sumY As Double = 0
        Dim sumX2 As Double = 0
        Dim sumY2 As Double = 0
        Dim count As Integer = data.Count

        ' Menghitung jumlah untuk korelasi
        For i As Integer = 0 To data.Count - 2
            Dim x As Double = data(i)
            Dim y As Double = data(i + 1)
            sumXY += x * y
            sumX += x
            sumY += y
            sumX2 += x ^ 2
            sumY2 += y ^ 2
        Next

        ' Menghitung korelasi
        Dim numerator As Double = count * sumXY - sumX * sumY
        Dim denominator As Double = Math.Sqrt((count * sumX2 - sumX ^ 2) * (count * sumY2 - sumY ^ 2))
        Return numerator / denominator
    End Function



    Private Sub HitungJumlahSampelMinimum()
        Try
            Dim sigma As Double ' Standard deviasi maksimum dari populasi
            Dim confidenceLevel As Double ' Tingkat kepercayaan (misalnya 0.90, 0.95, 0.99)
            Dim MOE As Double ' Maksimum error dalam persentase (misalnya 0.10 untuk 10%)
            Dim zValue As Double ' Nilai kritis dari distribusi normal standar
            Dim sampleSize As Double ' Jumlah sampel minimum yang dibutuhkan

            ' Ambil nilai dari inputan pengguna (misalnya dari textbox atau combobox)
            sigma = CDbl(MSTD.Text) ' Ganti dengan nama kontrol yang sesuai
            confidenceLevel = CDbl(ComboBox1.Text) / 100 ' Ubah ke persen
            MOE = CDbl(MSE.Text) / 100 ' Ubah ke nilai desimal

            ' Tentukan nilai z berdasarkan tingkat kepercayaan
            If confidenceLevel = 0.9 Then
                zValue = 1.645 ' Untuk 90% confidence level
            ElseIf confidenceLevel = 0.95 Then
                zValue = 1.96 ' Untuk 95% confidence level
            ElseIf confidenceLevel = 0.99 Then
                zValue = 2.576 ' Untuk 99% confidence level
            Else
                ' Jika tingkat kepercayaan tidak valid, beri pesan kesalahan
                MsgBox("Tingkat kepercayaan tidak valid. Pilih 90, 95, atau 99.", vbExclamation)
                Exit Sub
            End If

            ' Hitung jumlah sampel minimum
            sampleSize = ((zValue * sigma) / (MOE * 10)) ^ 2 ' MOE * 10 karena MOE dalam persen, ubah jika tidak perlu

            ' Tampilkan hasil di textbox atau variabel lainnya
            minSamp.Text = CStr(Math.Ceiling(sampleSize)) ' Hasil dibulatkan ke atas

            ' Anda juga dapat menampilkan nilai sampleSize dengan format yang sesuai di sini
            ' misalnya, Debug.Print Format(sampleSize, "0.00")
        Catch e As Exception
        End Try
    End Sub

    Private Sub ComboBox1_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ComboBox1.SelectedIndexChanged
        ' MsgBox(CDbl(ComboBox1.Text) / 100)
        HitungJumlahSampelMinimum()
    End Sub

    Private Sub MSTD_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MSTD.TextChanged
        Try
            ' TextBox43.Text = CDbl(TextBox47.Text) / Math.Sqrt(CDbl(TextBox2.Text))
            ' HitungJumlahSampelMinimum()
            ' CStr(Math.Ceiling(TextBox2.Text))
        Catch ex As Exception
        End Try
    End Sub

    Private Sub TextBox43_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MSE.TextChanged
        HitungJumlahSampelMinimum()
    End Sub

    Private Sub StopCal_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles StopCal.Click
        Timer1.Stop()
        'Timer10.Stop()
        Timer11.Stop()
        CalAnt1.BackColor = Color.Gainsboro
        CalAnt2.BackColor = Color.Gainsboro

        Label122.Text = "Close"
        '  CalAnt1.BackColor = Color.Gainsboro
        ' SerialPort1.Close()
        '  SerialPort2.Close()
        'SerialPort1.ReadExisting.Trim()
        '  SerialPort1.Dispose()
        '  SerialPort2.Dispose()
        CloseSerialPort()
        ' SerialPort1.DtrEnable = True
        'SerialPort2.DtrEnable = True
        DataGridView2.Rows.Clear()
        DataGridView3.Rows.Clear()

        ' Button46.PerformClick()


    End Sub



    Private Sub btnSave_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnSave.Click, Button57.Click, Button27.Click
        ' Meminta pengguna untuk memilih nama file dan lokasi penyimpanan
        Dim saveFileDialog As New SaveFileDialog()
        saveFileDialog.Filter = "Text files (*.txt)|*.txt|All files (*.*)|*.*"
        saveFileDialog.Title = "Simpan Data ke File Teks"
        saveFileDialog.FileName = "DataOutput.txt" ' Nama default file
        saveFileDialog.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)

        If saveFileDialog.ShowDialog() = DialogResult.OK Then
            ' Buka file untuk menulis
            Dim filePath As String = saveFileDialog.FileName
            Dim sb As New StringBuilder()

            ' Menyimpan judul kolom (header)
            For Each column As DataGridViewColumn In DataGridView1.Columns
                sb.Append(column.HeaderText).Append(vbTab)
            Next
            sb.AppendLine()

            ' Menyimpan data baris
            For Each row As DataGridViewRow In DataGridView1.Rows
                For Each cell As DataGridViewCell In row.Cells
                    sb.Append(cell.Value).Append(vbTab)
                Next
                sb.AppendLine()
            Next

            ' Menulis semua data ke file
            File.WriteAllText(filePath, sb.ToString())

            MessageBox.Show("Data berhasil disimpan.", "Informasi", MessageBoxButtons.OK, MessageBoxIcon.Information)
        End If
    End Sub


    Private Sub btnLoad_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnLoad.Click
        ' Meminta pengguna untuk memilih file yang akan dimuat
        Dim openFileDialog As New OpenFileDialog()
        openFileDialog.Filter = "Text files (*.txt)|*.txt|All files (*.*)|*.*"
        openFileDialog.Title = "Pilih File Teks untuk Dimuat"
        openFileDialog.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.MyDocuments)

        If openFileDialog.ShowDialog() = DialogResult.OK Then
            Try
                ' Membaca semua baris dari file teks
                Dim lines As String() = File.ReadAllLines(openFileDialog.FileName)

                ' Mendapatkan header kolom dari baris pertama
                Dim headers As String() = lines(0).Split(vbTab)

                ' Bersihkan DataGridView sebelum memuat data baru
                DataGridView1.Rows.Clear()
                DataGridView1.Columns.Clear()

                ' Tambahkan kolom-kolom ke DataGridView
                For Each header As String In headers
                    DataGridView1.Columns.Add(header, header)
                Next

                ' Memuat data ke DataGridView dari baris kedua ke depan
                For i As Integer = 1 To lines.Length - 1
                    Dim values As String() = lines(i).Split(vbTab)
                    DataGridView1.Rows.Add(values)
                Next
                ' Atur lebar kolom
                DataGridView1.Columns(0).Width = 30  ' Lebar kolom "No"
                DataGridView1.Columns(1).Width = 60 ' Lebar kolom "Nilai Random"
                DataGridView1.Columns(2).Width = 60 ' Lebar kolom "Rata-Rata"
                DataGridView1.Columns(3).Width = 70 ' Lebar kolom "Standard Deviasi"
                DataGridView1.Columns(4).Width = 70 ' Lebar kolom "Standard Deviasi"
                DataGridView1.Columns(5).Width = 70 ' Lebar kolom "Standard Deviasi"
                DataGridView1.Columns(6).Width = 70 ' Lebar kolom "Standard Deviasi"
                DataGridView1.Columns(7).Width = 70

                MessageBox.Show("Data berhasil dimuat.", "Informasi", MessageBoxButtons.OK, MessageBoxIcon.Information)
            Catch ex As Exception
                MessageBox.Show("Terjadi kesalahan saat memuat data: " & ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End Try
        End If
        Avg.Text = DataGridView1.Rows(DataGridView1.Rows.Count - 3).Cells(2).Value
        Stdev.Text = DataGridView1.Rows(DataGridView1.Rows.Count - 3).Cells(3).Value
        CVBox.Text = DataGridView1.Rows(DataGridView1.Rows.Count - 3).Cells(7).Value

    End Sub


    Private Sub CmbAnt_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub



    Private Sub btnCalculate_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnCalculate.Click
        Try
            ' Mendapatkan nilai dari TextBox dan mengonversi menjadi Double
            Dim NR22 As Double = Double.Parse(R22.Text)
            Dim NR11 As Double = Double.Parse(R11.Text)
            Dim NA12 As Double = Double.Parse(A12.Text)
            Dim NA21 As Double = Double.Parse(A21.Text)
            Dim NR12 As Double = Double.Parse(R12.Text)
            Dim NR21 As Double = Double.Parse(R21.Text)
            AntRat.Text = Math.Round(CDbl(A12.Text) / CDbl(A21.Text), 4)
            ' Menghitung nilai sudut B dan P menggunakan hukum kosinus
            Dim cosB As Double = ((NR12) ^ 2 + (NA12) ^ 2 - (NR22 * (CDbl(AntRat.Text))) ^ 2) / (2 * NR12 * (CDbl(AntRat.Text)) * NA12)
            Dim cosP As Double = (NR11 ^ 2 + (NA21 * CDbl(AntRat.Text)) ^ 2 - (NR21 * CDbl(AntRat.Text)) ^ 2) / (2 * NR11 * NA21 * CDbl(AntRat.Text))
            PA.Text = Math.Round(180 * Math.Acos(cosP) / Math.PI, 4)
            BA.Text = Math.Round(180 * Math.Acos(cosB) / Math.PI, 4)
            ' Menghitung sudut theta
            Dim psi As Double = 180 * (Math.Acos(cosB) + Math.Acos(cosP)) / Math.PI
            ' Dim sinA As Double = (NR12 / NR11) * Math.Sqrt(1 - (Math.Cos(theta * Math.PI / 180)) ^ 2)

            'TextBox54.Text = Math.Cos(90 * Math.PI / 180)
            ' TextBox54.Text = 180 * Math.Acos(0) / Math.PI
            ' Menghitung F (QA) menggunakan rumus yang diberikan
            Dim F As Double = Math.Sqrt((NR12 ^ 2) + (NR11 ^ 2) - (2 * NR12 * NR11 * Math.Cos(psi * Math.PI / 180)))
            P1P2.Text = Math.Round(F, 4)
            HitungX()
            EA.Text = Math.Round(CDbl(XA1.Text) + CDbl(BA.Text), 4)
            P1A1.Text = Math.Round(Math.Sqrt((CDbl(A1Y.Text) - CDbl(P1Y.Text)) ^ 2 + (CDbl(A1X.Text) - CDbl(P1X.Text)) ^ 2), 4)
            P1A2.Text = Math.Round(Math.Sqrt((CDbl(A2Y.Text) - CDbl(P2Y.Text)) ^ 2 + (CDbl(A2X.Text) - CDbl(P1X.Text)) ^ 2), 4)
            ARScl.Text = Math.Round(CDbl(P1P2.Text) / CDbl(TrLg.Text), 4)
            A2CF.Text = Math.Round(CDbl(A21.Text) - CDbl(RA1A2.Text), 4)
            A1CF.Text = Math.Round(CDbl(A12.Text) - CDbl(RA1A2.Text), 4)
            'A1FF.Text = Math.Round((CDbl(R11.Text)) / (Math.Abs(CDbl(UFPY.Text) - CDbl(LFPY.Text))), 4)
            mRFac.Text = Math.Round((CDbl(TrLg.Text) - CDbl(RA1A2.Text)) / (CDbl(P1P2.Text) - CDbl(A12.Text)), 4)
            CRFact.Text = Math.Round(CDbl(RA1A2.Text) - (CDbl(mRFac.Text) * CDbl(A12.Text)), 4)
            AFScl.Text = Math.Round(CDbl(P1P2.Text) / Math.Abs(CDbl(P1X.Text) - CDbl(P2X.Text)), 4)
            ' FormatTextBoxesToThreeDecimalPlaces(Me)
        Catch ex As Exception
            MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try
    End Sub
    Public Sub FormatTextBoxesToThreeDecimalPlaces(ByVal form As Form)
        For Each control As Control In form.Controls
            If TypeOf control Is TextBox Then
                Dim textBox As TextBox = CType(control, TextBox)
                Dim value As Double
                If Double.TryParse(textBox.Text, value) Then
                    textBox.Text = value.ToString("F3")
                End If
            End If
        Next
    End Sub
    Private Sub HitungX()
        ' Mendefinisikan variabel dan mendapatkan nilai mereka dari TextBox
        ' Deklarasi variabel dan ambil nilai dari TextBox
        Dim F As Double
        Dim S1 As Double
        Dim S1Prime As Double

        ' Coba konversi nilai TextBox menjadi Double
        Try
            F = Convert.ToDouble(P1P2.Text)
            S1 = Convert.ToDouble(R12.Text)
            S1Prime = Convert.ToDouble(R11.Text)
        Catch ex As Exception
            MessageBox.Show("Pastikan semua input adalah angka yang valid.")
            Exit Sub
        End Try


        ' Langkah-langkah perhitungan
        Dim numerator As Double = F ^ 2 + S1 ^ 2 - S1Prime ^ 2
        '  Dim numerator2 As Double = -F * S1 - Sqrt(F ^ 2 * S1 ^ 2 + (S1 * S1Prime - S1 ^ 2) * (S1 * S1Prime - S1Prime ^ 2 + F ^ 2))
        Dim denominator As Double = 2 * F * S1

        ' Periksa apakah denominator tidak nol
        If denominator = 0 Then
            MessageBox.Show("Denominator tidak boleh nol.")
            Exit Sub
        End If

        ' Hasil akhir
        Dim x As Double = Math.Acos(numerator / denominator)
        '  Dim x2 As Double = Math.Acos(numerator2 / denominator)
        Dim NR22 As Double = Double.Parse(R22.Text)
        Dim NR11 As Double = Double.Parse(R11.Text)
        Dim NA12 As Double = Double.Parse(A12.Text)
        Dim NR12 As Double = Double.Parse(R12.Text)
        ' Memastikan pembagi tidak nol
        If denominator = 0 Then
            Console.WriteLine("Pembagi adalah nol, tidak dapat menghitung x")
            Exit Sub
        End If
        Dim numerat As Double = (NR22 ^ 2) + (NR12 ^ 2) - (NA12 ^ 2)
        Dim denom As Double = 2 * NR22 * NR12
        '  Dim cospsi As Double = Math.Cos((CDbl(numerat) / CDbl(denom)))
        'Dim psi As Double = (Math.Acos(cospsi)) '* 180 / Math.PI
        Dim tes As Double = Math.Cos(60 * Math.PI / 180)

        XA1.Text = Math.Round(180 * Math.Acos(numerator / denominator) / Math.PI, 4)
        PsiBox.Text = Math.Round(180 * Math.Acos(numerat / denom) / Math.PI, 4)
        ZA.Text = Math.Round(CDbl(XA1.Text) - CDbl(PsiBox.Text), 4)
        Dim sinX As Double = Math.Sin(CDbl(XA1.Text) * Math.PI / 180)

        Dim siny As Double = (NR12 / NR11) * sinX

        YA1.Text = Math.Round(Math.Asin(CDbl(siny)) * 180 / Math.PI, 4)

        P1A1.Text = Math.Round(CStr(R11.Text) * Math.Sin(YA1.Text * Math.PI / 180), 4)

    End Sub
    Private Sub HitungX2()
        ' Mendefinisikan variabel dan mendapatkan nilai mereka dari TextBox
        ' Deklarasi variabel dan ambil nilai dari TextBox
        Dim F As Double
        Dim S1 As Double
        Dim S1Prime As Double

        ' Coba konversi nilai TextBox menjadi Double
        Try
            F = Convert.ToDouble(TextBox36.Text)
            S1 = Convert.ToDouble(R13.Text)
            S1Prime = Convert.ToDouble(R11.Text)
        Catch ex As Exception
            MessageBox.Show("Pastikan semua input adalah angka yang valid.")
            Exit Sub
        End Try


        ' Langkah-langkah perhitungan
        Dim numerator As Double = F ^ 2 + S1 ^ 2 - S1Prime ^ 2
        '  Dim numerator2 As Double = -F * S1 - Sqrt(F ^ 2 * S1 ^ 2 + (S1 * S1Prime - S1 ^ 2) * (S1 * S1Prime - S1Prime ^ 2 + F ^ 2))
        Dim denominator As Double = 2 * F * S1

        ' Periksa apakah denominator tidak nol
        If denominator = 0 Then
            MessageBox.Show("Denominator tidak boleh nol.")
            Exit Sub
        End If

        ' Hasil akhir
        Dim x As Double = Math.Acos(numerator / denominator)

        XA2.Text = Math.Round(180 * Math.Acos(numerator / denominator) / Math.PI, 4)


    End Sub
    Private Sub SimpanKeFile()
        ' Mendapatkan nilai dari TextBox
        Dim nR22 As Double = Double.Parse(R22.Text)
        Dim nR11 As Double = Double.Parse(R11.Text)
        Dim nA12 As Double = Double.Parse(A12.Text)
        Dim nA21 As Double = Double.Parse(A21.Text)
        Dim nR12 As Double = Double.Parse(R12.Text)
        Dim nR21 As Double = Double.Parse(R21.Text)
        Dim nSR22 As Double = Double.Parse(SR22.Text)
        Dim nSR11 As Double = Double.Parse(SR11.Text)
        Dim nSA12 As Double = Double.Parse(SA12.Text)
        Dim nSA21 As Double = Double.Parse(SA21.Text)
        Dim nSR12 As Double = Double.Parse(SR12.Text)
        Dim nSR21 As Double = Double.Parse(SR21.Text)
        Dim nSampR22 As Double = Double.Parse(SampR22.Text)
        Dim nSampR11 As Double = Double.Parse(SampR11.Text)
        Dim nSampA12 As Double = Double.Parse(SampA12.Text)
        Dim nSampA21 As Double = Double.Parse(SampA21.Text)
        Dim nSampR12 As Double = Double.Parse(SampR12.Text)
        Dim nSampR21 As Double = Double.Parse(SampR21.Text)

        ' Membuat dialog simpan file
        Dim saveFileDialog As New SaveFileDialog()
        saveFileDialog.Filter = "Text Files (*.txt)|*.txt"
        saveFileDialog.Title = "Simpan ke File Teks"
        saveFileDialog.ShowDialog()

        ' Mengecek apakah pengguna memilih lokasi file
        If saveFileDialog.FileName <> "" Then
            ' Menyimpan nilai ke dalam file teks
            Using writer As New System.IO.StreamWriter(saveFileDialog.FileName)
                writer.WriteLine("A12 : " & nA12)
                writer.WriteLine("A21 : " & nA21)
                writer.WriteLine("R11 : " & nR11)
                writer.WriteLine("R12 : " & nR12)
                writer.WriteLine("R21 : " & nR21)
                writer.WriteLine("R22 : " & nR22)
                writer.WriteLine("SA12 : " & nSA12)
                writer.WriteLine("SA21 : " & nSA21)
                writer.WriteLine("SR11 : " & nSR11)
                writer.WriteLine("SR12 : " & nSR12)
                writer.WriteLine("SR21 : " & nSR21)
                writer.WriteLine("SR22 : " & nSR22)
                writer.WriteLine("SampA12 : " & nSampA12)
                writer.WriteLine("SampA21 : " & nSampA21)
                writer.WriteLine("SampR11 : " & nSampR11)
                writer.WriteLine("SampR12 : " & nSampR12)
                writer.WriteLine("SampR21 : " & nSampR21)
                writer.WriteLine("SampR22 : " & nSampR22)

            End Using
        End If
    End Sub


    Private Sub Button33_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button33.Click
        SimpanKeFile()
    End Sub


    Private Sub Button39_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button39.Click
        LoadDariFile()
    End Sub
    Private Sub LoadDariFile()
        ' Membuat dialog buka file
        Dim openFileDialog As New OpenFileDialog()
        openFileDialog.Filter = "Text Files (*.txt)|*.txt"
        openFileDialog.Title = "Buka File Teks"
        openFileDialog.ShowDialog()

        ' Mengecek apakah pengguna memilih file
        If openFileDialog.FileName <> "" Then
            ' Membaca nilai dari file teks
            Using reader As New System.IO.StreamReader(openFileDialog.FileName)
                Dim line As String
                Do While (reader.Peek() >= 0)
                    line = reader.ReadLine()
                    Dim parts() As String = line.Split(New Char() {":"c}, 2)
                    If parts.Length = 2 Then
                        Dim key As String = parts(0).Trim()
                        Dim value As String = parts(1).Trim()

                        ' Menentukan TextBox berdasarkan key dan mengisi nilainya
                        Select Case key
                            Case "A12"
                                A12.Text = value
                            Case "A21"
                                A21.Text = value
                            Case "R11"
                                R11.Text = value
                            Case "R12"
                                R12.Text = value
                            Case "R21"
                                R21.Text = value
                            Case "R22"
                                R22.Text = value
                            Case "SA12"
                                SA12.Text = value
                            Case "SA21"
                                SA21.Text = value
                            Case "SR11"
                                SR11.Text = value
                            Case "SR12"
                                SR12.Text = value
                            Case "SR21"
                                SR21.Text = value
                            Case "SR22"
                                SR22.Text = value
                            Case "SampA12"
                                SampA12.Text = value
                            Case "SampA21"
                                SampA21.Text = value
                            Case "SampR11"
                                SampR11.Text = value
                            Case "SampR12"
                                SampR12.Text = value
                            Case "SampR21"
                                SampR21.Text = value
                            Case "SampR22"
                                SampR22.Text = value
                        End Select
                    End If
                Loop
            End Using
        End If
    End Sub


    Private Sub Timer2_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer2.Tick


        Try

            ' Mendapatkan baris terakhir dari DataGridView


            '  If DataGridView1.RowCount > 1 And Label122.Text = "Close" Then
            'For Each row As DataGridViewRow In DataGridView1.Rows
            '  If row.DefaultCellStyle.BackColor <> Color.LightGreen Then
            'StopCal.PerformClick()
            '  End If
            ' Next
            ' End If
            If ComboBoxComPorts2.Text = ComboBoxComPorts.Text Then

                ComboBoxComPorts2.SelectedText = ""
                ComboBoxComPorts2.Text = ""
                ComboBoxComPorts.Text = ""
                MsgBox("Port tidak boleh sama!")



            End If
            ' Membuat query untuk mendapatkan informasi baterai
            Dim searcher As New ManagementObjectSearcher("SELECT * FROM Win32_Battery")
            Label63.Text = DateTime.Now.ToString("HH:mm:ss")
            For Each queryObj As ManagementObject In searcher.Get()
                ' Mendapatkan informasi kapasitas baterai
                Dim estimatedChargeRemaining As Integer = Convert.ToInt32(queryObj("EstimatedChargeRemaining"))
                Dim batteryStatus As Integer = Convert.ToInt32(queryObj("BatteryStatus"))
                Dim statusText As String = ""

                Select Case batteryStatus
                    Case 1
                        statusText = "Discharging"
                    Case 2
                        statusText = "AC Power"
                    Case 3
                        statusText = "Fully Charged"
                    Case 4
                        statusText = "Low"
                    Case 5
                        statusText = "Critical"
                    Case 6
                        statusText = "Charging"
                    Case 7
                        statusText = "Charging and High"
                    Case 8
                        statusText = "Charging and Low"
                    Case 9
                        statusText = "Charging and Critical"
                    Case 10
                        statusText = "Undefined"
                    Case 11
                        statusText = "Partially Charged"
                    Case Else
                        statusText = "Unknown"
                End Select

                ' Menampilkan hasil pada label
                Label62.Text = "Persentase Kapasitas Baterai: " & estimatedChargeRemaining.ToString() & "%. " & "Status Baterai: " & statusText
            Next



        Catch err As ManagementException
            MessageBox.Show("An error occurred while querying for WMI data: " & err.Message)
        End Try

        'If CalAnt2.BackColor = Color.Yellow And Label115.Text = "Ant2" And DataGridView1.RowCount - 1 < CInt(minSamp.Text) Then
        'CalAnt2.PerformClick()
        '  Else
        ' CloseSerialPort()
        'End If
    End Sub



    Private Sub Button41_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button41.Click
        R22.Text = ""
        R11.Text = ""
        A12.Text = ""
        A21.Text = ""
        R12.Text = ""
        R21.Text = ""
        SR22.Text = ""
        SR11.Text = ""
        SA12.Text = ""
        SA21.Text = ""
        SR12.Text = ""
        SR21.Text = ""
        'SR21.Text = ""
        R22.Text = ""
        SampR11.Text = ""
        SampA12.Text = ""
        SampA21.Text = ""
        SampR21.Text = ""
        SampR22.Text = ""
        SampR12.Text = ""
    End Sub




    Private WithEvents PrintDocument1 As New PrintDocument

    ' Event handler untuk tombol Print
    Private Sub btnPrint_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnPrint.Click
        ' Set orientation to landscape
        PrintDocument1.DefaultPageSettings.Landscape = True
        ' Set paper size to A4
        PrintDocument1.DefaultPageSettings.PaperSize = New PaperSize("A4", 827, 1169)
        ' Set margins to 0
        PrintDocument1.DefaultPageSettings.Margins = New Margins(0, 0, 0, 0)
        PrintDocument1.Print()
    End Sub



    ' Event handler untuk PrintDocument1.PrintPage
    Private Sub PrintDocument1_PrintPage(ByVal sender As Object, ByVal e As PrintPageEventArgs) Handles PrintDocument1.PrintPage
        ' Menggambar ulang konten dari PictureBox1 ke halaman cetak
        Using bmp As New Bitmap(PictureBox1.Width, PictureBox1.Height)
            PictureBox1.DrawToBitmap(bmp, New Rectangle(0, 0, PictureBox1.Width, PictureBox1.Height))

            ' Get the size of the printable area
            Dim printableArea As RectangleF = e.PageBounds

            ' Calculate the new size (scale down by 0.8)
            Dim scaleFactor As Single = 0.9
            Dim newWidth As Integer = bmp.Width * scaleFactor
            Dim newHeight As Integer = bmp.Height * scaleFactor

            ' Calculate the position to center the image
            Dim posX As Integer = (printableArea.Width - newWidth) / 2
            Dim posY As Integer = (printableArea.Height - newHeight) / 2

            ' Draw the image scaled to fit the printable area
            e.Graphics.DrawImage(bmp, posX, posY, newWidth, newHeight)
        End Using
    End Sub

    ' Event handler untuk tombol Save
    Private Sub btnSavepic_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnSavepic.Click
        ' Create and configure the SaveFileDialog
        Using sfd As New SaveFileDialog
            sfd.Filter = "PNG Image|*.png|Bitmap Image|*.bmp|JPEG Image|*.jpg"
            sfd.Title = "Save an Image File"
            sfd.FileName = "image.png" ' Default file name

            ' Show the SaveFileDialog
            If sfd.ShowDialog() = DialogResult.OK Then
                ' Determine the selected file format
                Dim format As ImageFormat = ImageFormat.Png
                Select Case System.IO.Path.GetExtension(sfd.FileName).ToLower()
                    Case ".bmp"
                        format = ImageFormat.Bmp
                    Case ".jpg", ".jpeg"
                        format = ImageFormat.Jpeg
                    Case ".png"
                        format = ImageFormat.Png
                End Select

                ' Save the image
                SavePictureBoxImage(PictureBox1, sfd.FileName, format)
            End If
        End Using
    End Sub

    ' Method to save PictureBox image to file
    Private Sub SavePictureBoxImage(ByVal pictureBox As PictureBox, ByVal filePath As String, ByVal format As ImageFormat)
        ' Create a bitmap of the same size as the PictureBox
        Using bmp As New Bitmap(pictureBox.Width, pictureBox.Height)
            ' Draw the PictureBox content to the bitmap
            pictureBox.DrawToBitmap(bmp, New Rectangle(0, 0, pictureBox.Width, pictureBox.Height))
            ' Save the bitmap to the specified file in the specified format
            bmp.Save(filePath, format)
        End Using
    End Sub


    Private Sub Button42_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button42.Click
        Try
            ' Mendapatkan nilai dari TextBox
            Dim nR22 As Double = Double.Parse(R22.Text)
            Dim nR11 As Double = Double.Parse(R11.Text)
            Dim nA12 As Double = Double.Parse(A12.Text)
            Dim nA21 As Double = Double.Parse(A21.Text)
            Dim nR12 As Double = Double.Parse(R12.Text)
            Dim nR21 As Double = Double.Parse(R21.Text)
            'adjust antena 1 point x
            A1X.Text = CDbl(P2X.Text) + ((nR12) * Cos(Math.PI * CDbl(XA1.Text) / 180))
            'adjust antena 1 point y
            A1Y.Text = CDbl(P2Y.Text) + ((nR12) * Sin(Math.PI * CDbl(XA1.Text) / 180))
            'adjust antena 2 point x
            A2X.Text = CDbl(P2X.Text) + ((nR22) * Cos(Math.PI * CDbl(ZA.Text) / 180))
            'adjust antena 2 point y
            A2Y.Text = CDbl(P2Y.Text) + ((nR22) * Sin(Math.PI * CDbl(ZA.Text) / 180))
        Catch ex As Exception

        End Try
    End Sub



    Private Sub btnPSS_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnPSS.Click
        PrintFormScreenshot()
    End Sub

    Private Sub PrintFormScreenshot()
        ' Create a new bitmap with the size of the form
        Dim bmp As New Bitmap(Me.Width, Me.Height)

        ' Draw the form onto the bitmap
        Me.DrawToBitmap(bmp, New Rectangle(0, 0, Me.Width, Me.Height))

        ' Create a PrintDocument object
        Dim printDoc As New PrintDocument()

        ' Set the default page settings to A4 and landscape
        printDoc.DefaultPageSettings.PaperSize = New PaperSize("A4", 827, 1169) ' A4 size in hundredths of an inch
        printDoc.DefaultPageSettings.Landscape = True

        ' Add a PrintPage event handler
        AddHandler printDoc.PrintPage, Sub(sender As Object, e As PrintPageEventArgs)
                                           ' Calculate the new dimensions
                                           Dim newWidth As Integer = CInt(bmp.Width * 0.9)
                                           Dim newHeight As Integer = CInt(bmp.Height * 0.9)

                                           ' Center the image on the page
                                           Dim x As Integer = (e.PageBounds.Width - newWidth) / 2
                                           Dim y As Integer = (e.PageBounds.Height - newHeight) / 2

                                           ' Draw the resized image onto the print document
                                           e.Graphics.DrawImage(bmp, x, y, newWidth, newHeight)
                                       End Sub

        ' Create a PrintDialog object
        Dim printDlg As New PrintDialog()
        printDlg.Document = printDoc

        ' Show the PrintDialog. If the user clicks OK, print the document
        If printDlg.ShowDialog() = DialogResult.OK Then
            printDoc.Print()
        End If
    End Sub

    Private Sub Button43_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button43.Click

        A1X.Text = "834"
        A1Y.Text = "356"
        A2X.Text = "694"
        A2Y.Text = "280"
        R12.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - CDbl(P2X.Text)) ^ 2 + (CDbl(A1Y.Text) - CDbl(P2Y.Text)) ^ 2), 6).ToString()
        R22.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - CDbl(P2X.Text)) ^ 2 + (CDbl(A2Y.Text) - CDbl(P2Y.Text)) ^ 2), 6).ToString()
        R11.Text = Math.Round(Math.Sqrt((CDbl(P1X.Text) - CDbl(A1X.Text)) ^ 2 + (CDbl(A1Y.Text) - CDbl(P1Y.Text)) ^ 2), 6).ToString()
        R21.Text = Math.Round(Math.Sqrt((CDbl(P1X.Text) - CDbl(A2X.Text)) ^ 2 + (CDbl(A2Y.Text) - CDbl(P1Y.Text)) ^ 2), 6).ToString()
        A21.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - CDbl(A2X.Text)) ^ 2 + (CDbl(A1Y.Text) - CDbl(A2Y.Text)) ^ 2), 6).ToString()
        A12.Text = A21.Text
        XA1.Text = Math.Round(Math.Asin((CDbl(A1Y.Text) - CDbl(P2Y.Text)) / CDbl(R12.Text)) * 180 / Math.PI, 6).ToString()
        ' XA2.Text = Math.Round(Math.Asin((CDbl(A1Y.Text) - CDbl(P2Y.Text)) / CDbl(R12.Text)) * 180 / Math.PI, 3).ToString()
        ZA.Text = Math.Round(Math.Asin((CDbl(A2Y.Text) - CDbl(P2Y.Text)) / CDbl(R22.Text)) * 180 / Math.PI, 6).ToString()
        P1P2.Text = Math.Round(CDbl(P1X.Text) - CDbl(P2X.Text), 6).ToString()
        EA.Text = Math.Round(Math.Asin((CDbl(A1Y.Text) - CDbl(A2Y.Text)) / CDbl(A21.Text)) * (180 / Math.PI), 6).ToString()
        BA.Text = Math.Round(CDbl(EA.Text) - CDbl(XA1.Text), 6).ToString()
        YA1.Text = Math.Round(Math.Asin(Math.Abs(CDbl(A1Y.Text) - CDbl(P2Y.Text)) / CDbl(R11.Text)) * 180 / Math.PI, 6).ToString()
        'YA2.Text = YA1.Text
        AntRat.Text = Math.Round(CDbl(A12.Text) / CDbl(A21.Text), 6).ToString()

    End Sub

    Private Sub Simu_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Simu.Click
        TotLap.Text = 0
        TCount.Text = "00:00:00"
        SLS.PerformClick()
        If StatBG.Text = "No Status" Then
            Button45.PerformClick()
            Button44.PerformClick()
        Else
            Button47.PerformClick()
            ' Inisialisasi bitmap untuk double buffering

        End If
        ' Initialize the pointX position
        Dim startX As Double
        Dim endX As Double
        'PictureBox1.Invalidate()
        ' PictureBox1.Update()
        If Double.TryParse(P1X.Text, startX) AndAlso Double.TryParse(P2X.Text, endX) Then
            pointX = startX
            ' Determine initial direction based on start and end positions
            direction = If(startX < endX, 1, -1)
            ' Start the Timer
            Timer3.Enabled = True
            Timer3.Interval = 10
            Timer3.Start()
            '  bitmap = New Bitmap(PictureBox1.Width, PictureBox1.Height)
            ' bitmapGraphics = Graphics.FromImage(bitmap)
        Else
            MessageBox.Show("Please enter valid numeric values in P1X and P2X.", "Invalid Input", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End If
    End Sub
    Function KonversiKeDetik(ByVal waktu As String) As Integer
        ' Parsing string waktu menjadi TimeSpan
        Dim ts As TimeSpan = TimeSpan.Parse(waktu)
        ' Mengembalikan total detik dari TimeSpan
        Return CInt(ts.TotalSeconds)
    End Function
    Public Function TimeToSeconds(ByVal timeStr As String) As Integer
        Dim timeParts() As String = timeStr.Split(":")
        Dim hours As Integer = Convert.ToInt32(timeParts(0))
        Dim minutes As Integer = Convert.ToInt32(timeParts(1))
        Dim seconds As Integer = Convert.ToInt32(timeParts(2))
        Return (hours * 3600) + (minutes * 60) + seconds
    End Function
    Private Sub Timer3_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer3.Tick
        ' MsgBox("HILANGIN LAYAR")
        '  bitmap = New Bitmap(PictureBox1.Width, PictureBox1.Height)
        ' bitmapGraphics = Graphics.FromImage(bitmap)
        elapsedTime += 1
        Dim startX As Double
        Dim endX As Double
        Dim pointY As Double
        Dim hoursz As Integer = elapsedTime \ 3600
        Dim minutesz As Integer = (elapsedTime Mod 3600) \ 60
        Dim secondsz As Integer = elapsedTime Mod 60
        ' Format waktu menjadi hh:mm:ss
        Dim timeString As String = String.Format("{0:00}:{1:00}:{2:00}", hoursz, minutesz, secondsz)
        ' Tambahkan satu detik ke waktu yang telah berlalu


        ' Tampilkan waktu pada label
        TCount.Text = timeString

        'R12.Text = Double.Parse(R12Cur.Text)

        If RadioButton1.Checked = True And CDbl(TotLap.Text) < CDbl(ReqLap.Text) Then


            If Double.TryParse(CDbl(P1X.Text) + 20, startX) AndAlso Double.TryParse(P2X.Text, endX) AndAlso Double.TryParse(P1Y.Text, pointY) Then

                ' Update pointX position
                pointX += direction * 5 ' Adjust step size as needed
                If PosX.Text = "" Then
                    TextBox4.Text = startX - 20
                    TextBox5.Text = ((startX - 20) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                    PosX.Text = CDbl(P1X.Text) + 10
                Else
                    If CDbl(PosX.Text) > CDbl(endX) Then
                        ' Check boundaries and reverse direction if necessary
                        If (direction = 1 AndAlso pointX >= startX) OrElse (direction = -1 AndAlso pointX <= endX) Then
                            direction *= -1
                        ElseIf (direction = -1 AndAlso pointX >= startX) OrElse (direction = 1 AndAlso pointX <= endX) Then
                            direction *= -1
                        End If

                        ' Draw to the bufferGraphics
                        Dim g As Graphics = bufferGraphics.Graphics

                        ' Clear the buffer
                        g.Clear(Color.Transparent)

                        ' Draw the background image
                        g.DrawImage(PictureBox1.Image, 0, 0, PictureBox1.Width, PictureBox1.Height)

                        ' Draw the point (circle with diameter 10 points)
                        Dim rect As New Rectangle(CInt(pointX - 5), CInt(pointY - 5), 10, 10)
                        PosX.Text = pointX
                        PosY.Text = pointY
                        RXm.Text = ((CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TextBox5.Text)
                        RYm.Text = (CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text))
                        R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - pointX) ^ 2 + (CDbl(A1Y.Text) - pointY) ^ 2), 4)
                        R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - pointX) ^ 2 + (CDbl(A2Y.Text) - pointY) ^ 2), 4)
                        g.FillEllipse(Brushes.Black, rect)
                        Dim grayPen As New Pen(Color.LightGray, 2)
                        grayPen.DashStyle = Drawing2D.DashStyle.Dash
                        g.DrawLine(grayPen, CSng(A1X.Text) + 10, CSng(A1Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        ' Render the bufferGraphics to PictureBox1
                        ' Draw the label in the middle of the dashed line
                        DrawLabelOnLine(g, "R13", CSng(A1X.Text) + 10, CSng(A1Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        DrawLabelOnLine2(g, "R23", CSng(A2X.Text) + 10, CSng(A2Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))

                        Dim LBPen As New Pen(Color.LightBlue, 2)
                        LBPen.DashStyle = Drawing2D.DashStyle.Dash
                        g.DrawLine(LBPen, CSng(A2X.Text) + 10, CSng(A2Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        ' Render the bufferGraphics to PictureBox1
                        ' Hitung posisi tengah garis

                        bufferGraphics.Render()
                    Else
                        Timer3.Stop()
                        Timer3.Enabled = False
                        TotLap.Text = CDbl(TotLap.Text) + (1 / 2)

                        Timer7.Enabled = True
                        Timer7.Interval = 10
                        Timer7.Start()
                    End If
                End If


            Else
                ' Stop the timer if the input is invalid
                Timer3.Enabled = False
                Timer3.Stop()
                Timer7.Enabled = False
                Timer7.Stop()

                MessageBox.Show("Please enter valid numeric values in P1X, P2X, and P1Y.", "Invalid Input", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
        ElseIf RadioButton2.Checked = True And CDbl(ReqTime.Text) * 60 > ConvertTimeToMinutes(TCount.Text) Or TCount.Text = "00:00:00" Then
            'ToTime.Text = (CDbl(ToTime.Text) + CDbl(Timer3.Interval)) / 6000


            If Double.TryParse(P1X.Text + 20, startX) AndAlso Double.TryParse(P2X.Text, endX) AndAlso Double.TryParse(P1Y.Text, pointY) Then

                ' Update pointX position
                pointX += direction * 5 ' Adjust step size as needed
                If PosX.Text = "" Then
                    PosX.Text = P1X.Text + 10
                Else
                    If CDbl(PosX.Text) > CDbl(endX) Then
                        ' Check boundaries and reverse direction if necessary
                        If (direction = 1 AndAlso pointX >= startX) OrElse (direction = -1 AndAlso pointX <= endX) Then
                            direction *= -1
                        ElseIf (direction = -1 AndAlso pointX >= startX) OrElse (direction = 1 AndAlso pointX <= endX) Then
                            direction *= -1
                        End If

                        ' Draw to the bufferGraphics
                        Dim g As Graphics = bufferGraphics.Graphics

                        ' Clear the buffer
                        g.Clear(Color.Transparent)

                        ' Draw the background image
                        g.DrawImage(PictureBox1.Image, 0, 0, PictureBox1.Width, PictureBox1.Height)

                        ' Draw the point (circle with diameter 10 points)
                        Dim rect As New Rectangle(CInt(pointX - 5), CInt(pointY - 5), 10, 10)
                        PosX.Text = pointX
                        PosY.Text = pointY
                        RXm.Text = (CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text) - CDbl(TextBox5.Text)
                        RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                        R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - pointX) ^ 2 + (CDbl(A1Y.Text) - pointY) ^ 2), 4)
                        R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - pointX) ^ 2 + (CDbl(A2Y.Text) - pointY) ^ 2), 4)
                        g.FillEllipse(Brushes.Black, rect)
                        Dim grayPen As New Pen(Color.LightGray, 2)
                        grayPen.DashStyle = Drawing2D.DashStyle.Dash
                        g.DrawLine(grayPen, CSng(A1X.Text) + 10, CSng(A1Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        ' Render the bufferGraphics to PictureBox1
                        ' Draw the label in the middle of the dashed line
                        DrawLabelOnLine(g, "R13", CSng(A1X.Text) + 10, CSng(A1Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        DrawLabelOnLine2(g, "R23", CSng(A2X.Text) + 10, CSng(A2Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))

                        Dim LBPen As New Pen(Color.LightBlue, 2)
                        LBPen.DashStyle = Drawing2D.DashStyle.Dash
                        g.DrawLine(LBPen, CSng(A2X.Text) + 10, CSng(A2Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        ' Render the bufferGraphics to PictureBox1
                        ' Hitung posisi tengah garis

                        bufferGraphics.Render()
                    Else
                        Timer3.Stop()
                        Timer3.Enabled = False
                        TotLap.Text = CDbl(TotLap.Text) + (1 / 2)

                        Timer7.Enabled = True
                        Timer7.Interval = 10
                        Timer7.Start()
                    End If
                End If


            Else
                ' Stop the timer if the input is invalid
                Timer3.Enabled = False
                Timer3.Stop()
                Timer7.Enabled = False
                Timer7.Stop()
                MessageBox.Show("Please enter valid numeric values in P1X, P2X, and P1Y.", "Invalid Input", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
        Else
            Timer7.Stop()
            Timer7.Enabled = False
            Timer3.Stop()
            Timer3.Enabled = False
            Timer5.Stop()
            Timer5.Enabled = False
            Timer6.Stop()
            Timer6.Enabled = False
            timeString = "0"
            timeString = "00:00:00"
        End If
    End Sub
    Private Sub DrawLabelOnLine(ByVal g As Graphics, ByVal text As String, ByVal x1 As Single, ByVal y1 As Single, ByVal x2 As Single, ByVal y2 As Single)
        ' Hitung posisi tengah garis
        Dim midX As Single = (x1 + x2) / 2
        Dim midY As Single = (y1 + y2) / 2

        ' Tentukan font dan brush untuk teks
        Dim font As New Font("Arial", 10, FontStyle.Regular)
        Dim brush As New SolidBrush(Color.Black)

        ' Ukur ukuran teks
        Dim textSize As SizeF = g.MeasureString(text, font)

        ' Tentukan posisi teks sehingga berada di tengah garis
        Dim textX As Single = midX - (textSize.Width / 2)
        Dim textY As Single = midY - (textSize.Height / 2)

        ' Gambar teks pada grafik
        g.DrawString(text, font, brush, textX, textY)
    End Sub
    Private Sub DrawLabelOnLine2(ByVal g As Graphics, ByVal text As String, ByVal x1 As Single, ByVal y1 As Single, ByVal x2 As Single, ByVal y2 As Single)
        ' Hitung posisi tengah garis
        Dim midX As Single = (x1 + x2) / 2
        Dim midY As Single = (y1 + y2) / 2

        ' Tentukan font dan brush untuk teks
        Dim font As New Font("Arial", 10, FontStyle.Regular)
        Dim brush As New SolidBrush(Color.Brown)

        ' Ukur ukuran teks
        Dim textSize As SizeF = g.MeasureString(text, font)

        ' Tentukan posisi teks sehingga berada di tengah garis
        Dim textX As Single = midX - (textSize.Width / 2)
        Dim textY As Single = midY - (textSize.Height / 2)

        ' Gambar teks pada grafik
        g.DrawString(text, font, brush, textX, textY)
    End Sub
    Private Sub Button45_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button45.Click
        ' Clear PictureBox1
        Dim g As Graphics = PictureBox1.CreateGraphics()
        g.Clear(PictureBox1.BackColor)
        g.Dispose()
    End Sub

    Private Sub Button44_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button44.Click
        ' Inisialisasi BufferedGraphicsContext
        bufferContext = BufferedGraphicsManager.Current
        bufferContext.MaximumBuffer = New Size(PictureBox1.Width + 1, PictureBox1.Height + 1)

        ' Load gambar petunjuk dari file (misalnya)
        Dim openFileDialog As New OpenFileDialog()
        openFileDialog.Filter = "Image Files|*.bmp;*.jpg;*.jpeg;*.png;*.gif"
        openFileDialog.Title = "Select an Image File"

        ' Tampilkan OpenFileDialog dan pilih gambar
        If openFileDialog.ShowDialog() = DialogResult.OK Then
            Try
                ' Load gambar dari file yang dipilih
                Dim backgroundImage As New Bitmap(openFileDialog.FileName)
                PictureBox1.Image = backgroundImage
                ' Tampilkan path file gambar di TextBox
                ImagePath.Text = openFileDialog.FileName
                ' Inisialisasi bufferGraphics
                bufferGraphics = bufferContext.Allocate(PictureBox1.CreateGraphics(), New Rectangle(0, 0, PictureBox1.Width, PictureBox1.Height))

                ' Set Timer interval (misalnya 50 ms)
                Timer3.Interval = 10
                Timer3.Enabled = False
                MsgBox("Setting background done!")
                StatBG.Text = "Configured"
            Catch ex As Exception
                MessageBox.Show("Error loading image: " & ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End Try
        End If
    End Sub

    Private Sub SimSR_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SimSR.Click
        ' Inisialisasi pusat gerakan infinity di tengah PictureBox
        SLS.PerformClick()
        TotLap.Text = 0
        TCount.Text = "00:00:00"
        If StatBG.Text = "No Status" Then
            MsgBox("Must Set the background image")
            Button45.PerformClick()
            Button44.PerformClick()

        End If
        centerX = PictureBox1.Width \ 2
        centerY = P1Y.Text + 10

        ' Inisialisasi bitmap untuk double buffering
        bitmap = New Bitmap(PictureBox1.Width, PictureBox1.Height)
        bitmapGraphics = Graphics.FromImage(bitmap)

        ' Mulai timer untuk menggerakkan titik
        Timer5.Enabled = True
        Timer5.Interval = 10 ' Interval timer dalam milidetik
        Timer5.Start()

    End Sub

    Private Sub Timer5_Tick(ByVal sender As Object, ByVal e As EventArgs) Handles Timer5.Tick
        Dim hoursz As Integer = elapsedTime \ 3600
        Dim minutesz As Integer = (elapsedTime Mod 3600) \ 60
        Dim secondsz As Integer = elapsedTime Mod 60
        ' Format waktu menjadi hh:mm:ss
        elapsedTime += 1
        Dim timeString As String = String.Format("{0:00}:{1:00}:{2:00}", hoursz, minutesz, secondsz)
        ' Tambahkan satu detik ke waktu yang telah berlalu

        timeString = String.Format("{0:00}:{1:00}:{2:00}", hoursz, minutesz, secondsz)
        ' Tampilkan waktu pada label
        TCount.Text = timeString


        If RadioButton1.Checked = True And CDbl(TotLap.Text) < CDbl(ReqLap.Text) Then
            ' Tambahkan satu detik ke waktu yang telah berlalu
            TextBox5.Text = (CDbl(P1X.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
            TextBox4.Text = CDbl(P1X.Text)
            ' Tampilkan waktu pada label

            If PosX.Text = "" Then
                Dim angle As Double

                If PosX.Text = "" Then
                    '  TextBox4.Text = startX - 20

                    angle = 2.2
                    Ang.Text = angle
                End If
                Dim x As Double = CDbl(UFPX.Text) + (CDbl(TextBox1.Text) / 2) + CDbl(490 * Math.Sin(CDbl(Ang.Text)))
                Dim y As Double = CDbl(P1Y.Text) + CDbl(60 * Math.Sin(2 * CDbl(Ang.Text)))

                PosX.Text = x
                PosY.Text = y

                RXm.Text = (CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text) - CDbl(TextBox5.Text)
                RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                ' bufferGraphics.Render()
                R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - x) ^ 2 + (CDbl(A1Y.Text) - y) ^ 2), 4)
                R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - x) ^ 2 + (CDbl(A2Y.Text) - y) ^ 2), 4)
                ' Gambar titik pada posisi (x, y) di buffer bitmap
                DrawPoint(x, y)
                ' Gambar garis putus-putus dari (A1X, A1Y) ke (x, y)
                DrawDashedLine(CDbl(A1X.Text) + 10, CDbl(A1Y.Text) + 10, x, y)
                DrawDashedLine2(CDbl(A2X.Text) + 10, CDbl(A2Y.Text) + 10, x, y)
                ' Gambar buffer bitmap ke PictureBox
                PictureBox1.Image = bitmap
            Else
                If CDbl(PosX.Text) >= CDbl(P2X.Text) Then
                    ' Hitung posisi titik berdasarkan gerakan infinity
                    Dim angle As Double
                    If PosX.Text = "" Then
                        TextBox5.Text = (CDbl(P1X.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                        angle = 2.2
                        Ang.Text = angle
                    End If
                    Dim x As Double = CDbl(UFPX.Text) + (CDbl(TextBox1.Text) / 2) + CDbl(490 * Math.Sin(CDbl(Ang.Text)))
                    Dim y As Double = CDbl(P1Y.Text) + CDbl(60 * Math.Sin(2 * CDbl(Ang.Text)))
                    ' Ang.Text = angle
                    Ang.Text = CDbl(Ang.Text) + CDbl(1 / 100)
                    PosX.Text = x
                    PosY.Text = y
                    RXm.Text = (CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text) - CDbl(TextBox5.Text)
                    RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                    R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - x) ^ 2 + (CDbl(A1Y.Text) - y) ^ 2), 4)
                    R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - x) ^ 2 + (CDbl(A2Y.Text) - y) ^ 2), 4)
                    ' Gambar titik pada posisi (x, y) di buffer bitmap
                    DrawPoint(x, y)
                    ' Gambar garis putus-putus dari (A1X, A1Y) ke (x, y)
                    DrawDashedLine(CDbl(A1X.Text) + 10, CDbl(A1Y.Text) + 10, x, y)
                    DrawDashedLine2(CDbl(A2X.Text) + 10, CDbl(A2Y.Text) + 10, x, y)
                    PictureBox1.Image = bitmap

                Else
                    Timer5.Stop()
                    Timer5.Enabled = False
                    TotLap.Text = CDbl(TotLap.Text) + (1 / 2)

                    Timer6.Enabled = True
                    Timer6.Interval = 10
                    Timer6.Start()
                End If
            End If
        ElseIf RadioButton2.Checked = True And ConvertTimeToMinutes(TCount.Text) < Val(ReqTime.Text) * 60 Then
            ' Tambahkan satu detik ke waktu yang telah berlalu


            ' Tampilkan waktu pada label

            If PosX.Text = "" Then
                TextBox5.Text = (CDbl(P1X.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                Dim angle As Double
                If PosX.Text = "" Then
                    angle = 2.2
                    Ang.Text = angle
                End If
                Dim x As Double = CDbl(UFPX.Text) + (CDbl(TextBox1.Text) / 2) + CDbl(490 * Math.Sin(CDbl(Ang.Text)))
                Dim y As Double = CDbl(P1Y.Text) + CDbl(60 * Math.Sin(2 * CDbl(Ang.Text)))

                PosX.Text = x
                PosY.Text = y

                RXm.Text = (CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text) - CDbl(TextBox5.Text)
                RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                ' bufferGraphics.Render()
                R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - x) ^ 2 + (CDbl(A1Y.Text) - y) ^ 2), 4)
                R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - x) ^ 2 + (CDbl(A2Y.Text) - y) ^ 2), 4)
                ' Gambar titik pada posisi (x, y) di buffer bitmap
                DrawPoint(x, y)
                ' Gambar garis putus-putus dari (A1X, A1Y) ke (x, y)
                DrawDashedLine(CDbl(A1X.Text) + 10, CDbl(A1Y.Text) + 10, x, y)
                DrawDashedLine2(CDbl(A2X.Text) + 10, CDbl(A2Y.Text) + 10, x, y)
                ' Gambar buffer bitmap ke PictureBox
                PictureBox1.Image = bitmap
            Else
                If CDbl(PosX.Text) >= CDbl(P2X.Text) Then
                    ' Hitung posisi titik berdasarkan gerakan infinity
                    Dim angle As Double
                    If PosX.Text = "" Then
                        angle = 2.2
                        Ang.Text = angle
                        TextBox5.Text = (CDbl(P1X.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                    End If
                    Dim x As Double = CDbl(UFPX.Text) + (CDbl(TextBox1.Text) / 2) + CDbl(490 * Math.Sin(CDbl(Ang.Text)))
                    Dim y As Double = CDbl(P1Y.Text) + CDbl(60 * Math.Sin(2 * CDbl(Ang.Text)))
                    ' Ang.Text = angle
                    Ang.Text = CDbl(Ang.Text) + CDbl(1 / 100)
                    PosX.Text = x
                    PosY.Text = y
                    RXm.Text = (CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text) - CDbl(TextBox5.Text)
                    RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                    R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - x) ^ 2 + (CDbl(A1Y.Text) - y) ^ 2), 4)
                    R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - x) ^ 2 + (CDbl(A2Y.Text) - y) ^ 2), 4)
                    ' Gambar titik pada posisi (x, y) di buffer bitmap
                    DrawPoint(x, y)
                    ' Gambar garis putus-putus dari (A1X, A1Y) ke (x, y)
                    DrawDashedLine(CDbl(A1X.Text) + 10, CDbl(A1Y.Text) + 10, x, y)
                    DrawDashedLine2(CDbl(A2X.Text) + 10, CDbl(A2Y.Text) + 10, x, y)
                    PictureBox1.Image = bitmap

                Else
                    Timer5.Stop()
                    Timer5.Enabled = False
                    TotLap.Text = CDbl(TotLap.Text) + (1 / 2)

                    Timer6.Enabled = True
                    Timer6.Interval = 10
                    Timer6.Start()
                End If
            End If
        Else
            Timer7.Stop()
            Timer7.Enabled = False
            Timer3.Stop()
            Timer3.Enabled = False
            Timer5.Stop()
            Timer5.Enabled = False
            Timer6.Stop()
            Timer6.Enabled = False
        End If


    End Sub
    Private Sub DrawPoint(ByVal x As Integer, ByVal y As Integer)
        ' Membersihkan buffer bitmap
        bitmapGraphics.Clear(Color.Transparent)

        ' Menggambar titik dengan diameter 10pt di buffer bitmap
        bitmapGraphics.FillEllipse(Brushes.Purple, x + 5, y + 5, 10, 10)

    End Sub

    Private Sub Timer4_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer4.Tick
        Try
            ' Mendapatkan nilai dari TextBox dan mengonversi menjadi Double


            'R22.Text = Double.Parse(R22Cur.Text)



            'R12.Text = Double.Parse(R12Cur.Text)



            Dim NR22 As Double
            Dim NR11 As Double = Double.Parse(R11.Text) 'static
            Dim NA12 As Double = Double.Parse(A12.Text)
            Dim NA21 As Double = Double.Parse(A21.Text)
            Dim NR12 As Double
            Dim NR21 As Double = Double.Parse(R21.Text)

            AntRat.Text = CDbl(A12.Text) / CDbl(A21.Text)


            ' Menghitung nilai sudut B dan P menggunakan hukum kosinus
            Dim cosB As Double = ((NR12) ^ 2 + (NA12) ^ 2 - (NR22 * (CDbl(AntRat.Text))) ^ 2) / (2 * NR12 * (CDbl(AntRat.Text)) * NA12)
            Dim cosP As Double = (NR11 ^ 2 + (NA21 * CDbl(AntRat.Text)) ^ 2 - (NR21 * CDbl(AntRat.Text)) ^ 2) / (2 * NR11 * NA21 * CDbl(AntRat.Text))

            BA.Text = 180 * Math.Acos(cosB) / Math.PI
            ' Menghitung sudut theta
            Dim psi As Double = 180 * (Math.Acos(cosB) + Math.Acos(cosP)) / Math.PI
            ' Dim sinA As Double = (NR12 / NR11) * Math.Sqrt(1 - (Math.Cos(theta * Math.PI / 180)) ^ 2)

            'TextBox54.Text = Math.Cos(90 * Math.PI / 180)
            ' TextBox54.Text = 180 * Math.Acos(0) / Math.PI
            ' Menghitung F (QA) menggunakan rumus yang diberikan
            Dim F As Double = Math.Sqrt((NR12 ^ 2) + (NR11 ^ 2) - (2 * NR12 * NR11 * Math.Cos(psi * Math.PI / 180)))
            P1P2.Text = F

            EA.Text = CDbl(XA1.Text) + CDbl(BA.Text)
            ' Mendefinisikan variabel dan mendapatkan nilai mereka dari TextBox
            ' Deklarasi variabel dan ambil nilai dari TextBox


            Dim S1 As Double
            Dim S1Prime As Double

            ' Coba konversi nilai TextBox menjadi Double
            Try
                F = Convert.ToDouble(P1P2.Text)
                S1 = Convert.ToDouble(R12.Text)
                S1Prime = Convert.ToDouble(R11.Text)
            Catch ex As Exception
                MessageBox.Show("Pastikan semua input adalah angka yang valid.")
                Exit Sub
            End Try


            ' Langkah-langkah perhitungan
            Dim numerator As Double = F ^ 2 + S1 ^ 2 - S1Prime ^ 2
            '  Dim numerator2 As Double = -F * S1 - Sqrt(F ^ 2 * S1 ^ 2 + (S1 * S1Prime - S1 ^ 2) * (S1 * S1Prime - S1Prime ^ 2 + F ^ 2))
            Dim denominator As Double = 2 * F * S1

            ' Periksa apakah denominator tidak nol
            If denominator = 0 Then
                MessageBox.Show("Denominator tidak boleh nol.")
                Exit Sub
            End If

            ' Hasil akhir
            Dim x As Double = Math.Acos(numerator / denominator)
            '  Dim x2 As Double = Math.Acos(numerator2 / denominator)

            ' Memastikan pembagi tidak nol
            If denominator = 0 Then
                Console.WriteLine("Pembagi adalah nol, tidak dapat menghitung x")
                Exit Sub
            End If
            Dim numerat As Double = (NR22 ^ 2) + (NR12 ^ 2) - (NA12 ^ 2)
            Dim denom As Double = 2 * NR22 * NR12
            '  Dim cospsi As Double = Math.Cos((CDbl(numerat) / CDbl(denom)))
            'Dim psi As Double = (Math.Acos(cospsi)) '* 180 / Math.PI
            Dim tes As Double = Math.Cos(60 * Math.PI / 180)

            XA1.Text = 180 * Math.Acos(numerator / denominator) / Math.PI
            PsiBox.Text = 180 * Math.Acos(numerat / denom) / Math.PI
            ZA.Text = CDbl(XA1.Text) - CDbl(PsiBox.Text)
            Dim sinX As Double = Math.Sin(CDbl(XA1.Text) * Math.PI / 180)

            Dim siny As Double = (NR12 / NR11) * sinX

            YA1.Text = Math.Asin(CDbl(siny)) * 180 / Math.PI

            P1A1.Text = CStr(R11.Text) * Math.Sin(YA1.Text * Math.PI / 180)

            PosX.Text = CDbl(A1X.Text) - (CDbl(R12Cur.Text) * Math.Cos(CDbl(XA1.Text) * Math.PI / 180))
            PosY.Text = CDbl(A1Y.Text) - (CDbl(R12Cur.Text) * Math.Sin(CDbl(XA1.Text) * Math.PI / 180))

        Catch ex As Exception
            MessageBox.Show(ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End Try



    End Sub

    Private Sub Button47_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button47.Click
        ' Load gambar berdasarkan path yang terdapat di TextBox
        Dim path As String = ImagePath.Text

        If System.IO.File.Exists(path) Then
            Try
                ' Load gambar dari file path yang ada di TextBox
                Dim backgroundImage As New Bitmap(path)
                PictureBox1.Image = backgroundImage

                ' Inisialisasi bufferGraphics
                bufferGraphics = bufferContext.Allocate(PictureBox1.CreateGraphics(), New Rectangle(0, 0, PictureBox1.Width, PictureBox1.Height))

                ' Set Timer interval (misalnya 10 ms)
                Timer3.Interval = 10
                Timer3.Enabled = False
                'MsgBox("Setting background done!")
                StatBG.Text = "Configured"
            Catch ex As Exception
                MessageBox.Show("Error loading image: " & ex.Message, "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End Try
        Else
            MessageBox.Show("The file path specified does not exist.", "Error", MessageBoxButtons.OK, MessageBoxIcon.Error)
        End If
    End Sub


    Private Sub SLS_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles SLS.Click, SLS.Click
        Timer3.Stop()
        Timer7.Stop()
        Timer5.Stop()
        Timer6.Stop()
        ' TotLap.Text = "0"
        ''ToTime.Text = "00:00:00"
        'PosY.Text = ""
        'PosX.Text = ""
        'TCount.Text = "00:00:00"
        'elapsedTime = 0
        ' ' timeString = "00:00:00"
        '' Metode 1: Menghapus Konten PictureBox dengan Menetapkan Properti Image ke Nothing
        ' PictureBox1.Image = Nothing

        ' ' Metode 2: Menghapus Konten PictureBox dengan Mengganti Gambar Kosong
        ' Dim bmp As New Bitmap(PictureBox1.Width, PictureBox1.Height)
        ' Using g As Graphics = Graphics.FromImage(bmp)
        'g.Clear(Color.White) ' Atau warna latar belakang yang Anda inginkan
        ' End Using
        ' PictureBox1.Image = bmp

        ' Metode 3: Menghapus Gambar yang Digambar Menggunakan Graphics
        ' PictureBox1.Invalidate()
        ' PictureBox1.Update()
    End Sub



    Private Sub Timer6_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer6.Tick
        Dim hoursz As Integer = elapsedTime \ 3600
        Dim minutesz As Integer = (elapsedTime Mod 3600) \ 60
        Dim secondsz As Integer = elapsedTime Mod 60
        ' Format waktu menjadi hh:mm:ss
        Dim timeString As String = String.Format("{0:00}:{1:00}:{2:00}", hoursz, minutesz, secondsz)
        ' Tambahkan satu detik ke waktu yang telah berlalu
        elapsedTime += 1
        timeString = String.Format("{0:00}:{1:00}:{2:00}", hoursz, minutesz, secondsz)
        ' Tampilkan waktu pada label
        TCount.Text = timeString


        'R12.Text = Double.Parse(R12Cur.Text)

        If RadioButton1.Checked = True And CDbl(TotLap.Text) < CDbl(ReqLap.Text) Then

            If PosX.Text = "" Then
                Dim angle As Double
                If PosX.Text = "" Then
                    angle = 2.2
                    Ang.Text = angle
                    TextBox5.Text = (CDbl(P1X.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                End If
                Dim x As Double = CDbl(UFPX.Text) + (CDbl(TextBox1.Text) / 2) + CDbl(490 * Math.Sin(CDbl(Ang.Text)))
                Dim y As Double = CDbl(P1Y.Text) + CDbl(60 * Math.Sin(2 * CDbl(Ang.Text)))
                R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - x) ^ 2 + (CDbl(A1Y.Text) - y) ^ 2), 4)
                R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - x) ^ 2 + (CDbl(A2Y.Text) - y) ^ 2), 4)
                PosX.Text = x
                PosY.Text = y
                RXm.Text = ((CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TextBox5.Text)
                RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                ' Gambar titik pada posisi (x, y) di buffer bitmap
                DrawPoint(x, y)
                ' Gambar garis putus-putus dari (A1X, A1Y) ke (x, y)
                DrawDashedLine(CDbl(A1X.Text), CDbl(A1Y.Text), x, y)
                DrawDashedLine2(CDbl(A2X.Text), CDbl(A2Y.Text), x, y)
                ' Render the bufferGraphics to PictureBox1
                ' bufferGraphics.Render()
                ' Gambar buffer bitmap ke PictureBox
                PictureBox1.Image = bitmap
            Else
                If CDbl(PosX.Text) <= CDbl(P1X.Text) Then
                    ' Hitung posisi titik berdasarkan gerakan infinity
                    Dim angle As Double
                    If PosX.Text = "" Then
                        angle = 2.2
                        Ang.Text = angle
                        TextBox5.Text = (CDbl(P1X.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                    End If
                    Dim x As Double = CDbl(UFPX.Text) + (CDbl(TextBox1.Text) / 2) + CDbl(490 * Math.Sin(CDbl(Ang.Text)))
                    Dim y As Double = CDbl(P1Y.Text) + CDbl(60 * Math.Sin(2 * CDbl(Ang.Text)))
                    ' Ang.Text = angle
                    Ang.Text = CDbl(Ang.Text) + CDbl(1 / 100)
                    PosX.Text = x
                    PosY.Text = y
                    RXm.Text = CDbl((CDbl(PosX.Text))) * CDbl(AFScl.Text) / CDbl(ARScl.Text) - CDbl(TextBox5.Text)
                    RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                    R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - x) ^ 2 + (CDbl(A1Y.Text) - y) ^ 2), 4)
                    R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - x) ^ 2 + (CDbl(A2Y.Text) - y) ^ 2), 4)
                    ' Gambar titik pada posisi (x, y) di buffer bitmap
                    DrawPoint(x, y)
                    ' Gambar garis putus-putus dari (A1X, A1Y) ke (x, y)
                    DrawDashedLine(CDbl(A1X.Text), CDbl(A1Y.Text) + 10, x, y)
                    DrawDashedLine2(CDbl(A2X.Text), CDbl(A2Y.Text) + 10, x, y)
                    ' Render the bufferGraphics to PictureBox1
                    '  bufferGraphics.Render()
                    ' Gambar buffer bitmap ke PictureBox
                    PictureBox1.Image = bitmap

                Else
                    Timer6.Stop()
                    Timer6.Enabled = False
                    TotLap.Text = CDbl(TotLap.Text) + (1 / 2)

                    Timer5.Enabled = True
                    Timer5.Interval = 10
                    Timer5.Start()
                End If
            End If
        ElseIf RadioButton2.Checked = True And ConvertTimeToMinutes(TCount.Text) < Val(ReqTime.Text) * 60 Then
            ' Tambahkan satu detik ke waktu yang telah berlalu
            elapsedTime += 1

            ' Tampilkan waktu pada label
            TCount.Text = timeString
            If PosX.Text = "" Then
                Dim angle As Double
                If PosX.Text = "" Then
                    angle = 2.2
                    Ang.Text = angle
                    TextBox5.Text = (CDbl(P1X.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                End If
                Dim x As Double = CDbl(UFPX.Text) + (CDbl(TextBox1.Text) / 2) + CDbl(490 * Math.Sin(CDbl(Ang.Text)))
                Dim y As Double = CDbl(P1Y.Text) + CDbl(60 * Math.Sin(2 * CDbl(Ang.Text)))
                R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - x) ^ 2 + (CDbl(A1Y.Text) - y) ^ 2), 4)
                R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - x) ^ 2 + (CDbl(A2Y.Text) - y) ^ 2), 4)
                PosX.Text = x
                PosY.Text = y
                RXm.Text = ((CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TextBox5.Text)
                RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                ' Gambar titik pada posisi (x, y) di buffer bitmap
                DrawPoint(x, y)
                ' Gambar garis putus-putus dari (A1X, A1Y) ke (x, y)
                DrawDashedLine(CDbl(A1X.Text), CDbl(A1Y.Text), x, y)
                DrawDashedLine2(CDbl(A2X.Text), CDbl(A2Y.Text), x, y)
                ' Render the bufferGraphics to PictureBox1
                ' bufferGraphics.Render()
                ' Gambar buffer bitmap ke PictureBox
                PictureBox1.Image = bitmap
            Else
                If CDbl(PosX.Text) <= CDbl(P1X.Text) Then
                    ' Hitung posisi titik berdasarkan gerakan infinity
                    Dim angle As Double
                    If PosX.Text = "" Then
                        angle = 2.2
                        Ang.Text = angle
                        TextBox5.Text = (CDbl(P1X.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                    End If
                    Dim x As Double = CDbl(UFPX.Text) + (CDbl(TextBox1.Text) / 2) + CDbl(490 * Math.Sin(CDbl(Ang.Text)))
                    Dim y As Double = CDbl(P1Y.Text) + CDbl(60 * Math.Sin(2 * CDbl(Ang.Text)))
                    ' Ang.Text = angle
                    Ang.Text = CDbl(Ang.Text) + CDbl(1 / 100)
                    PosX.Text = x
                    PosY.Text = y
                    RXm.Text = (CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text) - CDbl(TextBox5.Text)
                    RYm.Text = CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                    R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - x) ^ 2 + (CDbl(A1Y.Text) - y) ^ 2), 4)
                    R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - x) ^ 2 + (CDbl(A2Y.Text) - y) ^ 2), 4)
                    ' Gambar titik pada posisi (x, y) di buffer bitmap
                    DrawPoint(x, y)
                    ' Gambar garis putus-putus dari (A1X, A1Y) ke (x, y)
                    DrawDashedLine(CDbl(A1X.Text), CDbl(A1Y.Text) + 10, x, y)
                    DrawDashedLine2(CDbl(A2X.Text), CDbl(A2Y.Text) + 10, x, y)
                    ' Render the bufferGraphics to PictureBox1
                    '  bufferGraphics.Render()
                    ' Gambar buffer bitmap ke PictureBox
                    PictureBox1.Image = bitmap

                Else
                    Timer6.Stop()
                    Timer6.Enabled = False
                    TotLap.Text = CDbl(TotLap.Text) + (1 / 2)

                    Timer5.Enabled = True
                    Timer5.Interval = 10
                    Timer5.Start()
                End If
            End If
        Else
            Timer7.Stop()
            Timer7.Enabled = False
            Timer3.Stop()
            Timer3.Enabled = False
            Timer5.Stop()
            Timer5.Enabled = False
            Timer6.Stop()
            Timer6.Enabled = False
        End If
    End Sub

    Private Sub Timer7_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer7.Tick
        Dim startX As Double
        Dim endX As Double
        Dim pointY As Double
        ' ToTime.Text = (CDbl(ToTime.Text) + CDbl(Timer7.Interval)) / 6000
        elapsedTime += 1
        Dim hoursz As Integer = elapsedTime \ 3600
        Dim minutesz As Integer = (elapsedTime Mod 3600) \ 60
        Dim secondsz As Integer = elapsedTime Mod 60
        ' Format waktu menjadi hh:mm:ss

        timeString = String.Format("{0:00}:{1:00}:{2:00}", hoursz, minutesz, secondsz)
        TCount.Text = timeString



        'R12.Text = Double.Parse(R12Cur.Text)

        If RadioButton1.Checked = True And CDbl(TotLap.Text) < CDbl(ReqLap.Text) Then


            If Double.TryParse(P1X.Text + 20, startX) AndAlso Double.TryParse(P2X.Text, endX) AndAlso Double.TryParse(P1Y.Text, pointY) Then

                ' Update pointX position
                pointX += direction * 5 ' Adjust step size as needed
                If PosX.Text = "" Then
                    TextBox5.Text = ((startX - 20) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                    PosX.Text = P1X.Text + 10
                Else
                    If CDbl(PosX.Text) < CDbl(startX) Then
                        ' Check boundaries and reverse direction if necessary
                        If (direction = 1 AndAlso pointX >= startX) OrElse (direction = -1 AndAlso pointX <= endX) Then
                            direction *= -1
                        ElseIf (direction = -1 AndAlso pointX >= startX) OrElse (direction = 1 AndAlso pointX <= endX) Then
                            direction *= -1
                        End If

                        ' Draw to the bufferGraphics
                        Dim g As Graphics = bufferGraphics.Graphics

                        ' Clear the buffer
                        g.Clear(Color.Transparent)

                        ' Draw the background image
                        g.DrawImage(PictureBox1.Image, 0, 0, PictureBox1.Width, PictureBox1.Height)

                        ' Draw the point (circle with diameter 10 points)
                        Dim rect As New Rectangle(CInt(pointX - 5), CInt(pointY - 5), 10, 10)
                        PosX.Text = pointX
                        PosY.Text = pointY
                        RXm.Text = ((CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TextBox5.Text)
                        RYm.Text = (CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text))
                        R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - pointX) ^ 2 + (CDbl(A1Y.Text) - pointY) ^ 2), 4)
                        R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - pointX) ^ 2 + (CDbl(A2Y.Text) - pointY) ^ 2), 4)
                        g.FillEllipse(Brushes.Black, rect)
                        g.FillEllipse(Brushes.Black, rect)
                        Dim grayPen As New Pen(Color.Gray, 2)
                        grayPen.DashStyle = Drawing2D.DashStyle.Dash
                        g.DrawLine(grayPen, CSng(A1X.Text) + 10, CSng(A1Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        ' Render the bufferGraphics to PictureBox1
                        Dim LBPen As New Pen(Color.LightBlue, 2)
                        LBPen.DashStyle = Drawing2D.DashStyle.Dash
                        g.DrawLine(LBPen, CSng(A2X.Text) + 10, CSng(A2Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        ' Hitung posisi tengah garis
                        DrawLabelOnLine(g, "R13", CSng(A1X.Text), CSng(A1Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        DrawLabelOnLine2(g, "R23", CSng(A2X.Text), CSng(A2Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        bufferGraphics.Render()
                    Else
                        Timer7.Stop()
                        Timer7.Enabled = False
                        TotLap.Text = CDbl(TotLap.Text) + (1 / 2)

                        Timer3.Enabled = True
                        Timer3.Interval = 10
                        Timer3.Start()
                    End If
                End If


            Else
                ' Stop the timer if the input is invalid
                Timer7.Enabled = False
                MessageBox.Show("Please enter valid numeric values in P1X, P2X, and P1Y.", "Invalid Input", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
        ElseIf RadioButton2.Checked = True And CDbl(ReqTime.Text) * 60 > ConvertTimeToMinutes(TCount.Text) Or TCount.Text = "00:00:00" Then
            ' Tambahkan satu detik ke waktu yang telah berlalu


            If Double.TryParse(P1X.Text + 20, startX) AndAlso Double.TryParse(P2X.Text, endX) AndAlso Double.TryParse(P1Y.Text, pointY) Then

                ' Update pointX position
                pointX += direction * 5 ' Adjust step size as needed
                If PosX.Text = "" Then

                    TextBox5.Text = ((startX - 20) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TrLg.Text)
                    PosX.Text = P1X.Text + 10
                Else
                    If CDbl(PosX.Text) < CDbl(startX) Then
                        ' Check boundaries and reverse direction if necessary
                        If (direction = 1 AndAlso pointX >= startX) OrElse (direction = -1 AndAlso pointX <= endX) Then
                            direction *= -1
                        ElseIf (direction = -1 AndAlso pointX >= startX) OrElse (direction = 1 AndAlso pointX <= endX) Then
                            direction *= -1
                        End If

                        ' Draw to the bufferGraphics
                        Dim g As Graphics = bufferGraphics.Graphics

                        ' Clear the buffer
                        g.Clear(Color.Transparent)

                        ' Draw the background image
                        g.DrawImage(PictureBox1.Image, 0, 0, PictureBox1.Width, PictureBox1.Height)

                        ' Draw the point (circle with diameter 10 points)
                        Dim rect As New Rectangle(CInt(pointX - 5), CInt(pointY - 5), 10, 10)
                        PosX.Text = pointX
                        PosY.Text = pointY
                        RXm.Text = ((CDbl(PosX.Text)) * CDbl(AFScl.Text) / CDbl(ARScl.Text)) - CDbl(TextBox5.Text)
                        RYm.Text = (CDbl(PosY.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text))
                        R12Cur.Text = Math.Round(Math.Sqrt((CDbl(A1X.Text) - pointX) ^ 2 + (CDbl(A1Y.Text) - pointY) ^ 2), 4)
                        R22Cur.Text = Math.Round(Math.Sqrt((CDbl(A2X.Text) - pointX) ^ 2 + (CDbl(A2Y.Text) - pointY) ^ 2), 4)
                        g.FillEllipse(Brushes.Black, rect)
                        g.FillEllipse(Brushes.Black, rect)
                        Dim grayPen As New Pen(Color.Gray, 2)
                        grayPen.DashStyle = Drawing2D.DashStyle.Dash
                        g.DrawLine(grayPen, CSng(A1X.Text) + 10, CSng(A1Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        ' Render the bufferGraphics to PictureBox1
                        Dim LBPen As New Pen(Color.LightBlue, 2)
                        LBPen.DashStyle = Drawing2D.DashStyle.Dash
                        g.DrawLine(LBPen, CSng(A2X.Text) + 10, CSng(A2Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        ' Hitung posisi tengah garis
                        DrawLabelOnLine(g, "R13", CSng(A1X.Text), CSng(A1Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        DrawLabelOnLine2(g, "R23", CSng(A2X.Text), CSng(A2Y.Text) + 5, CSng(PosX.Text), CSng(PosY.Text))
                        bufferGraphics.Render()
                    Else
                        Timer7.Stop()
                        Timer7.Enabled = False
                        TotLap.Text = CDbl(TotLap.Text) + (1 / 2)

                        Timer3.Enabled = True
                        Timer3.Interval = 10
                        Timer3.Start()
                    End If
                End If


            Else
                ' Stop the timer if the input is invalid
                Timer7.Enabled = False
                MessageBox.Show("Please enter valid numeric values in P1X, P2X, and P1Y.", "Invalid Input", MessageBoxButtons.OK, MessageBoxIcon.Error)
            End If
        Else
            Timer7.Stop()
            Timer7.Enabled = False
            Timer3.Stop()
            Timer3.Enabled = False
            Timer5.Stop()
            Timer5.Enabled = False
            Timer6.Stop()
            Timer6.Enabled = False
            timeString = "00:00:00"
        End If
    End Sub
    Function ConvertTimeToMinutes(ByVal time As String) As Integer
        ' Memisahkan string waktu menjadi bagian-bagian jam, menit, dan detik
        Dim timeParts() As String = time.Split(":")

        ' Memastikan bahwa string waktu memiliki 3 bagian
        If timeParts.Length <> 3 Then
            Throw New ArgumentException("Format waktu tidak valid. Harus dalam format 'hh:mm:ss'.")
        End If

        ' Mengkonversi setiap bagian ke integer
        Dim hours As Integer = Integer.Parse(timeParts(0))
        Dim minutes As Integer = Integer.Parse(timeParts(1))
        Dim seconds As Integer = Integer.Parse(timeParts(2))

        ' Menghitung total menit
        Dim totalMinutes As Integer = (hours * 60) + minutes + (seconds \ 60)

        Return totalMinutes
    End Function

    Private Sub TabPage3_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TabPage3.Click

    End Sub





    Private Sub Button48_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button48.Click
        PictureBox1.Invalidate()
    End Sub

    Private Sub ImagePath_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ImagePath.TextChanged

    End Sub

    Private Sub Label76_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)

    End Sub


    Private Sub mFac_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles mRFac.TextChanged

    End Sub

    Private Sub A12C_CheckedChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles A12C.CheckedChanged
        Button48.PerformClick()
    End Sub

    Private Sub EvaluateData()
        If CmbChnl.Text = "Simulation" Then
            Dim rowCount As Integer = DataGridView1.Rows.Count

            ' Ambil nilai dari kolom kedua (index 1) dari semua baris
            Dim nilaiList As New List(Of Double)
            For Each row As DataGridViewRow In DataGridView1.Rows
                If Not row.IsNewRow Then
                    Dim value As Double
                    If Double.TryParse(row.Cells(1).Value.ToString(), value) Then
                        nilaiList.Add(value)
                        Dim rataRata As Double = (DataGridView1.Rows(DataGridView1.Rows.Count - 3).Cells(1).Value - DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(1).Value) / 2
                        Avg.Text = Math.Round(rataRata, 4)
                        ' Hitung standar deviasi
                        Dim stdDeviasi As Double = If(nilaiList.Count > 1, Math.Sqrt(nilaiList.Select(Function(x) Math.Pow(x - rataRata, 2)).Sum() / (nilaiList.Count - 1)), 0)
                        Stdev.Text = Math.Round(stdDeviasi, 4)

                        ' Hitung error standar
                        Dim stdError As Double = stdDeviasi / Math.Sqrt(rowCount)
                        ' TextBox48.Text = Math.Round(rataRata, 3)

                        ' Hitung koefisien korelasi
                        Dim correlation As Double = If(nilaiList.Count > 1, HitungKoefisienKorelasi(nilaiList), 0)
                        CVBox.Text = Math.Round(correlation, 4)

                        ' Hitung gradien pada titik akhir
                        Dim grad As Double
                        If rowCount > 1 Then
                            grad = DataGridView1.Rows(rowCount - 1).Cells(1).Value - DataGridView1.Rows(rowCount - 2).Cells(1).Value
                        Else
                            grad = 0
                        End If

                        ' Hitung koefisien variasi
                        Dim cv As Double = If(rataRata <> 0, (stdDeviasi / rataRata) * 100, 0)

                        ' Tampilkan hasil di DataGridView
                        DataGridView1.Rows(rowCount - 2).Cells(2).Value = Math.Round(rataRata, 3) ' Kolom 3 untuk rata-rata
                        DataGridView1.Rows(rowCount - 2).Cells(3).Value = Math.Round(stdDeviasi, 3) ' Kolom 4 untuk standar deviasi
                        DataGridView1.Rows(rowCount - 2).Cells(4).Value = Math.Round(stdError, 3) ' Kolom 5 untuk error standar
                        DataGridView1.Rows(rowCount - 2).Cells(5).Value = Math.Round(grad, 4) ' Kolom 6 untuk gradien pada titik akhir
                        DataGridView1.Rows(rowCount - 2).Cells(6).Value = Math.Round(cv, 4) ' Kolom 7 untuk koefisien variasi
                        DataGridView1.Rows(rowCount - 2).Cells(7).Value = Math.Round(correlation, 4) ' Kolom 8 untuk koefisien korelasi
                        ' Tambahkan titik ke Chart
                        Chart1.Series(0).Points.AddXY(rowCount - 1, Math.Round(stdDeviasi, 3))
                        ' Menghilangkan label "Series1" dari legenda pada Chart1
                        Chart1.Legends(0).Enabled = False

                        ' Set auto scroll ke baris terakhir
                        DataGridView1.FirstDisplayedScrollingRowIndex = DataGridView1.Rows.Count - 1
                    End If
                End If
            Next
        Else

            If CDbl(DataGridView1.Rows.Count - 1) < CDbl(minSamp.Text) And CalAnt1.BackColor = Color.LightGreen Then
                ' Konfigurasi SerialPort
                closing = False
                If Not SerialPort1.IsOpen Then
                    SerialPort1.PortName = ComboBoxComPorts.Text ' Ganti dengan port yang sesuai
                    SerialPort1.BaudRate = 9600
                    SerialPort1.Parity = Parity.None
                    SerialPort1.StopBits = StopBits.One
                    SerialPort1.DataBits = 8
                    SerialPort1.Handshake = Handshake.None
                    SerialPort1.Encoding = System.Text.Encoding.ASCII

                    System.Threading.Thread.Sleep(500)

                    ' Nonaktifkan DTR dan tutup serial port di thread lain
                    Dim OpenThread As New Thread(Sub()
                                                     Try
                                                         If Not SerialPort1.IsOpen Then
                                                             SerialPort1.DtrEnable = True
                                                             SerialPort1.Open()
                                                         End If
                                                         If Not SerialPort2.IsOpen Then
                                                             SerialPort2.DtrEnable = True
                                                             SerialPort2.Open()
                                                         End If
                                                     Catch ex As Exception
                                                         ' Tangani pengecualian, misalnya log kesalahan
                                                     End Try
                                                 End Sub)
                    OpenThread.Start()
                    '  AddHandler SerialPort1.DataReceived, AddressOf SerialPort1_DataReceived
                    ' Timer10.Enabled = True
                    ' Timer10.Interval = 100
                    'Timer10.Start()
                Else
                    SerialPort1.Close()
                    SerialPort1.PortName = ComboBoxComPorts.Text ' Ganti dengan port yang sesuai
                    SerialPort1.BaudRate = 9600
                    SerialPort1.Parity = Parity.None
                    SerialPort1.StopBits = StopBits.One
                    SerialPort1.DataBits = 8
                    SerialPort1.Handshake = Handshake.None
                    SerialPort1.Encoding = System.Text.Encoding.ASCII
                    System.Threading.Thread.Sleep(500)
                    SerialPort1.DtrEnable = True
                    ' SerialPort1.Open()
                    AddHandler SerialPort1.DataReceived, AddressOf SerialPort1_DataReceived
                    ' Nonaktifkan DTR dan tutup serial port di thread lain
                    Dim OpenThread As New Thread(Sub()
                                                     Try
                                                         If Not SerialPort1.IsOpen Then
                                                             SerialPort1.DtrEnable = True
                                                             SerialPort1.Open()
                                                         End If
                                                         If Not SerialPort2.IsOpen Then
                                                             SerialPort2.DtrEnable = True
                                                             SerialPort2.Open()
                                                         End If
                                                     Catch ex As Exception
                                                         ' Tangani pengecualian, misalnya log kesalahan
                                                     End Try
                                                 End Sub)
                    OpenThread.Start()
                    ' Timer10.Enabled = True
                    'Timer10.Interval = 100
                    'Timer10.Start()
                End If

            ElseIf CDbl(DataGridView1.Rows.Count - 1) < CDbl(minSamp.Text) And CalAnt2.BackColor = Color.LightGreen Then
                ' Konfigurasi SerialPort
                If Not SerialPort2.IsOpen Then
                    SerialPort2.PortName = ComboBoxComPorts2.Text
                    SerialPort2.BaudRate = 9600
                    SerialPort2.Parity = Parity.None
                    SerialPort2.StopBits = StopBits.One
                    SerialPort2.DataBits = 8
                    SerialPort2.Handshake = Handshake.None
                    SerialPort2.Encoding = System.Text.Encoding.ASCII
                    SerialPort2.Open()
                    'Timer11.Enabled = True
                    ' Timer11.Interval = 100
                    ' Timer11.Start()

                Else
                    SerialPort2.Close()
                    SerialPort2.PortName = ComboBoxComPorts2.Text
                    SerialPort2.BaudRate = 9600
                    SerialPort2.Parity = Parity.None
                    SerialPort2.StopBits = StopBits.One
                    SerialPort2.DataBits = 8
                    SerialPort2.Handshake = Handshake.None
                    SerialPort2.Encoding = System.Text.Encoding.ASCII
                    SerialPort2.Open()
                    'Timer11.Enabled = True
                    'Timer11.Interval = 100
                    'Timer11.Start()
                End If



            Else
                CalAnt1.BackColor = Color.Gainsboro
                CalAnt2.BackColor = Color.Gainsboro
                check_std()

            End If

        End If


        ' Hitung rata-rata




    End Sub



    ' Event handler untuk tombol Rejection
    Private Sub btnReject_Click(ByVal sender As Object, ByVal e As EventArgs) Handles btnReject.Click
        ' Lakukan proses rejection data pada DataGridView1
        If Label115.Text = "Ant1" Then
            CalAnt1.BackColor = Color.LightGreen
        ElseIf Label115.Text = "Ant1" Then
            CalAnt2.BackColor = Color.LightGreen
        End If

        If Not Stdev.Text = 0 Then
            Dim rowsToDelete As New List(Of DataGridViewRow)

            For Each row As DataGridViewRow In DataGridView1.Rows
                If Not row.IsNewRow Then
                    ' Ambil nilai dari kolom kedua (indeks 1) dari setiap baris
                    Dim value As Double
                    If Double.TryParse(row.Cells(1).Value.ToString(), value) Then
                        ' Ambil nilai rata-rata dan standard deviasi dari kolom ke-2
                        Dim avg As Double = CDbl(row.Cells(2).Value) ' Kolom ke-3
                        Dim stdev As Double = CDbl(row.Cells(3).Value) ' Kolom ke-4

                        ' Deteksi outlier menggunakan Z-score
                        Dim zScore As Double = (value - avg) / stdev

                        ' Uji normalitas menggunakan fungsi ShapiroWilkTest
                        Dim isNormal As Boolean = ShapiroWilkTest(value, avg, stdev)

                        ' Jika data tidak memenuhi kriteria, tandai untuk dihapus
                        If Math.Abs(zScore) > 3 Or Not isNormal Then
                            row.Cells(7).Value = "Rejected"
                            rowsToDelete.Add(row)
                            row.DefaultCellStyle.BackColor = Color.Red

                            'Chart1.Series(0).Points.Remove(row)
                        Else
                            row.Cells(7).Value = "Accepted"
                            row.DefaultCellStyle.BackColor = Color.LightGreen
                        End If
                    End If
                End If
            Next
            ' Warnai baris yang akan dihapus
            For Each rowToDelete As DataGridViewRow In rowsToDelete
                DataGridView1.Rows.Remove(rowToDelete)
            Next
            ' System.Threading.Thread.Sleep(500)
            '  For Each row As DataGridViewRow In DataGridView1.Rows
            'row.DefaultCellStyle.BackColor = Color.Yellow
            ' Next

            ' Refresh DataGridView untuk memastikan warna terlihat
            DataGridView1.Refresh()

            ' Tambahkan delay agar warna terlihat sebelum baris dihapus



            ' MessageBox.Show("Baris yang direject telah dihapus.", "Informasi", MessageBoxButtons.OK, MessageBoxIcon.Information)
            ' EvaluateData()
            ' Atur ulang nomor urutan pada kolom pertama
            ' ResetRowNumbers()

            ' Tampilkan dialog konfirmasi penghapusan
            '   Dim confirmation As DialogResult = MessageBox.Show("Apakah Anda yakin ingin menghapus baris yang direject?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question)

            ' Jika user menekan Yes, hapus baris yang ditandai sebagai "Rejected"
            ' If confirmation = DialogResult.Yes Then
            ' For Each rowToDelete As DataGridViewRow In rowsToDelete
            ' DataGridView1.Rows.Remove(rowToDelete)
            'If rowToDelete.Index < Chart1.Series(0).Points.Count Then

            'End If
            ' Next
            '  MessageBox.Show("Baris yang direject telah dihapus.", "Informasi", MessageBoxButtons.OK, MessageBoxIcon.Information)
            ' 
            ' Atur ulang nomor urutan pada kolom pertama
            ' ResetRowNumbers()
            ' End If
            ReevaluateData()
            'ResetRowNumbers()
            ' Button37.PerformClick()
            ' TabControl1.SelectedIndex = 1
            'MsgBox("Selesai")
        ElseIf Label115.Text = "Ant1" Then
            ' Timer10.Stop()
            SerialPort1.Close()
            CalAnt1.BackColor = Color.Gainsboro
            System.Threading.Thread.Sleep(1000)
            CalAnt2.PerformClick()
        ElseIf Label115.Text = "Ant2" Then
            ' Timer10.Stop()
            SerialPort2.Close()
            CalAnt2.BackColor = Color.Gainsboro

            ' CalAnt2.PerformClick()

        End If

    End Sub
    Private Sub delreject()
        For Each row As DataGridViewRow In DataGridView1.Rows
            If row.Cells(7).Value = "Rejected" Then
                DataGridView1.Rows.RemoveAt(DataGridView1.RowCount - 1)
            End If
        Next
    End Sub
    Private Sub ResetRowNumbers()
        ' CalAnt1.BackColor = Color.LightBlue

        Dim newRowCount As Integer = 1
        For Each row As DataGridViewRow In DataGridView1.Rows
            If Not row.IsNewRow Then
                row.Cells(0).Value = newRowCount
                newRowCount += 1
            End If
        Next
        If DataGridView1.RowCount - 1 < CInt(minSamp.Text) Then
            ' MsgBox("Data kurang")
            ' CalAnt1.BackColor = Color.Red
            Label122.Text = "Open"
        Else

            Label122.Text = "Close"
            If Label115.Text = "Ant1" Then
                CalAnt1.BackColor = Color.Gainsboro
            ElseIf Label115.Text = "Ant2" Then
                CalAnt2.BackColor = Color.Gainsboro
            End If


            '  MsgBox("Kalibrasi Selesai")
            If CDbl(MSTD.Text) < CDbl(CVBox.Text) Then

                If AutoSmooth.Text = "Yes" Then
                    If CDbl(SDConv.Text) > 1 And CDbl(PSD.Text) > 1 Then
                        minSamp.Text = CInt(minSamp.Text) + 100
                        ' CalAnt1.PerformClick()
                        ' RefreshChart()
                        If CInt(DataGridView1.RowCount) > 500 Then
                            DataGridView1.Hide()
                            'DataGridView1.Visible = False
                            Warning.Show()
                            'Warning.Visible = True
                            'Avg.Hide()
                            'AVGSD.Hide()
                            'SDConv.Hide()
                            ' PSD.Hide()
                            DataGridView2.Hide()
                            DataGridView3.Hide()
                            Chart1.Hide()
                            warnchart.Show()
                        End If
                    ElseIf CDbl(SDConv.Text) < 1 And CDbl(PSD.Text) < 1 Then
                        MsgBox("Although the standard deviation is greater then desired value of standard deviation, your data have convergenity of standard deviation below 1 and has passed below 1% of average standard deviation. We contune to next measurements")
                        Warning.Hide()
                        warnchart.Hide()
                        RefreshChart()
                        Chart1.Show()
                        DataGridView1.Show()
                        StopCal.PerformClick()
                        UseDataResult.PerformClick()
                        SignalCal2.Text = "ON"
                    Else

                        minSamp.Text = CInt(minSamp.Text) + 100
                        If CInt(DataGridView1.RowCount) > 500 Then
                            DataGridView1.Hide()
                            'DataGridView1.Visible = False
                            Warning.Show()
                            'Warning.Visible = True
                            '  Avg.Hide()
                            ' AVGSD.Hide()
                            'SDConv.Hide()
                            ' PSD.Hide()
                            DataGridView2.Hide()
                            DataGridView3.Hide()
                            Chart1.Hide()
                            warnchart.Show()
                        End If
                    End If
                Else
                    RefreshChart()
                    Form5.Show()
                    StopCal.PerformClick()
                End If

            End If
            ' Addrowdata()
        End If
        '  EvaluateData()
    End Sub

    Private Sub ReevaluateData()

        ' Lakukan proses rejection data pada DataGridView1
        Dim rowsToDelete As New List(Of DataGridViewRow)
        Dim values As New List(Of Double)

        ' Kumpulkan semua nilai dari kolom kedua (indeks 1) untuk menghitung kuartil
        For Each row As DataGridViewRow In DataGridView1.Rows
            If Not row.IsNewRow Then
                Dim value As Double
                If Double.TryParse(row.Cells(1).Value.ToString(), value) Then
                    values.Add(value)
                End If
            End If
        Next

        ' Hitung kuartil
        values.Sort()
        Dim q1 As Double = GetPercentile(values, 25)
        Dim q3 As Double = GetPercentile(values, 75)
        Dim iqr As Double = q3 - q1
        Dim lowerBound As Double = q1 - 1.5 * iqr
        Dim upperBound As Double = q3 + 1.5 * iqr

        ' Identifikasi dan tandai outlier berdasarkan IQR
        For Each row As DataGridViewRow In DataGridView1.Rows
            If Not row.IsNewRow Then
                Dim value As Double
                If Double.TryParse(row.Cells(1).Value.ToString(), value) Then
                    If value < lowerBound Or value > upperBound Then
                        row.Cells(8).Value = "Rejected"
                        rowsToDelete.Add(row)

                    Else
                        row.Cells(8).Value = "Accepted"
                    End If
                End If
            End If
        Next

        ' Tampilkan dialog konfirmasi penghapusan
        '  Dim confirmation As DialogResult = MessageBox.Show("Apakah Anda yakin ingin menghapus baris yang direject?", "Konfirmasi", MessageBoxButtons.YesNo, MessageBoxIcon.Question)

        ' Jika user menekan Yes, hapus baris yang ditandai sebagai "Rejected"
        '  If confirmation = DialogResult.Yes Then
        For Each rowToDelete As DataGridViewRow In rowsToDelete
            DataGridView1.Rows.Remove(rowToDelete)

        Next
        ' MessageBox.Show("Baris yang direject telah dihapus.", "Informasi", MessageBoxButtons.OK, MessageBoxIcon.Information)
        ' EvaluateData()
        ' Atur ulang nomor urutan pada kolom pertama

        ResetRowNumbers()
        ' End If
        ' Button37.PerformClick()

    End Sub
    Private Function GetPercentile(ByVal values As List(Of Double), ByVal percentile As Double) As Double
        If values Is Nothing OrElse values.Count = 0 Then
            ' Handle the empty list case as needed, e.g., return a default value or 0
            Return Double.NaN ' Or another appropriate value
        End If

        Dim n As Integer = values.Count
        Dim rank As Double = (percentile / 100) * (n - 1) + 1
        Dim rankInt As Integer = Math.Floor(rank)
        Dim rankFrac As Double = rank - rankInt

        If rankInt >= n Then
            Return values(n - 1)
        ElseIf rankInt = 0 Then
            Return values(0)
        Else
            Return values(rankInt - 1) + rankFrac * (values(rankInt) - values(rankInt - 1))
        End If
    End Function




    ' Implementasi uji Shapiro-Wilk untuk uji normalitas
    Private Function ShapiroWilkTest(ByVal value As Double, ByVal avg As Double, ByVal stdev As Double) As Boolean
        ' Uji normalitas berdasarkan kurtosis dan skewness
        ' Anda bisa menyesuaikan kriteria berdasarkan pengetahuan domain Anda

        ' Jika skewness dan kurtosis berada dalam rentang tertentu (misalnya -1 sampai 1), dianggap normal
        Dim skewness As Double = CalculateSkewness(value, avg, stdev)
        Dim kurtosis As Double = CalculateKurtosis(value, avg, stdev)

        If skewness >= -1 AndAlso skewness <= 1 AndAlso kurtosis >= -1 AndAlso kurtosis <= 1 Then
            Return True ' Normal
        Else
            Return False ' Tidak normal
        End If
    End Function

    ' Fungsi untuk menghitung skewness data
    Private Function CalculateSkewness(ByVal value As Double, ByVal avg As Double, ByVal stdev As Double) As Double
        Dim n As Integer = 1 ' Misalnya, untuk satu data (n=1)
        Dim skewness As Double = (value - avg) / stdev * (Sqrt(n * (n - 1)) / (n - 2))
        Return skewness
    End Function

    ' Fungsi untuk menghitung kurtosis data
    Private Function CalculateKurtosis(ByVal value As Double, ByVal avg As Double, ByVal stdev As Double) As Double
        Dim n As Integer = 1 ' Misalnya, untuk satu data (n=1)
        Dim kurtosis As Double = (value - avg) / stdev * (n - 1)
        Return kurtosis
    End Function




    Private Sub Timer8_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer8.Tick
        ' Dapatkan nomor baris baru
        ' Set auto scroll ke baris terakhir
        ' Try

        Dim inputData As String = SerialPort1.ReadLine()

        Dim data1 As String = FilterData1(inputData)

        If data1 IsNot Nothing AndAlso data1.Contains(".") Then
            Me.Invoke(New Action(Sub() ProcessData(data1)))
            ' Hitung jumlah digit sebelum dan sesudah titik
            Dim parts() As String = TextBox27.Text.Split(New Char() {"."}, StringSplitOptions.RemoveEmptyEntries)

            ' Gabungkan angka sebelum dan sesudah titik tanpa titik
            Dim combinedNumber As String = String.Concat(parts)
            TextBox46.Text = combinedNumber
            TextBox45.Text = Math.Pow(10, (Val(TextBox46.Text.Length) - 2))
            TextBox34.Text = Val(combinedNumber) / Val(TextBox45.Text)

        ElseIf data1 IsNot Nothing Then
            TextBox34.Text = data1
        Else
            TextBox34.Text = ""
        End If

        'Double.TryParse(TextBox27.Text, nilaiRandom) Or
        If IsNumeric(TextBox34.Text) AndAlso Not String.IsNullOrEmpty(data1) Then
            If TextBox34.Text.Length > 4 Then
                'MsgBox(TextBox34.Text.Length)
            End If
            R13.Text = Math.Round(CDbl(TextBox34.Text) / CDbl(AFScl.Text), 4)

        End If
        '  Else

        Dim inputData2 As String = SerialPort2.ReadLine()

        Dim data2 As String = FilterData2(inputData2)

        If data2 IsNot Nothing AndAlso data2.Contains(".") Then
            Me.Invoke(New Action(Sub() ProcessData2(data2)))
            ' Hitung jumlah digit sebelum dan sesudah titik
            Dim parts2() As String = TextBox48.Text.Split(New Char() {"."}, StringSplitOptions.RemoveEmptyEntries)

            ' Gabungkan angka sebelum dan sesudah titik tanpa titik
            Dim combinedNumber2 As String = String.Concat(parts2)
            TextBox2.Text = combinedNumber2
            TextBox43.Text = Math.Pow(10, (Val(TextBox2.Text.Length) - 2))
            TextBox47.Text = CDbl(combinedNumber2) / Val(TextBox43.Text)

        ElseIf data2 IsNot Nothing Then
            TextBox47.Text = data2
        Else
            TextBox47.Text = ""
        End If

        'Double.TryParse(TextBox27.Text, nilaiRandom) Or
        If IsNumeric(TextBox47.Text) AndAlso Not String.IsNullOrEmpty(data2) Then
            If R23.Text.Length > 4 Then
                'MsgBox(TextBox34.Text.Length)
            End If
            ' R23.Text = CDbl(R23.Text) / CDbl(AFScl.Text)
            ' Menghitung nilai sudut B dan P menggunakan hukum kosinus
            Dim cosB As Double = (CDbl(R13.Text) ^ 2 + CDbl(A12.Text) ^ 2 - ((CDbl(R23.Text)) * (CDbl(AntRat.Text))) ^ 2) / (2 * (CDbl(R13.Text)) * (CDbl(AntRat.Text)) * CDbl(A12.Text))
            Dim cosP As Double = Math.Cos(Math.PI * CDbl(PA.Text) / 180) '(CDbl(R11.Text) ^ 2 + (CDbl(A21.Text) * CDbl(AntRat.Text)) ^ 2 - (CDbl(R21.Text) * CDbl(AntRat.Text)) ^ 2) / (2 * CDbl(R11.Text) * CDbl(A21.Text) * CDbl(AntRat.Text))
            '  PA.Text = Math.Round(180 * Math.Acos(cosP) / Math.PI, 4)
            ' BA.Text = Math.Round(180 * Math.Acos(cosB) / Math.PI, 4)
            ' Menghitung sudut theta
            Dim psi As Double = 180 * (Math.Acos(cosB) + Math.Acos(cosP)) / Math.PI



            Dim F As Double = Math.Sqrt((CDbl(R13.Text) ^ 2) + (CDbl(R11.Text) ^ 2) - (2 * CDbl(R13.Text) * CDbl(R11.Text) * Math.Cos(psi * Math.PI / 180)))

            TextBox36.Text = CDbl(P1X.Text) - F
            TextBox39.Text = F * CDbl(AFScl.Text) / CDbl(ARScl.Text)
            HitungX2()
            TextBox35.Text = CDbl(A1Y.Text) - (CDbl(R13.Text) * Math.Sin(CDbl(XA2.Text) * Math.PI / 180))
            TextBox40.Text = CDbl(TextBox35.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)

        End If
        '  Else

        '
        'Catch ex As Exception

        ' End Try
    End Sub

    Private Sub DataGridView1_CellContentClick(ByVal sender As System.Object, ByVal e As System.Windows.Forms.DataGridViewCellEventArgs) Handles DataGridView1.CellContentClick

    End Sub

    Private Sub Button50_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button50.Click
        TableLayoutPanel24.Enabled = False
    End Sub

    Private Sub Button51_Click(ByVal sender As System.Object, ByVal e As System.EventArgs)
        TabControl1.SelectedIndex = 2
    End Sub

    Private Sub Button52_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button52.Click
        ' Bersihkan item-item di ComboBoxComPorts terlebih dahulu
        CmbPort.Items.Clear()

        ' Dapatkan daftar COM ports yang tersedia
        Dim comPorts As String() = IO.Ports.SerialPort.GetPortNames()


        ' Tambahkan setiap COM port ke ComboBoxComPorts
        For Each comPort As String In comPorts
            CmbPort.Items.Add(comPort)
        Next
        '  CmbPort.Items.Add("Simulation")
        ' Pilih item pertama secara default (opsional)
        If CmbPort.Items.Count > 0 Then
            CmbPort.SelectedIndex = 0
        End If
        CmbPort.DroppedDown = True
    End Sub

    Private Sub Button53_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button53.Click
        TableLayoutPanel24.Enabled = True
    End Sub



    Private Sub Button46_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button46.Click
        'SerialPort1.ReadExisting.Trim()
        Try
            CloseSerialPort()
            ' SerialPort1.DtrEnable = True
            'SerialPort2.DtrEnable = True
            DataGridView2.Rows.Clear()
            DataGridView3.Rows.Clear()
            SerialPort1.Dispose()
            SerialPort2.Dispose()
        Catch es As Exception
        End Try

    End Sub

    Private Sub Timer9_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer9.Tick

    End Sub

    Private Sub Button49_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button49.Click
        ' Bersihkan item-item di ComboBoxComPorts terlebih dahulu
        CmbPort2.Items.Clear()

        ' Dapatkan daftar COM ports yang tersedia
        Dim comPorts2 As String() = IO.Ports.SerialPort.GetPortNames()


        ' Tambahkan setiap COM port ke ComboBoxComPorts
        For Each comPort2 As String In comPorts2
            CmbPort2.Items.Add(comPort2)
        Next
        '  CmbPort.Items.Add("Simulation")
        ' Pilih item pertama secara default (opsional)
        If CmbPort2.Items.Count > 0 Then
            CmbPort2.SelectedIndex = 0
        End If
        CmbPort2.DroppedDown = True
    End Sub

    Private Sub Button30_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button30.Click
        DataGridView2.Hide()
        DataGridView3.Hide()
        If SerialPort1.IsOpen Or SerialPort2.IsOpen Then
            SerialPort1.Close()
            SerialPort2.Close()
            ' Konfigurasi SerialPort
            SerialPort1.PortName = ComboBoxComPorts.Text ' Ganti dengan port yang sesuai
            SerialPort1.BaudRate = 9600
            SerialPort1.Open()
            MsgBox(SerialPort1.ReadLine())
        Else


            SerialPort1.Close()
            SerialPort2.Close()

            ' Konfigurasi SerialPort
            SerialPort1.PortName = ComboBoxComPorts.Text ' Ganti dengan port yang sesuai
            SerialPort1.BaudRate = 9600
            SerialPort1.Open()
            MsgBox(SerialPort1.ReadLine())

        End If
    End Sub
    Private Sub ProcessData(ByVal data As String)
        ' Pisahkan angka dengan pemisah titik
        Dim numbers() As String = data.Split(New Char() {" "}, StringSplitOptions.RemoveEmptyEntries)
        Dim result As String = String.Join(".", numbers)

        ' Tampilkan hasil (misalnya di TextBox)
        TextBox27.Text = result
    End Sub
    Private Sub ProcessData2(ByVal data As String)
        ' Pisahkan angka dengan pemisah titik
        Dim numbers() As String = data.Split(New Char() {" "}, StringSplitOptions.RemoveEmptyEntries)
        Dim result2 As String = String.Join(".", numbers)

        ' Tampilkan hasil (misalnya di TextBox)
        TextBox48.Text = result2
    End Sub
    Private Sub Timer10_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer10.Tick
        ' Dapatkan nomor baris baru
        ' Set auto scroll ke baris terakhir
        Try
            DataGridView1.FirstDisplayedScrollingRowIndex = DataGridView1.Rows.Count - 1

            Dim rowNumber As Integer = DataGridView1.Rows.Count + 1
            ' Dim nilaiRandom As Double
            'If SerialPort1.IsOpen Then
            Dim inputData As String = SerialPort1.ReadLine()

            Dim data1 As String = FilterData1(inputData)
            ' Dim Rand As New Random
            ' Dapatkan nilai random antara 100 dan 103 (berkoma)
            ' Proses data di thread utama

            If data1 IsNot Nothing AndAlso data1.Contains(".") Then
                Me.Invoke(New Action(Sub() ProcessData(data1)))
                ' Hitung jumlah digit sebelum dan sesudah titik
                Dim parts() As String = TextBox27.Text.Split(New Char() {"."}, StringSplitOptions.RemoveEmptyEntries)

                ' Gabungkan angka sebelum dan sesudah titik tanpa titik
                Dim combinedNumber As String = String.Concat(parts)
                TextBox46.Text = combinedNumber
                TextBox45.Text = Math.Pow(10, (Val(TextBox46.Text.Length) - 2))
                TextBox34.Text = Val(combinedNumber) / Val(TextBox45.Text)

            ElseIf data1 IsNot Nothing Then
                TextBox34.Text = data1
            Else
                TextBox34.Text = ""
            End If

            'Double.TryParse(TextBox27.Text, nilaiRandom) Or
            If IsNumeric(TextBox34.Text) AndAlso Not String.IsNullOrEmpty(data1) Then
                If TextBox34.Text.Length > 4 Then
                    'MsgBox(TextBox34.Text.Length)
                End If


                If DataGridView1.Rows.Count <= CInt(minSamp.Text) Then
                    If DataGridView1.Rows.Count > 1 Then
                        Dim rataRata As Double = ((rowNumber - 2) * CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value) + CDbl(TextBox34.Text)) / (rowNumber - 1)
                        Avg.Text = CDbl(Math.Round(rataRata, 2))
                        Dim x_new As Double = Double.Parse(TextBox34.Text)

                        Dim n As Integer = rowNumber - 1 ' jumlah data lama ya!
                        Dim x_bar_new As Double
                        Dim s_new As Double
                        ' s_new = 0
                        '  Stdev.Text = 0
                        If n < 1 Then
                            ' Jika tidak ada data sebelumnya, standar deviasi adalah nol dan rata-rata adalah nilai x_new
                            x_bar_new = CDbl(TextBox34.Text)
                            x_new = CDbl(TextBox34.Text)
                            s_new = 0
                            Stdev.Text = 0
                        ElseIf n = 1 Then
                            x_bar_new = CDbl(TextBox34.Text)
                            x_new = CDbl(TextBox34.Text)
                            s_new = 0
                            Stdev.Text = 0
                            Avg.Text = CDbl(TextBox34.Text)
                        ElseIf n = 2 Then
                            ' Mengambil nilai rata-rata lama dari sel yang sesuai di DataGridView
                            x_new = CDbl(TextBox34.Text)
                            ' Dim x_bar = 

                            ' Hitung rata-rata baru
                            x_bar_new = CDbl(Avg.Text)

                            Dim s As Double = CDbl(Math.Sqrt((CDbl(DataGridView1.Rows(0).Cells(1).Value) - CDbl(x_bar_new)) ^ 2 + CDbl(CDbl(TextBox34.Text) - CDbl(x_bar_new)) ^ 2))
                            Stdev.Text = Math.Round(s, 4)
                        ElseIf n > 2 Then
                            ' Mengambil nilai rata-rata lama dari sel yang sesuai di DataGridView
                            Dim x_bar = CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value)

                            ' Hitung rata-rata baru
                            x_bar_new = CDbl(Avg.Text)

                            ' Hitung standar deviasi lama dari sel yang sesuai di DataGridView
                            Dim s As Double = CDbl(Stdev.Text)

                            ' Hitung varians baru
                            Dim s2_new As Double = CDbl((n - 2) * CDbl(s ^ 2) / (rowNumber - 2)) + ((CDbl(x_new) - CDbl(x_bar)) ^ 2 / (n))

                            ' Hitung standar deviasi baru
                            s_new = Math.Round(Math.Sqrt(s2_new), 4)
                            Stdev.Text = Math.Round(s_new, 4)

                        End If

                        ' Hitung standar deviasi
                        Dim stdError As Double = Stdev.Text / Math.Sqrt(rowNumber)

                        Dim delta As Double = CDbl(TextBox34.Text) - CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(1).Value)


                        ' Hitung koefisien variasi
                        Dim cv As Double = (CDbl(Stdev.Text) / CDbl(Avg.Text)) * 100
                        CVBox.Text = Math.Round(cv, 4)

                        DataGridView1.Rows.Add(DataGridView1.Rows.Count, CDbl(TextBox34.Text), CDbl(Avg.Text), CDbl(Stdev.Text), stdError, delta, cv, "No Filter", "No Filter") ' Kolom 3 untuk rata-rata
                        ' Tambahkan titik ke Chart
                        Chart1.Series(0).Points.AddXY(rowNumber - 1, Math.Round(CSng(Stdev.Text), 3))
                        ' Menghilangkan label "Series1" dari legenda pada Chart1
                        Chart1.Legends(0).Enabled = False
                    Else
                        Dim rataRata As Double = CDbl(TextBox34.Text)
                        Dim cv As Double = (CDbl(Stdev.Text) / CDbl(Avg.Text)) * 100
                        CVBox.Text = Math.Round(cv, 4)
                        Avg.Text = rataRata
                        DataGridView1.Rows.Add(DataGridView1.Rows.Count, CDbl(TextBox34.Text), CDbl(Avg.Text), CDbl(Stdev.Text), 0, 0, cv, "No Filter", "No Filter") ' Kolom 3 untuk rata-rata
                    End If

                Else

                    Try
                        RefreshChart()
                        Timer10.Stop()
                        Timer10.Enabled = False
                        CalAnt1.BackColor = Color.LightGreen
                        If SerialPort1.IsOpen Then
                            ' Tutup SerialPort sebelum membersihkan buffer
                            SerialPort1.Close()
                            SerialPort1.DiscardInBuffer()
                            ' Buang data dari buffer output
                            SerialPort1.DiscardOutBuffer()
                        End If

                        Dim val As Single
                        val = 100 * (CSng(Stdev.Text) / CSng(Avg.Text))

                        ' End If
                        ' If Math.Round(val, 5) > CSng(TextBox47.Text) Then
                        'Form5.Show()

                    Catch s As Exception
                        ' Tangani pengecualian
                    End Try
                End If
            End If
            '  Else
        Catch ex As Exception

        End Try
    End Sub


    Private Sub PortCom2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles PortCom2.Click
        ' Bersihkan item-item di ComboBoxComPorts terlebih dahulu
        ComboBoxComPorts2.Items.Clear()

        ' Dapatkan daftar COM ports yang tersedia
        Dim comPorts2 As String() = IO.Ports.SerialPort.GetPortNames()


        ' Tambahkan setiap COM port ke ComboBoxComPorts
        For Each comPort2 As String In comPorts2
            ComboBoxComPorts2.Items.Add(comPort2)
        Next
        ComboBoxComPorts2.Items.Add("Simulation")
        ' Pilih item pertama secara default (opsional)
        ' If ComboBoxComPorts2.Items.Count > 0 Then
        'ComboBoxComPorts2.SelectedIndex = 0
        ' End If
        ComboBoxComPorts2.DroppedDown = True
    End Sub

    Private Sub Timer11_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer11.Tick
        ' Dapatkan nomor baris baru
        ' Set auto scroll ke baris terakhir
        DataGridView1.FirstDisplayedScrollingRowIndex = DataGridView1.Rows.Count - 1

        Dim rowNumber2 As Integer = DataGridView1.Rows.Count + 1
        ' Dim nilaiRandom As Double
        'If SerialPort1.IsOpen Then
        Dim inputData2 As String = SerialPort2.ReadLine()

        Dim data2 As String = FilterData2(inputData2)
        ' Dim Rand As New Random
        ' Dapatkan nilai random antara 100 dan 103 (berkoma)
        ' Proses data di thread utama
        If data2 IsNot Nothing AndAlso data2.Contains(".") Then
            Me.Invoke(New Action(Sub() ProcessData(data2)))
            ' Hitung jumlah digit sebelum dan sesudah titik
            Dim parts2() As String = TextBox27.Text.Split(New Char() {"."}, StringSplitOptions.RemoveEmptyEntries)

            ' Gabungkan angka sebelum dan sesudah titik tanpa titik
            Dim combinedNumber2 As String = String.Concat(parts2)
            TextBox46.Text = combinedNumber2
            TextBox45.Text = Math.Pow(10, (Val(TextBox46.Text.Length) - 2))
            TextBox34.Text = Val(combinedNumber2) / Val(TextBox45.Text)
        ElseIf data2 IsNot Nothing Then
            TextBox34.Text = data2
        Else
            TextBox34.Text = ""
        End If

        'Double.TryParse(TextBox27.Text, nilaiRandom) Or
        If IsNumeric(TextBox34.Text) AndAlso Not String.IsNullOrEmpty(data2) Then
            If TextBox34.Text.Length > 4 Then
                'MsgBox(TextBox34.Text.Length)
            End If
            ' Tambahkan nilai random ke kolom pertama baris baru
            If DataGridView1.Rows.Count <= CInt(minSamp.Text) Then
                If DataGridView1.Rows.Count > 1 Then
                    Dim rataRata2 As Double = ((rowNumber2 - 2) * CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value) + CDbl(TextBox34.Text)) / (rowNumber2 - 1)
                    Avg.Text = CDbl(Math.Round(rataRata2, 2))
                    Dim x2_new As Double = Double.Parse(TextBox34.Text)

                    Dim n2 As Integer = rowNumber2 - 1 ' jumlah data lama ya!
                    Dim x_bar2_new As Double
                    Dim s2_new As Double
                    ' s_new = 0
                    '  Stdev.Text = 0
                    If n2 < 1 Then
                        ' Jika tidak ada data sebelumnya, standar deviasi adalah nol dan rata-rata adalah nilai x_new
                        x_bar2_new = CDbl(TextBox34.Text)
                        x2_new = CDbl(TextBox34.Text)
                        s2_new = 0
                        Stdev.Text = 0
                    ElseIf n2 = 1 Then
                        x_bar2_new = CDbl(TextBox34.Text)
                        x2_new = CDbl(TextBox34.Text)
                        s2_new = 0
                        Stdev.Text = 0
                        Avg.Text = CDbl(TextBox34.Text)
                    ElseIf n2 = 2 Then
                        ' Mengambil nilai rata-rata lama dari sel yang sesuai di DataGridView
                        x2_new = CDbl(TextBox34.Text)
                        ' Dim x_bar = 

                        ' Hitung rata-rata baru
                        x_bar2_new = CDbl(Avg.Text)

                        Dim s2 As Double = CDbl(Math.Sqrt((CDbl(DataGridView1.Rows(0).Cells(1).Value) - CDbl(x_bar2_new)) ^ 2 + CDbl(CDbl(TextBox34.Text) - CDbl(x_bar2_new)) ^ 2))
                        Stdev.Text = Math.Round(s2, 4)
                    ElseIf n2 > 2 Then
                        ' Mengambil nilai rata-rata lama dari sel yang sesuai di DataGridView
                        Dim x_bar2 = CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value)

                        ' Hitung rata-rata baru
                        x_bar2_new = CDbl(Avg.Text)

                        ' Hitung standar deviasi lama dari sel yang sesuai di DataGridView
                        Dim s2 As Double = CDbl(Stdev.Text)

                        ' Hitung varians baru
                        Dim s2_new2 As Double = CDbl((n2 - 2) * CDbl(s2 ^ 2) / (rowNumber2 - 2)) + ((CDbl(x2_new) - CDbl(x_bar2)) ^ 2 / (n2))

                        ' Hitung standar deviasi baru
                        s2_new = Math.Round(Math.Sqrt(s2_new2), 4)
                        Stdev.Text = Math.Round(s2_new, 4)

                    End If

                    ' Hitung standar deviasi
                    Dim stdError2 As Double = Stdev.Text / Math.Sqrt(rowNumber2)



                    ' Hitung koefisien variasi
                    Dim cv As Double = (CDbl(Stdev.Text) / CDbl(Avg.Text)) * 100
                    CVBox.Text = Math.Round(cv, 4)
                    Dim delta As Double = CDbl(TextBox34.Text) - CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(1).Value)
                    DataGridView1.Rows.Add(DataGridView1.Rows.Count, CDbl(TextBox34.Text), CDbl(Avg.Text), CDbl(Stdev.Text), stdError2, delta, cv, "No Filter", "No Filter") ' Kolom 3 untuk rata-rata
                    ' Tambahkan titik ke Chart
                    Chart1.Series(0).Points.AddXY(rowNumber2 - 1, Math.Round(CSng(Stdev.Text), 3))
                    ' Menghilangkan label "Series1" dari legenda pada Chart1
                    Chart1.Legends(0).Enabled = False
                Else
                    Dim rataRata2 As Double = CDbl(TextBox34.Text)
                    Avg.Text = rataRata2
                    ' Hitung koefisien variasi
                    Dim cv As Double = (CDbl(Stdev.Text) / CDbl(Avg.Text)) * 100
                    CVBox.Text = Math.Round(cv, 4)
                    DataGridView1.Rows.Add(DataGridView1.Rows.Count, CDbl(TextBox34.Text), CDbl(Avg.Text), CDbl(Stdev.Text), 0, 0, cv, "No Filter", "No Filter") ' Kolom 3 untuk rata-rata
                End If

            Else

                Try
                    RefreshChart()
                    Timer11.Stop()
                    Timer11.Enabled = False
                    CalAnt2.BackColor = Color.LightGreen
                    If SerialPort2.IsOpen Then
                        ' Tutup SerialPort sebelum membersihkan buffer
                        SerialPort2.Close()
                        SerialPort2.DiscardInBuffer()
                        ' Buang data dari buffer output
                        SerialPort2.DiscardOutBuffer()
                    End If

                    Dim val As Single
                    val = 100 * (CSng(Stdev.Text) / CSng(Avg.Text))

                    ' End If
                    ' If Math.Round(val, 5) > CSng(TextBox47.Text) Then
                    'Form5.Show()

                Catch s As Exception
                    ' Tangani pengecualian
                End Try
            End If
        End If
        '  Else

    End Sub


    Private Sub RefreshChart()
        ' Menghapus seluruh poin dari Chart1.Series(0)
        Chart1.Series(0).Points.Clear()

        ' Memplot grafik baru dari awal hingga akhir data di DataGridView1
        For Each row As DataGridViewRow In DataGridView1.Rows
            If Not row.IsNewRow Then
                Dim xValue As Double
                Dim yValue As Double

                ' Ambil nilai dari kolom 0 dan 1 DataGridView1
                If Double.TryParse(row.Cells(0).Value.ToString(), xValue) AndAlso Double.TryParse(row.Cells(3).Value.ToString(), yValue) Then
                    ' Tambahkan poin baru ke Chart1.Series(0)
                    Chart1.Series(0).Points.AddXY(xValue.ToString(), yValue)
                End If
            End If
        Next

        ' Sembunyikan legenda dari Chart1
        Chart1.Legends(0).Enabled = False

        ' Beri label sumbu x dan y
        Chart1.ChartAreas(0).AxisX.Title = "Data ke-"
        Chart1.ChartAreas(0).AxisY.Title = "Std. Deviasi"
    End Sub

    Private Sub check_std()
        If CDbl(CVBox.Text) > CDbl(MSTD.Text) Then
            If AutoSmooth.Text = "Yes" Then
                If CDbl(SDConv.Text) > 1 And CDbl(PSD.Text) > 1 Then
                    minSamp.Text = CInt(minSamp.Text) + 100
                    If CInt(DataGridView1.RowCount) > 500 Then
                        DataGridView1.Hide()
                        'DataGridView1.Visible = False
                        Warning.Show()
                        'Warning.Visible = True
                        ' Avg.Hide()
                        ' AVGSD.Hide()
                        ' SDConv.Hide()
                        ' PSD.Hide()
                        DataGridView2.Hide()
                        DataGridView3.Hide()
                        Chart1.Hide()
                        warnchart.Show()
                    End If
                ElseIf CDbl(SDConv.Text) < 1 And CDbl(PSD.Text) < 1 Then
                    MsgBox("Although the standard deviation is greater then desired value of standard deviation, your data have convergenity of standard deviation below 1 and has passed below 1% of average standard deviation. We contune to next measurements")
                    Warning.Hide()
                    warnchart.Hide()
                    RefreshChart()
                    Chart1.Show()
                    DataGridView1.Show()
                    StopCal.PerformClick()
                    UseDataResult.PerformClick()
                    SignalCal2.Text = "ON"
                    ' Button1.BackColor = Color.Gainsboro
                Else

                    minSamp.Text = CInt(minSamp.Text) + 100
                    If CInt(DataGridView1.RowCount) > 500 Then
                        DataGridView1.Hide()
                        'DataGridView1.Visible = False
                        Warning.Show()
                        'Warning.Visible = True
                        '  Avg.Hide()
                        ' AVGSD.Hide()
                        'SDConv.Hide()
                        ' PSD.Hide()
                        DataGridView2.Hide()
                        DataGridView3.Hide()
                        Chart1.Hide()
                        warnchart.Show()
                    End If
                End If
            Else
                RefreshChart()
                Form5.Show()
            End If


        Else
            UseDataResult.PerformClick()
            TabControl1.SelectedIndex = 1
            If Label117.Text = "Start Point" Then
                System.Threading.Thread.Sleep(1000)
                CalAnt2.PerformClick()
                Label117.Text = "Stby"
            End If

        End If
    End Sub

    Private Sub check_std2()
        If CDbl(CVBox.Text) > CDbl(MSTD.Text) Then

            If AutoSmooth.Text = "Yes" Then
                If CDbl(SDConv.Text) > 1 And CDbl(PSD.Text) > 1 Then
                    minSamp.Text = CInt(minSamp.Text) + 100
                    If CInt(DataGridView1.RowCount) > 500 Then
                        DataGridView1.Hide()
                        ''DataGridView1.Visible = False
                        Warning.Show()
                        ' 'Warning.Visible = True
                        ' Avg.Hide()
                        'AVGSD.Hide()
                        ' SDConv.Hide()
                        'PSD.Hide()
                        DataGridView2.Hide()
                        DataGridView3.Hide()
                        Chart1.Hide()
                        warnchart.Show()

                    End If
                ElseIf CDbl(SDConv.Text) < 1 And CDbl(PSD.Text) < 1 Then
                    MsgBox("Although the standard deviation is greater then desired value of standard deviation, your data have convergenity of standard deviation below 1 and has passed below 1% of average standard deviation. We contune to next measurements")
                    Warning.Hide()
                    warnchart.Hide()
                    RefreshChart()
                    Chart1.Show()
                    DataGridView1.Show()
                    StopCal.PerformClick()
                    UseDataResult.PerformClick()
                    ' SignalCal2.Text = "ON"
                    ' Button1.BackColor = Color.Gainsboro
                Else
                    minSamp.Text = CInt(minSamp.Text) + 100
                    If CInt(DataGridView1.RowCount) > 500 Then
                        DataGridView1.Hide()
                        'DataGridView1.Visible = False
                        Warning.Show()
                        'Warning.Visible = True
                        '  Avg.Hide()
                        ' AVGSD.Hide()
                        'SDConv.Hide()
                        ' PSD.Hide()
                        DataGridView2.Hide()
                        DataGridView3.Hide()
                        Chart1.Hide()
                        warnchart.Show()
                    End If
                End If
            Else
                RefreshChart()
                Form5.Show()
            End If
        Else

            UseDataResult.PerformClick()
            TabControl1.SelectedIndex = 1
            CalAnt2.BackColor = Color.Gainsboro
        End If
    End Sub

    Private Sub CalAnt2_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles CalAnt2.Click
        Try
            DataGridView2.Hide()
            DataGridView3.Hide()
            If Label115.Text = "Ant1" Then

              btnRes.PerformClick()

            End If

            CalAnt2.BackColor = Color.Yellow
            Label115.Text = "Ant2"
            If DataGridView1.Rows.Count < 2 Then

                DataGridView1.Rows.Clear()
                Stdev.Text = 0
                Avg.Text = 0
                CVBox.Text = 0
                SDConv.Text = 0
                AVGSD.Text = 0
                PSD.Text = 0
                DataGridView1.RowHeadersVisible = False
                Chart1.Series(0).Points.Clear()
            End If


            If CmbChnl2.Text = "Simulation" Or ComboBoxComPorts2.Text = "" Then
                Timer1.Enabled = True
                Timer1.Interval = 1
                Timer1.Start()

            ElseIf CalAnt2.BackColor = Color.Yellow Then

                ' Konfigurasi SerialPort
                If Not Me.SerialPort2.IsOpen Then
                    SerialPort2.PortName = ComboBoxComPorts2.Text ' Ganti dengan port yang sesuai
                    SerialPort2.BaudRate = 9600
                    SerialPort2.Parity = Parity.None
                    SerialPort2.StopBits = StopBits.One
                    SerialPort2.DataBits = 8
                    SerialPort2.Handshake = Handshake.None
                    SerialPort2.Encoding = System.Text.Encoding.ASCII
                    SerialPort2.Open()
                End If



                'fungsi untuk membaca serial
                ' Tambahkan event handler DataReceived kembali
                AddHandler SerialPort2.DataReceived, AddressOf SerialPort2_DataReceived


                ' DataGridView3.Hide()

                closing = False

            End If
        Catch ex As Exception
            CalAnt2.PerformClick()
            '
        End Try
    End Sub

    Private Sub minSamp_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles minSamp.TextChanged

    End Sub

    Private Sub btnRes_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles btnRes.Click
        DataGridView1.Rows.Clear()
        Stdev.Text = 0
        Avg.Text = 0
        CVBox.Text = 0
        Chart1.Series(0).Points.Clear()
        Timer1.Stop()
        Timer10.Stop()
        Timer11.Stop()
        CalAnt1.BackColor = Color.Gainsboro
        CalAnt2.BackColor = Color.Gainsboro
        ' minSamp.Text = 100 'DataGridView1.Rows.Count
        SerialPort1.Close()
        SerialPort2.Close()
        HitungJumlahSampelMinimum()
    End Sub



    Private Sub Avg_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Avg.TextChanged

    End Sub




    Private Sub Button1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button1.Click
        CmbChnl.Text = "R-11"
        CmbChnl2.Text = "R-21"
        CalAnt1.PerformClick()
        Label117.Text = "Start Point"
        ' Button1.BackColor = Color.Yellow
        DataGridView2.Hide()
        DataGridView3.Hide()
        SignalCal2.Text = "OFF"
        ' If AutoSmooth.Text = "Yes" Then
        'tton1.BackColor = Color.Aqua
        Timer13.Interval = 1000
        Timer13.Enabled = True
        Timer13.Start()
        'End If
    End Sub


    Private Sub Button24_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button24.Click
        CmbChnl.Text = "R-12"
        CmbChnl2.Text = "R-22"
        CalAnt1.PerformClick()
        Label117.Text = "Start Point"
        DataGridView2.Hide()
        DataGridView3.Hide()
        SignalCal2.Text = "OFF"
        Timer13.Interval = 1000
        Timer13.Enabled = True
        Timer13.Start()
    End Sub

    Private Sub Button59_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button59.Click
        Timer3.Start()
        Timer7.Start()
        Timer5.Start()
        Timer6.Start()
    End Sub

    Private Sub ConfigureSerialPorts()
        ' Konfigurasi SerialPort1
        SerialPort1.PortName = CmbPort.Text ' Sesuaikan dengan nama port yang sesuai dari ComboBox
        SerialPort1.BaudRate = 9600
        SerialPort1.Parity = Parity.None
        SerialPort1.DataBits = 8
        SerialPort1.StopBits = StopBits.One
        SerialPort1.Handshake = Handshake.None

        ' Konfigurasi SerialPort2
        SerialPort2.PortName = CmbPort2.Text ' Sesuaikan dengan nama port yang sesuai dari ComboBox
        SerialPort2.BaudRate = 9600
        SerialPort2.Parity = Parity.None
        SerialPort2.DataBits = 8
        SerialPort2.StopBits = StopBits.One
        SerialPort2.Handshake = Handshake.None
    End Sub

    Private Sub Button56_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button56.Click
        ' Konfigurasi SerialPort

        DataGridView2.Hide()
        DataGridView3.Hide()
        Button62.PerformClick()
        TextBox34.Hide()
        TextBox47.Hide()
        DataGridView1.Rows.Clear()
        ConfigureSerialPorts()
        Label115.Text = "RUN"
        Label122.Text = "NaN"
        ' Tambahkan event handler DataReceived kembali
        AddHandler SerialPort1.DataReceived, AddressOf SerialPort1_DataReceived
        AddHandler SerialPort2.DataReceived, AddressOf SerialPort2_DataReceived

        ' Buka SerialPort
        Try
            Timer2.Stop()
            Timer12.Interval = 1000

            AddHandler Timer12.Tick, AddressOf Timer12_Tick
            Timer12.Start()
            SerialPort1.Open()
            SerialPort2.Open()
            ' DataGridView2.Hide()
            ' DataGridView3.Hide()
            closing = False
            'CalPoint()

        Catch ex As Exception
            MessageBox.Show("Gagal membuka port: " & ex.Message)
        End Try
    End Sub
    ' Delegate untuk memperbarui DataGridView2
    Private Sub R23_TextChanged(ByVal sender As Object, ByVal e As EventArgs) Handles R23.TextChanged
        ' Panggil metode untuk menangani perubahan teks
        '  If Not TextBox47.Text = 0 Then
        'CalPoint()
        ' End If

    End Sub
    Private Sub CalPoint()
        '   Label118.Text = CDbl(Label118.Text) + 1
        If IsNumeric(R23.Text) AndAlso Not String.IsNullOrEmpty(R23.Text) Then
            If R23.Text.Length > 4 Then
                'MsgBox(TextBox34.Text.Length)
            End If
            R23.Text = Math.Round(CDbl(R23.Text) / CDbl(AFScl.Text), 4)
            ' Menghitung nilai sudut B dan P menggunakan hukum kosinus
            Dim cosB As Double = (CDbl(R13.Text) ^ 2 + CDbl(A12.Text) ^ 2 - ((CDbl(R23.Text)) * (CDbl(AntRat.Text))) ^ 2) / (2 * (CDbl(R13.Text)) * (CDbl(AntRat.Text)) * CDbl(A12.Text))
            Dim cosP As Double = Math.Cos(Math.PI * CDbl(PA.Text) / 180) '(CDbl(R11.Text) ^ 2 + (CDbl(A21.Text) * CDbl(AntRat.Text)) ^ 2 - (CDbl(R21.Text) * CDbl(AntRat.Text)) ^ 2) / (2 * CDbl(R11.Text) * CDbl(A21.Text) * CDbl(AntRat.Text))
            '  PA.Text = Math.Round(180 * Math.Acos(cosP) / Math.PI, 4)
            ' BA.Text = Math.Round(180 * Math.Acos(cosB) / Math.PI, 4)
            ' Menghitung sudut theta
            Dim psi As Double = 180 * (Math.Acos(cosB) + Math.Acos(cosP)) / Math.PI



            Dim F As Double = Math.Sqrt((CDbl(R13.Text) ^ 2) + (CDbl(R11.Text) ^ 2) - (2 * CDbl(R13.Text) * CDbl(R11.Text) * Math.Cos(psi * Math.PI / 180)))

            TextBox36.Text = CDbl(P1X.Text) - F
            TextBox39.Text = F * CDbl(AFScl.Text) / CDbl(ARScl.Text)
            HitungX2()
            TextBox35.Text = CDbl(A1Y.Text) - (CDbl(R13.Text) * Math.Sin(CDbl(XA2.Text) * Math.PI / 180))
            TextBox40.Text = CDbl(TextBox35.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)

        End If
        '  Else

        '
        'Catch ex As Exception

        ' End Try
    End Sub

    Private Sub UpdateDataGridView2(ByVal serialData As String)
        ' Pisahkan data berdasarkan delimiter yang sesuai (misalnya, newline)
        Dim dataArray As String() = serialData.Split(New String() {Environment.NewLine}, StringSplitOptions.None)
        ' Pastikan DataGridView2 memiliki kolom yang sesuai
        If DataGridView2.Columns.Count = 0 Then
            DataGridView2.Columns.Add("No", "No")
            DataGridView2.Columns.Add("Data", "Data")
            DataGridView2.Columns.Add("Flt-Data", "Flt-Data")
            ' Atur lebar kolom
            '   DataGridView2.Columns("No").Width = 60
            '  DataGridView2.Columns("Data").Width = 70
            '  DataGridView2.Columns("Flt-Data").Width = 70
        End If
        ' Hitung jumlah baris yang sudah ada di DataGridView2
        Dim rowCount As Integer = DataGridView2.Rows.Count
        Dim totalFilter As Double = 0
        Dim countFilter As Integer = 0
        For Each dataItem As String In dataArray
            If Not String.IsNullOrWhiteSpace(dataItem) Then
                ' Tambahkan nomor urut dan data ke DataGridView2
                Dim fil As Double = FilterData1(dataItem)




                If Not fil = 0 Then
                    If fil.ToString IsNot Nothing AndAlso fil.ToString.Contains(".") Then
                        Me.Invoke(New Action(Sub() ProcessData(fil.ToString)))
                        ' Hitung jumlah digit sebelum dan sesudah titik
                        Dim parts() As String = fil.ToString.Split(New Char() {"."}, StringSplitOptions.RemoveEmptyEntries)

                        ' Gabungkan angka sebelum dan sesudah titik tanpa titik
                        Dim combinedNumber As String = String.Concat(parts)
                        TextBox46.Text = combinedNumber
                        TextBox45.Text = Math.Pow(10, (Val(TextBox46.Text.Length) - 2))
                        TextBox34.Text = CDbl(combinedNumber) / CDbl(TextBox45.Text)

                    ElseIf fil.ToString IsNot Nothing Then
                        TextBox34.Text = fil
                        DataGridView2.Rows.Add(rowCount, dataItem, fil)
                        ' Dim addedRowIndex As Integer = DataGridView2.Rows.Count - 1
                        ' Commit the new row so it can be deleted if needed

                        ' DataGridView2.CancelEdit()

                        rowCount += 1
                        totalFilter += fil
                        countFilter += 1
                    Else
                        TextBox34.Text = ""
                    End If

                End If


            End If

        Next

        If Label115.Text = "Ant1" Then
            CalStdev()
            DataGridView1.FirstDisplayedScrollingRowIndex = DataGridView1.Rows.Count - 1
        Else
            Dim averageFilter As Double
            If countFilter > 0 Then
                averageFilter = totalFilter / countFilter
            End If
            ' Scroll ke baris terakhir
            If DataGridView2.Rows.Count > 0 Then
                DataGridView2.FirstDisplayedScrollingRowIndex = DataGridView2.Rows.Count - 1
            End If

            R13.Text = Math.Round(CDbl(averageFilter), 4)
        End If

        '  DataGridView2.Rows.Clear()


        ' Label118.Text = CInt(Label118.Text) + 1
        totalFilter = 0
        countFilter = 0
        rowCount = 0
        'CalStdev()
    End Sub

    Private Sub UpdateDataGridView3(ByVal serialData2 As String)
        ' Pisahkan data berdasarkan delimiter yang sesuai (misalnya, newline)
        Dim dataArray2 As String() = serialData2.Split(New String() {Environment.NewLine}, StringSplitOptions.None)
        ' Pastikan DataGridView3 memiliki kolom yang sesuai
        If DataGridView3.Columns.Count = 0 Then
            DataGridView3.Columns.Add("No", "No")
            DataGridView3.Columns.Add("Data", "Data")
            DataGridView3.Columns.Add("Flt-Data", "Flt-Data")
            ' Atur lebar kolom
            '   DataGridView3.Columns("No").Width = 60
            '  DataGridView3.Columns("Data").Width = 70
            '  DataGridView3.Columns("Flt-Data").Width = 70
        End If
        ' Hitung jumlah baris yang sudah ada di DataGridView3
        Dim rowCount2 As Integer = DataGridView3.Rows.Count
        Dim totalFilter2 As Double = 0
        Dim countFilter2 As Integer = 0
        For Each dataItem2 As String In dataArray2
            If Not String.IsNullOrWhiteSpace(dataItem2) Then
                ' Tambahkan nomor urut dan data ke DataGridView3
                Dim fil2 As Double = FilterData2(dataItem2)




                If Not fil2 = 0 Then
                    If fil2.ToString IsNot Nothing AndAlso fil2.ToString.Contains(".") Then
                        Me.Invoke(New Action(Sub() ProcessData(fil2.ToString)))
                        ' Hitung jumlah digit sebelum dan sesudah titik
                        Dim parts2() As String = fil2.ToString.Split(New Char() {"."}, StringSplitOptions.RemoveEmptyEntries)

                        ' Gabungkan angka sebelum dan sesudah titik tanpa titik
                        Dim combinedNumber As String = String.Concat(parts2)
                        TextBox2.Text = combinedNumber
                        TextBox43.Text = Math.Pow(10, (Val(TextBox2.Text.Length) - 2))
                        TextBox47.Text = CDbl(combinedNumber) / CDbl(TextBox43.Text)

                    ElseIf fil2.ToString IsNot Nothing Then
                        TextBox47.Text = fil2
                        DataGridView3.Rows.Add(rowCount2, dataItem2, fil2)
                        ' Dim addedRowIndex As Integer = DataGridView3.Rows.Count - 1
                        ' Commit the new row so it can be deleted if needed

                        ' DataGridView3.CancelEdit()

                        rowCount2 += 1
                        totalFilter2 += fil2
                        countFilter2 += 1
                    Else
                        TextBox47.Text = ""
                    End If

                End If


            End If

        Next

        If Label115.Text = "Ant2" Then
            If Not Label115.Text = "RUN" Then
                CalStdev2()

            End If

            DataGridView1.FirstDisplayedScrollingRowIndex = DataGridView1.Rows.Count - 1
        Else
            Dim averageFilter2 As Double
            If countFilter2 > 0 Then
                averageFilter2 = totalFilter2 / countFilter2
            End If
            ' Scroll ke baris terakhir
            If DataGridView3.Rows.Count > 0 Then
                DataGridView3.FirstDisplayedScrollingRowIndex = DataGridView3.Rows.Count - 1
            End If

            R23.Text = Math.Round(CDbl(averageFilter2), 4)
        End If

        '  DataGridView3.Rows.Clear()


        ' Label118.Text = CInt(Label118.Text) + 1
        totalFilter2 = 0
        countFilter2 = 0
        rowCount2 = 0
        'CalStdev()
    End Sub
    Private Sub SerialPort1_DataReceived(ByVal sender As Object, ByVal e As System.IO.Ports.SerialDataReceivedEventArgs)
        ' Baca data dari SerialPort1
        ' Try
        Dim serialData As String = SerialPort1.ReadExisting()
        ' Gunakan Invoke untuk memperbarui DataGridView2 dari thread UI
        Me.Invoke(New UpdateDataGridView2Delegate(AddressOf UpdateDataGridView2), serialData)
        '  Catch ex As Exception
        ' End Try

    End Sub

    Private Sub SerialPort2_DataReceived(ByVal sender As Object, ByVal e As System.IO.Ports.SerialDataReceivedEventArgs)
        ' Baca data dari SerialPort2
        'Try
        Dim serialData2 As String = SerialPort2.ReadExisting()
        ' Gunakan Invoke untuk memperbarui DataGridView2 dari thread UI
        Me.Invoke(New UpdateDataGridView2Delegate(AddressOf UpdateDataGridView3), serialData2)
        ' Catch ex As Exception
        ' End Try

    End Sub


    Private Function FilterData1(ByVal data1 As String) As String
        ' Regular expression to match pattern S<number>P
        Dim regex1 As New Regex("S(\d+(\.\d+)?)P")
        Dim match1 As Match = regex1.Match(data1)
        ' Check if the match is successful
        If match1.Success Then
            ' Update nilai terakhir yang ditemukan
            lastFilteredValue = CDbl(match1.Groups(1).Value)
            ' Return the captured number
            Return lastFilteredValue
        Else
            ' Jika tidak ada kecocokan, kembalikan nilai terakhir yang ditemukan
            Return 0
            'DataGridView2.Rows.RemoveAt(DataGridView2.RowCount - 1)
        End If
    End Function
    Private Function FilterData2(ByVal data2 As String) As String
        ' Regular expression to match pattern S<number>P
        Dim regex2 As New Regex("S(\d+(\.\d+)?)P")
        Dim match2 As Match = regex2.Match(data2)

        ' ' Check if the match is successful
        If match2.Success Then
            ' Update nilai terakhir yang ditemukan
            lastFilteredValue2 = CDbl(match2.Groups(1).Value)
            ' Return the captured number
            Return lastFilteredValue2
        Else
            ' Jika tidak ada kecocokan, kembalikan nilai terakhir yang ditemukan
            Return 0
            ' DataGridView3.Rows.RemoveAt(DataGridView3.RowCount)
        End If
    End Function
    ' Event handler untuk FormClosing untuk menutup SerialPort
    Private Sub Form1_FormClosing(ByVal sender As Object, ByVal e As FormClosingEventArgs) Handles Me.FormClosing
        If SerialPort1 IsNot Nothing AndAlso SerialPort1.IsOpen Then
            SerialPort1.Close()
            SerialPort2.Close()
        End If
    End Sub
    ' Metode untuk menutup SerialPort dengan aman
    Private Sub CloseSerialPort()
        closing = True

        ' Nonaktifkan event handler DataReceived untuk SerialPort1
        RemoveHandler SerialPort1.DataReceived, AddressOf SerialPort1_DataReceived

        ' Nonaktifkan event handler DataReceived untuk SerialPort2
        RemoveHandler SerialPort2.DataReceived, AddressOf SerialPort2_DataReceived

        ' Nonaktifkan DTR dan tutup serial port di thread lain
        Dim closeThread As New Thread(Sub()
                                          Try
                                              If SerialPort1.IsOpen Then
                                                  SerialPort1.DtrEnable = False
                                                  SerialPort1.Close()
                                              End If
                                              If SerialPort2.IsOpen Then
                                                  SerialPort2.DtrEnable = False
                                                  SerialPort2.Close()
                                              End If
                                          Catch ex As Exception
                                              ' Tangani pengecualian, misalnya log kesalahan
                                          End Try
                                      End Sub)
        closeThread.Start()
        ' R13.Text = 0
        ' R23.Text = 0
        '  closeThread.Join() ' Menunggu sampai thread selesai sebelum melanjutkan
    End Sub


    Private Sub Button62_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button62.Click
        ' DataGridView2.Rows.Clear()
        R13.Text = 0
        R23.Text = 0
        closing = False
        DataGridView2.Rows.Clear()
        DataGridView3.Rows.Clear()
    End Sub

    Private Sub Button51_Click_1(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button51.Click

    End Sub

    Private Sub Button54_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Button54.Click

    End Sub

    Private Sub R13__TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles R13.TextChanged
        Try
            'Double.TryParse(TextBox27.Text, nilaiRandom) Or
            If IsNumeric(TextBox47.Text) AndAlso Not String.IsNullOrEmpty(TextBox47.Text) Then
                If TextBox47.Text.Length > 4 Then
                    'MsgBox(TextBox34.Text.Length)
                End If
                R23.Text = Math.Round(CDbl(TextBox47.Text) / CDbl(AFScl.Text), 4)
                ' Menghitung nilai sudut B dan P menggunakan hukum kosinus
                Dim cosB As Double = (CDbl(R13.Text) ^ 2 + CDbl(A12.Text) ^ 2 - ((CDbl(R23.Text)) * (CDbl(AntRat.Text))) ^ 2) / (2 * (CDbl(R13.Text)) * (CDbl(AntRat.Text)) * CDbl(A12.Text))
                Dim cosP As Double = Math.Cos(Math.PI * CDbl(PA.Text) / 180) '(CDbl(R11.Text) ^ 2 + (CDbl(A21.Text) * CDbl(AntRat.Text)) ^ 2 - (CDbl(R21.Text) * CDbl(AntRat.Text)) ^ 2) / (2 * CDbl(R11.Text) * CDbl(A21.Text) * CDbl(AntRat.Text))
                '  PA.Text = Math.Round(180 * Math.Acos(cosP) / Math.PI, 4)
                ' BA.Text = Math.Round(180 * Math.Acos(cosB) / Math.PI, 4)
                ' Menghitung sudut theta
                Dim psi As Double = 180 * (Math.Acos(cosB) + Math.Acos(cosP)) / Math.PI



                Dim F As Double = Math.Sqrt((CDbl(R13.Text) ^ 2) + (CDbl(R11.Text) ^ 2) - (2 * CDbl(R13.Text) * CDbl(R11.Text) * Math.Cos(psi * Math.PI / 180)))

                TextBox36.Text = CDbl(P1X.Text) - F
                TextBox39.Text = F * CDbl(AFScl.Text) / CDbl(ARScl.Text)
                HitungX2()
                TextBox35.Text = CDbl(A1Y.Text) - (CDbl(R13.Text) * Math.Sin(CDbl(XA2.Text) * Math.PI / 180))
                TextBox40.Text = CDbl(TextBox35.Text) * CDbl(AFScl.Text) / CDbl(ARScl.Text)

            End If
            '  Else

            '
        Catch ex As Exception

        End Try
    End Sub


    Private Sub TabPage4_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TabPage4.Click

    End Sub

    Private Sub TextBox34_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox34.TextChanged
       
    End Sub
    Private Sub CalStdev2()
        
        Dim rowNumber As Integer = DataGridView1.Rows.Count + 1
        '   Try
        'Double.TryParse(TextBox27.Text, nilaiRandom) Or
        If IsNumeric(TextBox47.Text) AndAlso Not String.IsNullOrEmpty(TextBox47.Text) Then
            If TextBox47.Text.Length > 4 Then
                'MsgBox(TextBox34.Text.Length)
            End If


            If DataGridView1.Rows.Count <= CInt(minSamp.Text) Then
                If DataGridView1.Rows.Count > 1 Then
                    Dim rataRata As Double = ((rowNumber - 2) * CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value) + CDbl(TextBox47.Text)) / (rowNumber - 1)
                    Avg.Text = CDbl(Math.Round(rataRata, 2))
                    Dim x_new As Double = Double.Parse(TextBox47.Text)

                    Dim n As Integer = rowNumber - 1 ' jumlah data lama ya!
                    Dim x_bar_new As Double
                    Dim s_new As Double
                    ' s_new = 0
                    '  Stdev.Text = 0
                    If n < 1 Then
                        ' Jika tidak ada data sebelumnya, standar deviasi adalah nol dan rata-rata adalah nilai x_new
                        x_bar_new = CDbl(TextBox47.Text)
                        x_new = CDbl(TextBox47.Text)
                        s_new = 0
                        Stdev.Text = 0
                        Avg.Text = x_bar_new
                    ElseIf n = 1 Then
                        x_bar_new = CDbl(TextBox47.Text)
                        x_new = CDbl(TextBox47.Text)
                        s_new = 0
                        Stdev.Text = 0
                        Avg.Text = x_bar_new
                    ElseIf n = 2 Then
                        ' Mengambil nilai rata-rata lama dari sel yang sesuai di DataGridView
                        x_new = CDbl(TextBox47.Text)
                        ' Dim x_bar = 

                        ' Hitung rata-rata baru
                        x_bar_new = CDbl(Avg.Text)

                        Dim s As Double = CDbl(Math.Sqrt((CDbl(DataGridView1.Rows(0).Cells(1).Value) - CDbl(x_bar_new)) ^ 2 + CDbl(CDbl(TextBox47.Text) - CDbl(x_bar_new)) ^ 2))
                        Stdev.Text = Math.Round(s, 4)
                    ElseIf n > 2 Then
                        ' Mengambil nilai rata-rata lama dari sel yang sesuai di DataGridView
                        Dim x_bar = CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value)

                        ' Hitung rata-rata baru
                        x_bar_new = CDbl(Avg.Text)

                        ' Hitung standar deviasi lama dari sel yang sesuai di DataGridView
                        Dim s As Double = CDbl(Stdev.Text)

                        ' Hitung varians baru
                        Dim s2_new As Double = CDbl((n - 2) * CDbl(s ^ 2) / (rowNumber - 2)) + ((CDbl(x_new) - CDbl(x_bar)) ^ 2 / (n))

                        ' Hitung standar deviasi baru
                        s_new = Math.Round(Math.Sqrt(s2_new), 4)
                        Stdev.Text = Math.Round(s_new, 4)

                    End If

                    ' Hitung standar deviasi
                    Dim stdError As Double = Stdev.Text / Math.Sqrt(rowNumber)

                    Dim delta As Double = CDbl(TextBox47.Text) - CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(1).Value)


                    ' Hitung koefisien variasi
                    Dim cv As Double = (CDbl(Stdev.Text) / CDbl(Avg.Text)) * 100
                    CVBox.Text = Math.Round(cv, 4)

                    DataGridView1.Rows.Add(DataGridView1.Rows.Count, CDbl(TextBox47.Text), CDbl(Avg.Text), CDbl(Stdev.Text), stdError, delta, cv, "No Filter", "No Filter") ' Kolom 3 untuk rata-rata
                    ' Tambahkan titik ke Chart
                    If CInt(DataGridView1.Rows.Count - 2) = CInt(minSamp.Text) Then
                        CalculateStandardDeviation()
                    End If
                    Chart1.Series(0).Points.AddXY(rowNumber - 1, Math.Round(CSng(Stdev.Text), 3))
                    ' Menghilangkan label "Series1" dari legenda pada Chart1
                    Chart1.Legends(0).Enabled = False
                Else
                    Dim rataRata As Double = CDbl(TextBox47.Text)
                    Dim cv As Double = (CDbl(Stdev.Text) / CDbl(Avg.Text)) * 100
                    CVBox.Text = Math.Round(cv, 4)
                    Avg.Text = rataRata
                    DataGridView1.Rows.Add(DataGridView1.Rows.Count, CDbl(TextBox47.Text), CDbl(Avg.Text), CDbl(Stdev.Text), 0, 0, cv, "No Filter", "No Filter") ' Kolom 3 untuk rata-rata
                End If

            Else

                Try

                    '  CloseSerialPort()
                    ' Timer10.Stop()
                    ' Timer10.Enabled = False
                    CalAnt2.BackColor = Color.LightGreen
                    If SerialPort2.IsOpen Then
                        ' If AutoFilter.Text = "Yes" Then
                        btnReject.PerformClick()
                        'Else


                        'End If

                        'Label122.Text = "Open"

                        ' Tutup SerialPort sebelum membersihkan buffer

                        '  SerialPort1.Close()

                        '  UseDataResult.PerformClick()
                        '  RefreshChart()
                        ' SerialPort1.DiscardInBuffer()
                        ' Buang data dari buffer output
                        'SerialPort1.DiscardOutBuffer()
                    End If

                    Dim val As Single
                    val = 100 * (CSng(Stdev.Text) / CSng(Avg.Text))

                    ' End If
                    ' If Math.Round(val, 5) > CSng(TextBox47.Text) Then
                    'Form5.Show()

                Catch s As Exception
                    ' Tangani pengecualian
                End Try
            End If
        End If
        '  Else
        'Catch ex As Exception

        'End Try


    End Sub
    Private Sub CalStdev()
       
        Dim rowNumber As Integer = DataGridView1.Rows.Count + 1
        '   Try
        'Double.TryParse(TextBox27.Text, nilaiRandom) Or
        If IsNumeric(TextBox34.Text) AndAlso Not String.IsNullOrEmpty(TextBox34.Text) Then
            If TextBox34.Text.Length > 4 Then
                'MsgBox(TextBox34.Text.Length)
            End If


            If DataGridView1.Rows.Count <= CInt(minSamp.Text) Then
                If DataGridView1.Rows.Count > 1 Then
                    Dim rataRata As Double = ((rowNumber - 2) * CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value) + CDbl(TextBox34.Text)) / (rowNumber - 1)
                    Avg.Text = CDbl(Math.Round(rataRata, 2))
                    Dim x_new As Double = Double.Parse(TextBox34.Text)

                    Dim n As Integer = rowNumber - 1 ' jumlah data lama ya!
                    Dim x_bar_new As Double
                    Dim s_new As Double
                    ' s_new = 0
                    '  Stdev.Text = 0
                    If n < 1 Then
                        ' Jika tidak ada data sebelumnya, standar deviasi adalah nol dan rata-rata adalah nilai x_new
                        x_bar_new = CDbl(TextBox34.Text)
                        x_new = CDbl(TextBox34.Text)
                        s_new = 0
                        Stdev.Text = 0
                        Avg.Text = x_bar_new
                    ElseIf n = 1 Then
                        x_bar_new = CDbl(TextBox34.Text)
                        x_new = CDbl(TextBox34.Text)
                        s_new = 0
                        Stdev.Text = 0
                        Avg.Text = x_bar_new
                    ElseIf n = 2 Then
                        ' Mengambil nilai rata-rata lama dari sel yang sesuai di DataGridView
                        x_new = CDbl(TextBox34.Text)
                        ' Dim x_bar = 

                        ' Hitung rata-rata baru
                        x_bar_new = CDbl(Avg.Text)

                        Dim s As Double = CDbl(Math.Sqrt((CDbl(DataGridView1.Rows(0).Cells(1).Value) - CDbl(x_bar_new)) ^ 2 + CDbl(CDbl(TextBox34.Text) - CDbl(x_bar_new)) ^ 2))
                        Stdev.Text = Math.Round(s, 4)
                    ElseIf n > 2 Then
                        ' Mengambil nilai rata-rata lama dari sel yang sesuai di DataGridView
                        Dim x_bar = CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(2).Value)

                        ' Hitung rata-rata baru
                        x_bar_new = CDbl(Avg.Text)

                        ' Hitung standar deviasi lama dari sel yang sesuai di DataGridView
                        Dim s As Double = CDbl(Stdev.Text)

                        ' Hitung varians baru
                        Dim s2_new As Double = CDbl((n - 2) * CDbl(s ^ 2) / (rowNumber - 2)) + ((CDbl(x_new) - CDbl(x_bar)) ^ 2 / (n))

                        ' Hitung standar deviasi baru
                        s_new = Math.Round(Math.Sqrt(s2_new), 4)
                        Stdev.Text = Math.Round(s_new, 4)

                    End If

                    ' Hitung standar deviasi
                    Dim stdError As Double = Stdev.Text / Math.Sqrt(rowNumber)

                    Dim delta As Double = CDbl(TextBox34.Text) - CDbl(DataGridView1.Rows(DataGridView1.Rows.Count - 2).Cells(1).Value)


                    ' Hitung koefisien variasi
                    Dim cv As Double = (CDbl(Stdev.Text) / CDbl(Avg.Text)) * 100
                    CVBox.Text = Math.Round(cv, 4)

                    DataGridView1.Rows.Add(DataGridView1.Rows.Count, CDbl(TextBox34.Text), CDbl(Avg.Text), CDbl(Stdev.Text), stdError, delta, cv, "No Filter", "No Filter") ' Kolom 3 untuk rata-rata
                    ' Tambahkan titik ke Chart
                    If CInt(DataGridView1.Rows.Count - 2) = CInt(minSamp.Text) Then
                        CalculateStandardDeviation()
                    End If
                    Chart1.Series(0).Points.AddXY(rowNumber - 1, Math.Round(CSng(Stdev.Text), 3))
                    ' Menghilangkan label "Series1" dari legenda pada Chart1
                    Chart1.Legends(0).Enabled = False
                Else
                    Dim rataRata As Double = CDbl(TextBox34.Text)
                    Dim cv As Double = (CDbl(Stdev.Text) / CDbl(Avg.Text)) * 100
                    CVBox.Text = Math.Round(cv, 4)
                    Avg.Text = rataRata
                    DataGridView1.Rows.Add(DataGridView1.Rows.Count, CDbl(TextBox34.Text), CDbl(Avg.Text), CDbl(Stdev.Text), 0, 0, cv, "No Filter", "No Filter") ' Kolom 3 untuk rata-rata
                End If

            Else

                Try

                    '  CloseSerialPort()
                    ' Timer10.Stop()
                    ' Timer10.Enabled = False
                    CalAnt1.BackColor = Color.LightGreen

                    If SerialPort1.IsOpen Then
                        'Label122.Text = "Open"
                        '  If AutoFilter.Text = "Yes" Then
                        btnReject.PerformClick()


                        'lse
                        '     StopCal.PerformClick()
                        ' End If
                        ' Tutup SerialPort sebelum membersihkan buffer
                        ' StopCal.PerformClick()
                        '  SerialPort1.Close()

                        '  UseDataResult.PerformClick()
                        '  RefreshChart()
                        ' SerialPort1.DiscardInBuffer()
                        ' Buang data dari buffer output
                        'SerialPort1.DiscardOutBuffer()
                    End If

                        Dim val As Single
                        val = 100 * (CSng(Stdev.Text) / CSng(Avg.Text))

                        ' End If
                        ' If Math.Round(val, 5) > CSng(TextBox47.Text) Then
                        'Form5.Show()

                Catch s As Exception
                    ' Tangani pengecualian
                End Try
            End If
        End If
        '  Else
        'Catch ex As Exception
       
    End Sub
    Private Sub CalculateStandardDeviation()
        Dim values As New List(Of Double)

        ' Ambil semua nilai dari kolom pertama DataGridView
        For Each row As DataGridViewRow In DataGridView1.Rows
            ' Pastikan baris tidak kosong
            If Not row.IsNewRow Then
                Dim cellValue As Object = row.Cells(0).Value
                If IsNumeric(cellValue) Then
                    values.Add(Convert.ToDouble(cellValue))
                End If
            End If
        Next

        ' Hitung standar deviasi jika ada nilai
        If values.Count > 0 Then
            Dim mean As Double = values.Average()
            Dim sumOfSquaresOfDifferences As Double = values.Select(Function(val) (val - mean) ^ 2).Sum()
            Dim standardDeviation As Double = Sqrt(sumOfSquaresOfDifferences / values.Count)

            ' Tampilkan standar deviasi di TextBox
            Stdev.Text = standardDeviation.ToString()
            DataGridView1.Rows(DataGridView1.RowCount - 2).Cells(3).Value = Stdev.Text
        Else
            ' Jika tidak ada nilai, set teks TextBox ke string kosong atau pesan yang sesuai
            Stdev.Text = "No data"
        End If
    End Sub


    Private Sub TextBox45_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles TextBox45.TextChanged

    End Sub

    Private Sub Label121_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label121.Click

    End Sub

    Private Sub Label122_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label122.Click
        If Label122.Text = "Close" Then
            CalAnt1.BackColor = Color.Gainsboro
        End If
    End Sub

    Private Sub R23_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles R23.Click

    End Sub

    Private Sub Timer12_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer12.Tick
        Try
            ' Membuat query untuk mendapatkan informasi baterai
            Dim searcher As New ManagementObjectSearcher("SELECT * FROM Win32_Battery")
            Label63.Text = DateTime.Now.ToString("HH:mm:ss")
            For Each queryObj As ManagementObject In searcher.Get()
                ' Mendapatkan informasi kapasitas baterai
                Dim estimatedChargeRemaining As Integer = Convert.ToInt32(queryObj("EstimatedChargeRemaining"))
                Dim batteryStatus As Integer = Convert.ToInt32(queryObj("BatteryStatus"))
                Dim statusText As String = ""

                Select Case batteryStatus
                    Case 1
                        statusText = "Discharging"
                    Case 2
                        statusText = "AC Power"
                    Case 3
                        statusText = "Fully Charged"
                    Case 4
                        statusText = "Low"
                    Case 5
                        statusText = "Critical"
                    Case 6
                        statusText = "Charging"
                    Case 7
                        statusText = "Charging and High"
                    Case 8
                        statusText = "Charging and Low"
                    Case 9
                        statusText = "Charging and Critical"
                    Case 10
                        statusText = "Undefined"
                    Case 11
                        statusText = "Partially Charged"
                    Case Else
                        statusText = "Unknown"
                End Select

                ' Menampilkan hasil pada label
                Label62.Text = "Persentase Kapasitas Baterai: " & estimatedChargeRemaining.ToString() & "%. " & "Status Baterai: " & statusText
            Next



        Catch err As ManagementException
            MessageBox.Show("An error occurred while querying for WMI data: " & err.Message)
        End Try
    End Sub

    Private Sub Label115_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Label115.Click

    End Sub

    Private Sub Warning_TextChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Warning.TextChanged

    End Sub

    Private Sub Timer13_Tick(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles Timer13.Tick
        If SignalCal2.Text = "ON" And Label115.Text = "Ant1" Then
            System.Threading.Thread.Sleep(1000)
            CalAnt2.PerformClick()

            SignalCal2.Text = "OFF"
        ElseIf Label115.Text = "Ant2" Then
            SignalCal2.Text = "OFF"
            Timer13.Stop()
            Timer13.Enabled = False

        End If
    End Sub
End Class







